

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 22:56:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 12/02/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4520 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  002048                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _t
   108  002048  0005               	dw	5
   109  00204A  000F               	dw	15
   110  00204C  001E               	dw	30
   111  00204E  000A               	dw	10
   112                           
   113                           ;initializer for _processo
   114  002050  3D                 	db	low STR_1
   115  002051  06                 	db	high STR_1
   116  002052  4E                 	db	low STR_2
   117  002053  06                 	db	high STR_2
   118  002054  5C                 	db	low STR_3
   119  002055  06                 	db	high STR_3
   120  002056  67                 	db	low STR_4
   121  002057  06                 	db	high STR_4
   122                           
   123                           ;initializer for escolherProcesso@tecla
   124  002058  0010               	dw	16
   125                           
   126                           ;initializer for leTeclado@tecla
   127  00205A  0010               	dw	16
   128                           
   129                           	psect	smallconst
   130  000600                     __psmallconst:
   131                           	callstack 0
   132  000600  00                 	db	0
   133  000601                     _valor:
   134                           	callstack 0
   135  000601  3F                 	db	63
   136  000602  06                 	db	6
   137  000603  5B                 	db	91
   138  000604  4F                 	db	79
   139  000605  66                 	db	102
   140  000606  6D                 	db	109
   141  000607  7D                 	db	125
   142  000608  07                 	db	7
   143  000609  7F                 	db	127
   144  00060A  6F                 	db	111
   145  00060B  77                 	db	119
   146  00060C  7C                 	db	124
   147  00060D  39                 	db	57
   148  00060E  5E                 	db	94
   149  00060F  79                 	db	121
   150  000610  71                 	db	113
   151  000611                     __end_of_valor:
   152                           	callstack 0
   153  000611  55                 	db	85
   154  000612  4C                 	db	76
   155  000613  44                 	db	68
   156  000614  52                 	db	82
   157  000615  53                 	db	83
   158  000616  58                 	db	88
   159  000617  41                 	db	65
   160  000618  42                 	db	66
   161  000619  59                 	db	89
   162  00061A  73                 	db	115
   163  00061B                     __end_of_charKey:
   164                           	callstack 0
   165  0000                     _T0CON	set	4053
   166  0000                     _TMR0L	set	4054
   167  0000                     _TMR0H	set	4055
   168  0000                     _INTCON	set	4082
   169  0000                     _T2CON	set	4042
   170  0000                     _CCP2CON	set	4026
   171  0000                     _CCPR2L	set	4027
   172  0000                     _PR2	set	4043
   173  0000                     _TRISE	set	3990
   174  0000                     _TRISD	set	3989
   175  0000                     _TRISC	set	3988
   176  0000                     _TRISB	set	3987
   177  0000                     _TRISA	set	3986
   178  0000                     _PORTE	set	3972
   179  0000                     _PORTC	set	3970
   180  0000                     _PORTB	set	3969
   181  0000                     _PORTA	set	3968
   182  0000                     _ADRESL	set	4035
   183  0000                     _ADRESH	set	4036
   184  0000                     _ADCON2	set	4032
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON0	set	4034
   187  0000                     _PORTD	set	3971
   188  00061B                     STR_7:
   189  00061B  4D                 	db	77	;'M'
   190  00061C  6F                 	db	111	;'o'
   191  00061D  64                 	db	100	;'d'
   192  00061E  6F                 	db	111	;'o'
   193  00061F  20                 	db	32
   194  000620  65                 	db	101	;'e'
   195  000621  73                 	db	115	;'s'
   196  000622  63                 	db	99	;'c'
   197  000623  6F                 	db	111	;'o'
   198  000624  6C                 	db	108	;'l'
   199  000625  68                 	db	104	;'h'
   200  000626  69                 	db	105	;'i'
   201  000627  64                 	db	100	;'d'
   202  000628  6F                 	db	111	;'o'
   203  000629  3A                 	db	58	;':'
   204  00062A  20                 	db	32
   205  00062B  00                 	db	0
   206  00062C                     STR_8:
   207  00062C  45                 	db	69	;'E'
   208  00062D  73                 	db	115	;'s'
   209  00062E  63                 	db	99	;'c'
   210  00062F  6F                 	db	111	;'o'
   211  000630  6C                 	db	108	;'l'
   212  000631  68                 	db	104	;'h'
   213  000632  61                 	db	97	;'a'
   214  000633  20                 	db	32
   215  000634  6F                 	db	111	;'o'
   216  000635  20                 	db	32
   217  000636  6D                 	db	109	;'m'
   218  000637  6F                 	db	111	;'o'
   219  000638  64                 	db	100	;'d'
   220  000639  6F                 	db	111	;'o'
   221  00063A  3A                 	db	58	;':'
   222  00063B  20                 	db	32
   223  00063C  00                 	db	0
   224  00063D                     STR_1:
   225  00063D  45                 	db	69	;'E'
   226  00063E  73                 	db	115	;'s'
   227  00063F  71                 	db	113	;'q'
   228  000640  75                 	db	117	;'u'
   229  000641  65                 	db	101	;'e'
   230  000642  6E                 	db	110	;'n'
   231  000643  74                 	db	116	;'t'
   232  000644  61                 	db	97	;'a'
   233  000645  72                 	db	114	;'r'
   234  000646  20                 	db	32
   235  000647  63                 	db	99	;'c'
   236  000648  6F                 	db	111	;'o'
   237  000649  6D                 	db	109	;'m'
   238  00064A  69                 	db	105	;'i'
   239  00064B  64                 	db	100	;'d'
   240  00064C  61                 	db	97	;'a'
   241  00064D  00                 	db	0
   242  00064E                     STR_2:
   243  00064E  50                 	db	80	;'P'
   244  00064F  61                 	db	97	;'a'
   245  000650  6F                 	db	111	;'o'
   246  000651  20                 	db	32
   247  000652  64                 	db	100	;'d'
   248  000653  65                 	db	101	;'e'
   249  000654  20                 	db	32
   250  000655  71                 	db	113	;'q'
   251  000656  75                 	db	117	;'u'
   252  000657  65                 	db	101	;'e'
   253  000658  69                 	db	105	;'i'
   254  000659  6A                 	db	106	;'j'
   255  00065A  6F                 	db	111	;'o'
   256  00065B  00                 	db	0
   257  00065C                     STR_3:
   258  00065C  41                 	db	65	;'A'
   259  00065D  73                 	db	115	;'s'
   260  00065E  73                 	db	115	;'s'
   261  00065F  61                 	db	97	;'a'
   262  000660  72                 	db	114	;'r'
   263  000661  20                 	db	32
   264  000662  62                 	db	98	;'b'
   265  000663  6F                 	db	111	;'o'
   266  000664  6C                 	db	108	;'l'
   267  000665  6F                 	db	111	;'o'
   268  000666  00                 	db	0
   269  000667                     STR_4:
   270  000667  61                 	db	97	;'a'
   271  000668  71                 	db	113	;'q'
   272  000669  75                 	db	117	;'u'
   273  00066A  65                 	db	101	;'e'
   274  00066B  63                 	db	99	;'c'
   275  00066C  65                 	db	101	;'e'
   276  00066D  72                 	db	114	;'r'
   277  00066E  00                 	db	0
   278  00066F                     STR_6:
   279  00066F  20                 	db	32
   280  000670  20                 	db	32
   281  000671  20                 	db	32
   282  000672  20                 	db	32
   283  000673  20                 	db	32
   284  000674  00                 	db	0
   285  000675  00                 	db	0	; dummy byte at the end
   286  0000                     
   287                           ; #config settings
   288                           
   289                           	psect	cinit
   290  001DBE                     __pcinit:
   291                           	callstack 0
   292  001DBE                     start_initialization:
   293                           	callstack 0
   294  001DBE                     __initialization:
   295                           	callstack 0
   296                           
   297                           ; Initialize objects allocated to COMRAM (20 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  001DBE  0E48               	movlw	low __pidataCOMRAM
   300  001DC0  6EF6               	movwf	tblptrl,c
   301  001DC2  0E20               	movlw	high __pidataCOMRAM
   302  001DC4  6EF7               	movwf	tblptrh,c
   303  001DC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  001DC8  6EF8               	movwf	tblptru,c
   305  001DCA  EE00  F04B         	lfsr	0,__pdataCOMRAM
   306  001DCE  EE10 F014          	lfsr	1,20
   307  001DD2                     copy_data0:
   308  001DD2  0009               	tblrd		*+
   309  001DD4  CFF5 FFEE          	movff	tablat,postinc0
   310  001DD8  50E5               	movf	postdec1,w,c
   311  001DDA  50E1               	movf	fsr1l,w,c
   312  001DDC  E1FA               	bnz	copy_data0
   313                           
   314                           ; Clear objects allocated to COMRAM (22 bytes)
   315  001DDE  EE00  F035         	lfsr	0,__pbssCOMRAM
   316  001DE2  0E16               	movlw	22
   317  001DE4                     clear_0:
   318  001DE4  6AEE               	clrf	postinc0,c
   319  001DE6  06E8               	decf	wreg,f,c
   320  001DE8  E1FD               	bnz	clear_0
   321  001DEA                     end_of_initialization:
   322                           	callstack 0
   323  001DEA                     __end_of__initialization:
   324                           	callstack 0
   325  001DEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326  001DEC  6EF8               	movwf	tblptru,c
   327  001DEE  0100               	movlb	0
   328  001DF0  EFF3  F008         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331  000035                     __pbssCOMRAM:
   332                           	callstack 0
   333  000035                     kpDebounce@oldRead:
   334                           	callstack 0
   335  000035                     	ds	2
   336  000037                     kpDebounce@newRead:
   337                           	callstack 0
   338  000037                     	ds	2
   339  000039                     _keys:
   340                           	callstack 0
   341  000039                     	ds	2
   342  00003B                     _segundos:
   343                           	callstack 0
   344  00003B                     	ds	2
   345  00003D                     _minutos:
   346                           	callstack 0
   347  00003D                     	ds	2
   348  00003F                     _i:
   349                           	callstack 0
   350  00003F                     	ds	2
   351  000041                     _started:
   352                           	callstack 0
   353  000041                     	ds	1
   354  000042                     _v3:
   355                           	callstack 0
   356  000042                     	ds	1
   357  000043                     _v2:
   358                           	callstack 0
   359  000043                     	ds	1
   360  000044                     _v1:
   361                           	callstack 0
   362  000044                     	ds	1
   363  000045                     _v0:
   364                           	callstack 0
   365  000045                     	ds	1
   366  000046                     _display:
   367                           	callstack 0
   368  000046                     	ds	1
   369  000047                     kpDebounce@tempo:
   370                           	callstack 0
   371  000047                     	ds	1
   372  000048                     _fim:
   373                           	callstack 0
   374  000048                     	ds	1
   375  000049                     _start:
   376                           	callstack 0
   377  000049                     	ds	1
   378  00004A                     _state:
   379                           	callstack 0
   380  00004A                     	ds	1
   381                           
   382                           	psect	dataCOMRAM
   383  00004B                     __pdataCOMRAM:
   384                           	callstack 0
   385  00004B                     _t:
   386                           	callstack 0
   387  00004B                     	ds	8
   388  000053                     _processo:
   389                           	callstack 0
   390  000053                     	ds	8
   391  00005B                     escolherProcesso@tecla:
   392                           	callstack 0
   393  00005B                     	ds	2
   394  00005D                     leTeclado@tecla:
   395                           	callstack 0
   396  00005D                     	ds	2
   397                           
   398                           	psect	cstackCOMRAM
   399  000001                     __pcstackCOMRAM:
   400                           	callstack 0
   401  000001                     ?_kpRead:
   402                           	callstack 0
   403  000001                     ?_digitalRead:
   404                           	callstack 0
   405  000001                     ?___aldiv:
   406                           	callstack 0
   407  000001                     digitalWrite@pin:
   408                           	callstack 0
   409  000001                     digitalRead@pin:
   410                           	callstack 0
   411  000001                     pinMode@pin:
   412                           	callstack 0
   413  000001                     delayMicro@a:
   414                           	callstack 0
   415  000001                     delayMili@a:
   416                           	callstack 0
   417  000001                     timerReset@tempo:
   418                           	callstack 0
   419  000001                     ___aldiv@dividend:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0x0
   423  000001                     	ds	2
   424  000003                     ??_digitalRead:
   425  000003                     ??_delayMili:
   426  000003                     digitalWrite@value:
   427                           	callstack 0
   428  000003                     pinMode@type:
   429                           	callstack 0
   430  000003                     timerReset@ciclos:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434  000003                     	ds	1
   435  000004                     delayMili@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x3
   439  000004                     	ds	1
   440  000005                     ??_pinMode:
   441  000005                     ??_digitalWrite:
   442  000005                     ___aldiv@divisor:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x4
   446  000005                     	ds	2
   447  000007                     i2c_write_bit@bit:
   448                           	callstack 0
   449  000007                     i2c_read_bit@bit:
   450                           	callstack 0
   451  000007                     soWrite@value:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x6
   455  000007                     	ds	1
   456  000008                     i2cWriteByte@send_stop:
   457                           	callstack 0
   458  000008                     i2cReadByte@send_stop:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x7
   462  000008                     	ds	1
   463  000009                     ??_i2cReadByte:
   464  000009                     soWrite@i:
   465                           	callstack 0
   466  000009                     i2cWriteByte@byte:
   467                           	callstack 0
   468  000009                     ___aldiv@counter:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x8
   472  000009                     	ds	1
   473  00000A                     ??_kpDebounce:
   474  00000A                     ??_ssdUpdate:
   475  00000A                     i2cWriteByte@send_start:
   476                           	callstack 0
   477  00000A                     ___aldiv@sign:
   478                           	callstack 0
   479  00000A                     pushNibble@rs:
   480                           	callstack 0
   481  00000A                     pushByte@rs:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x9
   485  00000A                     	ds	1
   486  00000B                     i2cWriteByte@bit:
   487                           	callstack 0
   488  00000B                     ___aldiv@quotient:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0xA
   492  00000B                     	ds	1
   493  00000C                     ??_pushByte:
   494  00000C                     pushNibble@value:
   495                           	callstack 0
   496  00000C                     i2cReadByte@nack:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0xB
   500  00000C                     	ds	1
   501  00000D                     pushByte@value:
   502                           	callstack 0
   503  00000D                     kpDebounce@i:
   504                           	callstack 0
   505  00000D                     i2cReadByte@byte:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0xC
   509  00000D                     	ds	1
   510  00000E                     lcdCommand@value:
   511                           	callstack 0
   512  00000E                     lcdChar@value:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0xD
   516  00000E                     	ds	1
   517  00000F                     lcdString@msg:
   518                           	callstack 0
   519  00000F                     pwmFrequency@freq:
   520                           	callstack 0
   521  00000F                     i2cReadByte@bit:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xE
   525  00000F                     	ds	2
   526  000011                     ??_lcdString:
   527  000011                     ?_dsReadData:
   528                           	callstack 0
   529  000011                     dsReadData@address:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x10
   533  000011                     	ds	2
   534  000013                     ??_dsReadData:
   535  000013                     lcdString@i:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x12
   539  000013                     	ds	1
   540  000014                     dsReadData@result:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x13
   544  000014                     	ds	1
   545  000015                     
   546                           ; 1 bytes @ 0x14
   547  000015                     	ds	1
   548  000016                     ?___awdiv:
   549                           	callstack 0
   550  000016                     ___awdiv@dividend:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x15
   554  000016                     	ds	2
   555  000018                     ___awdiv@divisor:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x17
   559  000018                     	ds	2
   560  00001A                     ___awdiv@counter:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x19
   564  00001A                     	ds	1
   565  00001B                     ___awdiv@sign:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x1A
   569  00001B                     	ds	1
   570  00001C                     ___awdiv@quotient:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x1B
   574  00001C                     	ds	2
   575  00001E                     ?___wmul:
   576                           	callstack 0
   577  00001E                     ___wmul@multiplier:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1D
   581  00001E                     	ds	2
   582  000020                     ___wmul@multiplicand:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1F
   586  000020                     	ds	2
   587  000022                     ___wmul@product:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x21
   591  000022                     	ds	2
   592  000024                     ?_bcd2dec:
   593                           	callstack 0
   594  000024                     bcd2dec@value:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x23
   598  000024                     	ds	2
   599  000026                     ??_bcd2dec:
   600                           
   601                           ; 1 bytes @ 0x25
   602  000026                     	ds	2
   603  000028                     ?___awmod:
   604                           	callstack 0
   605  000028                     ___awmod@dividend:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x27
   609  000028                     	ds	2
   610  00002A                     ___awmod@divisor:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x29
   614  00002A                     	ds	2
   615  00002C                     ___awmod@counter:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x2B
   619  00002C                     	ds	1
   620  00002D                     ___awmod@sign:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x2C
   624  00002D                     	ds	1
   625  00002E                     ssdDigit@pos:
   626                           	callstack 0
   627  00002E                     _inicio$1310:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2D
   631  00002E                     	ds	1
   632  00002F                     ssdDigit@val:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x2E
   636  00002F                     	ds	1
   637  000030                     ??_main:
   638                           
   639                           ; 1 bytes @ 0x2F
   640  000030                     	ds	2
   641  000032                     main@tempo:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x31
   645  000032                     	ds	2
   646  000034                     main@slot:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x33
   650  000034                     	ds	1
   651                           
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 122 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  tempo           2   49[COMRAM] unsigned int 
   662 ;;  slot            1   51[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   672 ;;      Params:         0       0       0       0       0       0       0
   673 ;;      Locals:         3       0       0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0
   675 ;;      Totals:         5       0       0       0       0       0       0
   676 ;;Total ram usage:        5 bytes
   677 ;; Hardware stack levels required when called: 7
   678 ;; This function calls:
   679 ;;		_adcInit
   680 ;;		_atualizaLCD
   681 ;;		_atualizaSSD
   682 ;;		_escolherProcesso
   683 ;;		_inicio
   684 ;;		_kpInit
   685 ;;		_lcdCommand
   686 ;;		_lcdInit
   687 ;;		_leTeclado
   688 ;;		_pwmInit
   689 ;;		_ssdInit
   690 ;;		_ssdUpdate
   691 ;;		_timer
   692 ;;		_timerInit
   693 ;;		_timerReset
   694 ;;		_timerWait
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  0011E6                     __ptext0:
   702                           	callstack 0
   703  0011E6                     _main:
   704                           	callstack 24
   705  0011E6                     
   706                           ;main.c: 123:     char slot = 0;
   707  0011E6  0E00               	movlw	0
   708  0011E8  6E34               	movwf	main@slot^0,c
   709                           
   710                           ;main.c: 124:     unsigned int tempo = 0;
   711  0011EA  0E00               	movlw	0
   712  0011EC  6E33               	movwf	(main@tempo+1)^0,c
   713  0011EE  0E00               	movlw	0
   714  0011F0  6E32               	movwf	main@tempo^0,c
   715  0011F2                     
   716                           ;main.c: 126:     adcInit();
   717  0011F2  ECC0  F00D         	call	_adcInit	;wreg free
   718  0011F6                     
   719                           ;main.c: 127:     ssdInit();
   720  0011F6  EC43  F00D         	call	_ssdInit	;wreg free
   721  0011FA                     
   722                           ;main.c: 128:     lcdInit();
   723  0011FA  ECD8  F00A         	call	_lcdInit	;wreg free
   724  0011FE                     
   725                           ;main.c: 129:     kpInit();
   726  0011FE  ECFA  F00E         	call	_kpInit	;wreg free
   727  001202                     
   728                           ;main.c: 130:     timerInit();
   729  001202  EC3B  F010         	call	_timerInit	;wreg free
   730  001206                     
   731                           ;main.c: 131:     pwmInit();
   732  001206  EC17  F010         	call	_pwmInit	;wreg free
   733                           
   734                           ;main.c: 135:     PORTD = 0b00000001;
   735  00120A  0E01               	movlw	1
   736  00120C  6E83               	movwf	131,c	;volatile
   737                           
   738                           ;main.c: 138:     while (state == 0) {
   739  00120E  EF0D  F009         	goto	l2753
   740  001212                     l2749:
   741                           
   742                           ;main.c: 139:         inicio();
   743  001212  EC3B  F003         	call	_inicio	;wreg free
   744  001216                     
   745                           ;main.c: 140:         leTeclado();
   746  001216  EC23  F00C         	call	_leTeclado	;wreg free
   747  00121A                     l2753:
   748                           
   749                           ;main.c: 138:     while (state == 0) {
   750  00121A  504A               	movf	_state^0,w,c
   751  00121C  B4D8               	btfsc	status,2,c
   752  00121E  EF13  F009         	goto	u2451
   753  001222  EF15  F009         	goto	u2450
   754  001226                     u2451:
   755  001226  EF09  F009         	goto	l2749
   756  00122A                     u2450:
   757  00122A                     
   758                           ;main.c: 142:     lcdCommand(0x01);
   759  00122A  0E01               	movlw	1
   760  00122C  EC08  F010         	call	_lcdCommand
   761  001230                     
   762                           ;main.c: 143:     state = 0;
   763  001230  0E00               	movlw	0
   764  001232  6E4A               	movwf	_state^0,c
   765                           
   766                           ;main.c: 145:     while (state == 0) {
   767  001234  EF20  F009         	goto	l2763
   768  001238                     l2759:
   769                           
   770                           ;main.c: 146:         escolherProcesso();
   771  001238  EC13  F00A         	call	_escolherProcesso	;wreg free
   772  00123C                     
   773                           ;main.c: 147:         leTeclado();
   774  00123C  EC23  F00C         	call	_leTeclado	;wreg free
   775  001240                     l2763:
   776                           
   777                           ;main.c: 145:     while (state == 0) {
   778  001240  504A               	movf	_state^0,w,c
   779  001242  B4D8               	btfsc	status,2,c
   780  001244  EF26  F009         	goto	u2461
   781  001248  EF28  F009         	goto	u2460
   782  00124C                     u2461:
   783  00124C  EF1C  F009         	goto	l2759
   784  001250                     u2460:
   785  001250                     
   786                           ;main.c: 149:     state = 0;
   787  001250  0E00               	movlw	0
   788  001252  6E4A               	movwf	_state^0,c
   789  001254                     
   790                           ;main.c: 150:     lcdCommand(0x01);
   791  001254  0E01               	movlw	1
   792  001256  EC08  F010         	call	_lcdCommand
   793                           
   794                           ;main.c: 151:     while (state == 0) {
   795  00125A  EF33  F009         	goto	l2773
   796  00125E                     l2769:
   797                           
   798                           ;main.c: 152:         atualizaLCD();
   799  00125E  ECC3  F00E         	call	_atualizaLCD	;wreg free
   800  001262                     
   801                           ;main.c: 153:         leTeclado();
   802  001262  EC23  F00C         	call	_leTeclado	;wreg free
   803  001266                     l2773:
   804                           
   805                           ;main.c: 151:     while (state == 0) {
   806  001266  504A               	movf	_state^0,w,c
   807  001268  B4D8               	btfsc	status,2,c
   808  00126A  EF39  F009         	goto	u2471
   809  00126E  EF3B  F009         	goto	u2470
   810  001272                     u2471:
   811  001272  EF2F  F009         	goto	l2769
   812  001276                     u2470:
   813  001276                     l2775:
   814                           
   815                           ;main.c: 157:         timerReset(15000);
   816  001276  0E3A               	movlw	58
   817  001278  6E02               	movwf	(timerReset@tempo+1)^0,c
   818  00127A  0E98               	movlw	152
   819  00127C  6E01               	movwf	timerReset@tempo^0,c
   820  00127E  ECE8  F00F         	call	_timerReset	;wreg free
   821                           
   822                           ;main.c: 158:         switch (slot) {
   823  001282  EF66  F009         	goto	l2795
   824  001286                     l2777:
   825                           
   826                           ;main.c: 160:                 leTeclado();
   827  001286  EC23  F00C         	call	_leTeclado	;wreg free
   828  00128A                     
   829                           ;main.c: 161:                 slot = 1;
   830  00128A  0E01               	movlw	1
   831  00128C  6E34               	movwf	main@slot^0,c
   832                           
   833                           ;main.c: 162:                 break;
   834  00128E  EF7B  F009         	goto	l2797
   835  001292                     l2781:
   836                           
   837                           ;main.c: 164:                 PORTD = 0b00000010;
   838  001292  0E02               	movlw	2
   839  001294  6E83               	movwf	131,c	;volatile
   840  001296                     
   841                           ;main.c: 165:                 if (tempo > 100) {
   842  001296  5033               	movf	(main@tempo+1)^0,w,c
   843  001298  E109               	bnz	u2480
   844  00129A  0E65               	movlw	101
   845  00129C  5C32               	subwf	main@tempo^0,w,c
   846  00129E  A0D8               	btfss	status,0,c
   847  0012A0  EF54  F009         	goto	u2481
   848  0012A4  EF56  F009         	goto	u2480
   849  0012A8                     u2481:
   850  0012A8  EF5C  F009         	goto	l2789
   851  0012AC                     u2480:
   852  0012AC                     
   853                           ;main.c: 166:                     tempo = 0;
   854  0012AC  0E00               	movlw	0
   855  0012AE  6E33               	movwf	(main@tempo+1)^0,c
   856  0012B0  0E00               	movlw	0
   857  0012B2  6E32               	movwf	main@tempo^0,c
   858  0012B4                     
   859                           ;main.c: 167:                     timer();
   860  0012B4  ECDB  F00B         	call	_timer	;wreg free
   861  0012B8                     l2789:
   862                           
   863                           ;main.c: 169:                 atualizaSSD();
   864  0012B8  EC8A  F00B         	call	_atualizaSSD	;wreg free
   865                           
   866                           ;main.c: 170:                 slot = 0;
   867  0012BC  0E00               	movlw	0
   868  0012BE  6E34               	movwf	main@slot^0,c
   869                           
   870                           ;main.c: 171:                 break;
   871  0012C0  EF7B  F009         	goto	l2797
   872  0012C4                     l2791:
   873                           
   874                           ;main.c: 173:                 slot = 0;
   875  0012C4  0E00               	movlw	0
   876  0012C6  6E34               	movwf	main@slot^0,c
   877                           
   878                           ;main.c: 174:                 break;
   879  0012C8  EF7B  F009         	goto	l2797
   880  0012CC                     l2795:
   881  0012CC  5034               	movf	main@slot^0,w,c
   882  0012CE  6E30               	movwf	??_main^0,c
   883  0012D0  6A31               	clrf	(??_main+1)^0,c
   884                           
   885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 1, Range of values is 0 to 0
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte            4     3 (average)
   891                           ;	Chosen strategy is simple_byte
   892  0012D2  5031               	movf	(??_main+1)^0,w,c
   893  0012D4  0A00               	xorlw	0	; case 0
   894  0012D6  B4D8               	btfsc	status,2,c
   895  0012D8  EF70  F009         	goto	l2853
   896  0012DC  EF62  F009         	goto	l2791
   897  0012E0                     l2853:
   898                           
   899                           ; Switch size 1, requested type "simple"
   900                           ; Number of cases is 2, Range of values is 0 to 1
   901                           ; switch strategies available:
   902                           ; Name         Instructions Cycles
   903                           ; simple_byte            7     4 (average)
   904                           ;	Chosen strategy is simple_byte
   905  0012E0  5030               	movf	??_main^0,w,c
   906  0012E2  0A00               	xorlw	0	; case 0
   907  0012E4  B4D8               	btfsc	status,2,c
   908  0012E6  EF43  F009         	goto	l2777
   909  0012EA  0A01               	xorlw	1	; case 1
   910  0012EC  B4D8               	btfsc	status,2,c
   911  0012EE  EF49  F009         	goto	l2781
   912  0012F2  EF62  F009         	goto	l2791
   913  0012F6                     l2797:
   914                           
   915                           ;main.c: 176:         if (start != 0) {
   916  0012F6  5049               	movf	_start^0,w,c
   917  0012F8  B4D8               	btfsc	status,2,c
   918  0012FA  EF81  F009         	goto	u2491
   919  0012FE  EF83  F009         	goto	u2490
   920  001302                     u2491:
   921  001302  EF85  F009         	goto	l2801
   922  001306                     u2490:
   923  001306                     
   924                           ;main.c: 177:             tempo++;
   925  001306  4A32               	infsnz	main@tempo^0,f,c
   926  001308  2A33               	incf	(main@tempo+1)^0,f,c
   927  00130A                     l2801:
   928                           
   929                           ;main.c: 179:         ssdUpdate();
   930  00130A  ECED  F006         	call	_ssdUpdate	;wreg free
   931  00130E                     
   932                           ;main.c: 180:         timerWait();
   933  00130E  EC2E  F010         	call	_timerWait	;wreg free
   934                           
   935                           ;main.c: 181:     }
   936  001312  EF3B  F009         	goto	l2775
   937  001316  EF00  F000         	goto	start
   938  00131A                     __end_of_main:
   939                           	callstack 0
   940                           
   941 ;; *************** function _timerWait *****************
   942 ;; Defined at:
   943 ;;		line 31 in file "timer.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		None
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text1
   971  00205C                     __ptext1:
   972                           	callstack 0
   973  00205C                     _timerWait:
   974                           	callstack 30
   975  00205C                     l379:
   976  00205C  A4F2               	btfss	242,2,c	;volatile
   977  00205E  EF33  F010         	goto	u1171
   978  002062  EF35  F010         	goto	u1170
   979  002066                     u1171:
   980  002066  EF2E  F010         	goto	l379
   981  00206A                     u1170:
   982  00206A  0012               	return		;funcret
   983  00206C                     __end_of_timerWait:
   984                           	callstack 0
   985                           
   986 ;; *************** function _timerReset *****************
   987 ;; Defined at:
   988 ;;		line 37 in file "timer.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  tempo           2    0[COMRAM] unsigned int 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  ciclos          2    2[COMRAM] unsigned int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1002 ;;      Params:         2       0       0       0       0       0       0
  1003 ;;      Locals:         2       0       0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0
  1005 ;;      Totals:         4       0       0       0       0       0       0
  1006 ;;Total ram usage:        4 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text2
  1016  001FD0                     __ptext2:
  1017                           	callstack 0
  1018  001FD0                     _timerReset:
  1019                           	callstack 30
  1020  001FD0                     
  1021                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1022  001FD0  90D8               	bcf	status,0,c
  1023  001FD2  3401               	rlcf	timerReset@tempo^0,w,c
  1024  001FD4  6E03               	movwf	timerReset@ciclos^0,c
  1025  001FD6  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1026  001FD8  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1027  001FDA                     
  1028                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1029  001FDA  1E03               	comf	timerReset@ciclos^0,f,c
  1030  001FDC  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1031  001FDE                     
  1032                           ;timer.c: 47:     ciclos -=50;
  1033  001FDE  0E32               	movlw	50
  1034  001FE0  5E03               	subwf	timerReset@ciclos^0,f,c
  1035  001FE2  0E00               	movlw	0
  1036  001FE4  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1037  001FE6                     
  1038                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1039  001FE6  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1040  001FE8  6ED7               	movwf	215,c	;volatile
  1041  001FEA                     
  1042                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1043  001FEA  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1044  001FEE                     
  1045                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1046  001FEE  94F2               	bcf	242,2,c	;volatile
  1047  001FF0  0012               	return		;funcret
  1048  001FF2                     __end_of_timerReset:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _timerInit *****************
  1052 ;; Defined at:
  1053 ;;		line 55 in file "timer.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1067 ;;      Params:         0       0       0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0
  1070 ;;      Totals:         0       0       0       0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text3
  1081  002076                     __ptext3:
  1082                           	callstack 0
  1083  002076                     _timerInit:
  1084                           	callstack 30
  1085  002076                     
  1086                           ;timer.c: 57:  T0CON = 0b00001000;
  1087  002076  0E08               	movlw	8
  1088  002078  6ED5               	movwf	213,c	;volatile
  1089  00207A                     
  1090                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1091  00207A  8ED5               	bsf	213,7,c	;volatile
  1092  00207C  0012               	return		;funcret
  1093  00207E                     __end_of_timerInit:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _timer *****************
  1097 ;; Defined at:
  1098 ;;		line 106 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text4
  1126  0017B6                     __ptext4:
  1127                           	callstack 0
  1128  0017B6                     _timer:
  1129                           	callstack 30
  1130  0017B6                     
  1131                           ;main.c: 107:     if (start != 0) {
  1132  0017B6  5049               	movf	_start^0,w,c
  1133  0017B8  B4D8               	btfsc	status,2,c
  1134  0017BA  EFE1  F00B         	goto	u1101
  1135  0017BE  EFE3  F00B         	goto	u1100
  1136  0017C2                     u1101:
  1137  0017C2  EF22  F00C         	goto	l84
  1138  0017C6                     u1100:
  1139  0017C6                     
  1140                           ;main.c: 108:         segundos--;
  1141  0017C6  063B               	decf	_segundos^0,f,c
  1142  0017C8  A0D8               	btfss	status,0,c
  1143  0017CA  063C               	decf	(_segundos+1)^0,f,c
  1144  0017CC                     
  1145                           ;main.c: 109:         if ((segundos < 0)&&(minutos > 0)) {
  1146  0017CC  BE3C               	btfsc	(_segundos+1)^0,7,c
  1147  0017CE  EFED  F00B         	goto	u1110
  1148  0017D2  EFEB  F00B         	goto	u1111
  1149  0017D6                     u1111:
  1150  0017D6  EF01  F00C         	goto	l1783
  1151  0017DA                     u1110:
  1152  0017DA  BE3E               	btfsc	(_minutos+1)^0,7,c
  1153  0017DC  EFF8  F00B         	goto	u1121
  1154  0017E0  503E               	movf	(_minutos+1)^0,w,c
  1155  0017E2  E108               	bnz	u1120
  1156  0017E4  043D               	decf	_minutos^0,w,c
  1157  0017E6  A0D8               	btfss	status,0,c
  1158  0017E8  EFF8  F00B         	goto	u1121
  1159  0017EC  EFFA  F00B         	goto	u1120
  1160  0017F0                     u1121:
  1161  0017F0  EF01  F00C         	goto	l1783
  1162  0017F4                     u1120:
  1163  0017F4                     
  1164                           ;main.c: 110:             segundos = 59;
  1165  0017F4  0E00               	movlw	0
  1166  0017F6  6E3C               	movwf	(_segundos+1)^0,c
  1167  0017F8  0E3B               	movlw	59
  1168  0017FA  6E3B               	movwf	_segundos^0,c
  1169  0017FC                     
  1170                           ;main.c: 111:             minutos--;
  1171  0017FC  063D               	decf	_minutos^0,f,c
  1172  0017FE  A0D8               	btfss	status,0,c
  1173  001800  063E               	decf	(_minutos+1)^0,f,c
  1174  001802                     l1783:
  1175                           
  1176                           ;main.c: 113:         if ((segundos < 0)&&(minutos == 0)) {
  1177  001802  BE3C               	btfsc	(_segundos+1)^0,7,c
  1178  001804  EF08  F00C         	goto	u1130
  1179  001808  EF06  F00C         	goto	u1131
  1180  00180C                     u1131:
  1181  00180C  EF22  F00C         	goto	l84
  1182  001810                     u1130:
  1183  001810  503D               	movf	_minutos^0,w,c
  1184  001812  103E               	iorwf	(_minutos+1)^0,w,c
  1185  001814  A4D8               	btfss	status,2,c
  1186  001816  EF0F  F00C         	goto	u1141
  1187  00181A  EF11  F00C         	goto	u1140
  1188  00181E                     u1141:
  1189  00181E  EF22  F00C         	goto	l84
  1190  001822                     u1140:
  1191  001822                     
  1192                           ;main.c: 114:             segundos = 0;
  1193  001822  0E00               	movlw	0
  1194  001824  6E3C               	movwf	(_segundos+1)^0,c
  1195  001826  0E00               	movlw	0
  1196  001828  6E3B               	movwf	_segundos^0,c
  1197                           
  1198                           ;main.c: 115:             start = !start;
  1199  00182A  5049               	movf	_start^0,w,c
  1200  00182C  B4D8               	btfsc	status,2,c
  1201  00182E  EF1B  F00C         	goto	u1151
  1202  001832  EF1E  F00C         	goto	u1150
  1203  001836                     u1151:
  1204  001836  0E01               	movlw	1
  1205  001838  EF1F  F00C         	goto	u1160
  1206  00183C                     u1150:
  1207  00183C  0E00               	movlw	0
  1208  00183E                     u1160:
  1209  00183E  6E49               	movwf	_start^0,c
  1210                           
  1211                           ;main.c: 116:             fim = 1;
  1212  001840  0E01               	movlw	1
  1213  001842  6E48               	movwf	_fim^0,c
  1214  001844                     l84:
  1215  001844  0012               	return		;funcret
  1216  001846                     __end_of_timer:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _ssdUpdate *****************
  1220 ;; Defined at:
  1221 ;;		line 50 in file "ssd.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1235 ;;      Params:         0       0       0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0
  1237 ;;      Temps:          2       0       0       0       0       0       0
  1238 ;;      Totals:         2       0       0       0       0       0       0
  1239 ;;Total ram usage:        2 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 3
  1242 ;; This function calls:
  1243 ;;		_digitalWrite
  1244 ;;		_soWrite
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text5
  1251  000DDA                     __ptext5:
  1252                           	callstack 0
  1253  000DDA                     _ssdUpdate:
  1254                           	callstack 27
  1255  000DDA                     
  1256                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1257  000DDA  0E00               	movlw	0
  1258  000DDC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1259  000DDE  0E18               	movlw	24
  1260  000DE0  6E01               	movwf	digitalWrite@pin^0,c
  1261  000DE2  0E00               	movlw	0
  1262  000DE4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1263  000DE6  0E00               	movlw	0
  1264  000DE8  6E03               	movwf	digitalWrite@value^0,c
  1265  000DEA  EC9F  F004         	call	_digitalWrite	;wreg free
  1266                           
  1267                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1268  000DEE  0E00               	movlw	0
  1269  000DF0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1270  000DF2  0E19               	movlw	25
  1271  000DF4  6E01               	movwf	digitalWrite@pin^0,c
  1272  000DF6  0E00               	movlw	0
  1273  000DF8  6E04               	movwf	(digitalWrite@value+1)^0,c
  1274  000DFA  0E00               	movlw	0
  1275  000DFC  6E03               	movwf	digitalWrite@value^0,c
  1276  000DFE  EC9F  F004         	call	_digitalWrite	;wreg free
  1277                           
  1278                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1279  000E02  0E00               	movlw	0
  1280  000E04  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1281  000E06  0E1A               	movlw	26
  1282  000E08  6E01               	movwf	digitalWrite@pin^0,c
  1283  000E0A  0E00               	movlw	0
  1284  000E0C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1285  000E0E  0E00               	movlw	0
  1286  000E10  6E03               	movwf	digitalWrite@value^0,c
  1287  000E12  EC9F  F004         	call	_digitalWrite	;wreg free
  1288                           
  1289                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1290  000E16  0E00               	movlw	0
  1291  000E18  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1292  000E1A  0E1B               	movlw	27
  1293  000E1C  6E01               	movwf	digitalWrite@pin^0,c
  1294  000E1E  0E00               	movlw	0
  1295  000E20  6E04               	movwf	(digitalWrite@value+1)^0,c
  1296  000E22  0E00               	movlw	0
  1297  000E24  6E03               	movwf	digitalWrite@value^0,c
  1298  000E26  EC9F  F004         	call	_digitalWrite	;wreg free
  1299                           
  1300                           ;ssd.c: 60:     soWrite(0x00);
  1301  000E2A  0E00               	movlw	0
  1302  000E2C  6E08               	movwf	(soWrite@value+1)^0,c
  1303  000E2E  0E00               	movlw	0
  1304  000E30  6E07               	movwf	soWrite@value^0,c
  1305  000E32  EC99  F00D         	call	_soWrite	;wreg free
  1306                           
  1307                           ;ssd.c: 62:     switch (display)
  1308  000E36  EF85  F007         	goto	l2729
  1309  000E3A                     l2701:
  1310                           
  1311                           ;ssd.c: 65:             soWrite(valor[v0]);
  1312  000E3A  0E01               	movlw	low _valor
  1313  000E3C  2445               	addwf	_v0^0,w,c
  1314  000E3E  6EF6               	movwf	tblptrl,c
  1315  000E40  6AF7               	clrf	tblptrh,c
  1316  000E42  0E06               	movlw	high _valor
  1317  000E44  22F7               	addwfc	tblptrh,f,c
  1318  000E46                     	if	0	;There are less than 3 active tblptr bytes
  1319  000E46                     	endif
  1320  000E46  0008               	tblrd		*
  1321  000E48  50F5               	movf	tablat,w,c
  1322  000E4A  6E07               	movwf	soWrite@value^0,c
  1323  000E4C  6A08               	clrf	(soWrite@value+1)^0,c
  1324  000E4E  EC99  F00D         	call	_soWrite	;wreg free
  1325  000E52                     
  1326                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1327  000E52  0E00               	movlw	0
  1328  000E54  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1329  000E56  0E18               	movlw	24
  1330  000E58  6E01               	movwf	digitalWrite@pin^0,c
  1331  000E5A  0E00               	movlw	0
  1332  000E5C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1333  000E5E  0E01               	movlw	1
  1334  000E60  6E03               	movwf	digitalWrite@value^0,c
  1335  000E62  EC9F  F004         	call	_digitalWrite	;wreg free
  1336  000E66                     
  1337                           ;ssd.c: 67:             display = 1;
  1338  000E66  0E01               	movlw	1
  1339  000E68  6E46               	movwf	_display^0,c
  1340                           
  1341                           ;ssd.c: 68:             break;
  1342  000E6A  EFA2  F007         	goto	l425
  1343  000E6E                     l2707:
  1344                           
  1345                           ;ssd.c: 71:             soWrite(valor[v1]);
  1346  000E6E  0E01               	movlw	low _valor
  1347  000E70  2444               	addwf	_v1^0,w,c
  1348  000E72  6EF6               	movwf	tblptrl,c
  1349  000E74  6AF7               	clrf	tblptrh,c
  1350  000E76  0E06               	movlw	high _valor
  1351  000E78  22F7               	addwfc	tblptrh,f,c
  1352  000E7A                     	if	0	;There are less than 3 active tblptr bytes
  1353  000E7A                     	endif
  1354  000E7A  0008               	tblrd		*
  1355  000E7C  50F5               	movf	tablat,w,c
  1356  000E7E  6E07               	movwf	soWrite@value^0,c
  1357  000E80  6A08               	clrf	(soWrite@value+1)^0,c
  1358  000E82  EC99  F00D         	call	_soWrite	;wreg free
  1359  000E86                     
  1360                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1361  000E86  0E00               	movlw	0
  1362  000E88  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1363  000E8A  0E19               	movlw	25
  1364  000E8C  6E01               	movwf	digitalWrite@pin^0,c
  1365  000E8E  0E00               	movlw	0
  1366  000E90  6E04               	movwf	(digitalWrite@value+1)^0,c
  1367  000E92  0E01               	movlw	1
  1368  000E94  6E03               	movwf	digitalWrite@value^0,c
  1369  000E96  EC9F  F004         	call	_digitalWrite	;wreg free
  1370  000E9A                     
  1371                           ;ssd.c: 73:             display = 2;
  1372  000E9A  0E02               	movlw	2
  1373  000E9C  6E46               	movwf	_display^0,c
  1374                           
  1375                           ;ssd.c: 74:             break;
  1376  000E9E  EFA2  F007         	goto	l425
  1377  000EA2                     l2713:
  1378                           
  1379                           ;ssd.c: 77:             soWrite(valor[v2]);
  1380  000EA2  0E01               	movlw	low _valor
  1381  000EA4  2443               	addwf	_v2^0,w,c
  1382  000EA6  6EF6               	movwf	tblptrl,c
  1383  000EA8  6AF7               	clrf	tblptrh,c
  1384  000EAA  0E06               	movlw	high _valor
  1385  000EAC  22F7               	addwfc	tblptrh,f,c
  1386  000EAE                     	if	0	;There are less than 3 active tblptr bytes
  1387  000EAE                     	endif
  1388  000EAE  0008               	tblrd		*
  1389  000EB0  50F5               	movf	tablat,w,c
  1390  000EB2  6E07               	movwf	soWrite@value^0,c
  1391  000EB4  6A08               	clrf	(soWrite@value+1)^0,c
  1392  000EB6  EC99  F00D         	call	_soWrite	;wreg free
  1393  000EBA                     
  1394                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1395  000EBA  0E00               	movlw	0
  1396  000EBC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1397  000EBE  0E1A               	movlw	26
  1398  000EC0  6E01               	movwf	digitalWrite@pin^0,c
  1399  000EC2  0E00               	movlw	0
  1400  000EC4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1401  000EC6  0E01               	movlw	1
  1402  000EC8  6E03               	movwf	digitalWrite@value^0,c
  1403  000ECA  EC9F  F004         	call	_digitalWrite	;wreg free
  1404  000ECE                     
  1405                           ;ssd.c: 79:             display = 3;
  1406  000ECE  0E03               	movlw	3
  1407  000ED0  6E46               	movwf	_display^0,c
  1408                           
  1409                           ;ssd.c: 80:             break;
  1410  000ED2  EFA2  F007         	goto	l425
  1411  000ED6                     l2719:
  1412                           
  1413                           ;ssd.c: 83:             soWrite(valor[v3]);
  1414  000ED6  0E01               	movlw	low _valor
  1415  000ED8  2442               	addwf	_v3^0,w,c
  1416  000EDA  6EF6               	movwf	tblptrl,c
  1417  000EDC  6AF7               	clrf	tblptrh,c
  1418  000EDE  0E06               	movlw	high _valor
  1419  000EE0  22F7               	addwfc	tblptrh,f,c
  1420  000EE2                     	if	0	;There are less than 3 active tblptr bytes
  1421  000EE2                     	endif
  1422  000EE2  0008               	tblrd		*
  1423  000EE4  50F5               	movf	tablat,w,c
  1424  000EE6  6E07               	movwf	soWrite@value^0,c
  1425  000EE8  6A08               	clrf	(soWrite@value+1)^0,c
  1426  000EEA  EC99  F00D         	call	_soWrite	;wreg free
  1427  000EEE                     
  1428                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1429  000EEE  0E00               	movlw	0
  1430  000EF0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1431  000EF2  0E1B               	movlw	27
  1432  000EF4  6E01               	movwf	digitalWrite@pin^0,c
  1433  000EF6  0E00               	movlw	0
  1434  000EF8  6E04               	movwf	(digitalWrite@value+1)^0,c
  1435  000EFA  0E01               	movlw	1
  1436  000EFC  6E03               	movwf	digitalWrite@value^0,c
  1437  000EFE  EC9F  F004         	call	_digitalWrite	;wreg free
  1438  000F02                     l2723:
  1439                           
  1440                           ;ssd.c: 85:             display = 0;
  1441  000F02  0E00               	movlw	0
  1442  000F04  6E46               	movwf	_display^0,c
  1443                           
  1444                           ;ssd.c: 86:             break;
  1445  000F06  EFA2  F007         	goto	l425
  1446  000F0A                     l2729:
  1447  000F0A  5046               	movf	_display^0,w,c
  1448  000F0C  6E0A               	movwf	??_ssdUpdate^0,c
  1449  000F0E  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1450                           
  1451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1452                           ; Switch size 1, requested type "simple"
  1453                           ; Number of cases is 1, Range of values is 0 to 0
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte            4     3 (average)
  1457                           ;	Chosen strategy is simple_byte
  1458  000F10  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1459  000F12  0A00               	xorlw	0	; case 0
  1460  000F14  B4D8               	btfsc	status,2,c
  1461  000F16  EF8F  F007         	goto	l2855
  1462  000F1A  EF81  F007         	goto	l2723
  1463  000F1E                     l2855:
  1464                           
  1465                           ; Switch size 1, requested type "simple"
  1466                           ; Number of cases is 4, Range of values is 0 to 3
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte           13     7 (average)
  1470                           ;	Chosen strategy is simple_byte
  1471  000F1E  500A               	movf	??_ssdUpdate^0,w,c
  1472  000F20  0A00               	xorlw	0	; case 0
  1473  000F22  B4D8               	btfsc	status,2,c
  1474  000F24  EF1D  F007         	goto	l2701
  1475  000F28  0A01               	xorlw	1	; case 1
  1476  000F2A  B4D8               	btfsc	status,2,c
  1477  000F2C  EF37  F007         	goto	l2707
  1478  000F30  0A03               	xorlw	3	; case 2
  1479  000F32  B4D8               	btfsc	status,2,c
  1480  000F34  EF51  F007         	goto	l2713
  1481  000F38  0A01               	xorlw	1	; case 3
  1482  000F3A  B4D8               	btfsc	status,2,c
  1483  000F3C  EF6B  F007         	goto	l2719
  1484  000F40  EF81  F007         	goto	l2723
  1485  000F44                     l425:
  1486  000F44  0012               	return		;funcret
  1487  000F46                     __end_of_ssdUpdate:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _ssdInit *****************
  1491 ;; Defined at:
  1492 ;;		line 94 in file "ssd.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1506 ;;      Params:         0       0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 2
  1513 ;; This function calls:
  1514 ;;		_pinMode
  1515 ;;		_soInit
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text6
  1522  001A86                     __ptext6:
  1523                           	callstack 0
  1524  001A86                     _ssdInit:
  1525                           	callstack 28
  1526  001A86                     
  1527                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1528  001A86  0E00               	movlw	0
  1529  001A88  6E02               	movwf	(pinMode@pin+1)^0,c
  1530  001A8A  0E18               	movlw	24
  1531  001A8C  6E01               	movwf	pinMode@pin^0,c
  1532  001A8E  0E00               	movlw	0
  1533  001A90  6E04               	movwf	(pinMode@type+1)^0,c
  1534  001A92  0E00               	movlw	0
  1535  001A94  6E03               	movwf	pinMode@type^0,c
  1536  001A96  ECC6  F005         	call	_pinMode	;wreg free
  1537                           
  1538                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1539  001A9A  0E00               	movlw	0
  1540  001A9C  6E02               	movwf	(pinMode@pin+1)^0,c
  1541  001A9E  0E19               	movlw	25
  1542  001AA0  6E01               	movwf	pinMode@pin^0,c
  1543  001AA2  0E00               	movlw	0
  1544  001AA4  6E04               	movwf	(pinMode@type+1)^0,c
  1545  001AA6  0E00               	movlw	0
  1546  001AA8  6E03               	movwf	pinMode@type^0,c
  1547  001AAA  ECC6  F005         	call	_pinMode	;wreg free
  1548                           
  1549                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1550  001AAE  0E00               	movlw	0
  1551  001AB0  6E02               	movwf	(pinMode@pin+1)^0,c
  1552  001AB2  0E1A               	movlw	26
  1553  001AB4  6E01               	movwf	pinMode@pin^0,c
  1554  001AB6  0E00               	movlw	0
  1555  001AB8  6E04               	movwf	(pinMode@type+1)^0,c
  1556  001ABA  0E00               	movlw	0
  1557  001ABC  6E03               	movwf	pinMode@type^0,c
  1558  001ABE  ECC6  F005         	call	_pinMode	;wreg free
  1559                           
  1560                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1561  001AC2  0E00               	movlw	0
  1562  001AC4  6E02               	movwf	(pinMode@pin+1)^0,c
  1563  001AC6  0E1B               	movlw	27
  1564  001AC8  6E01               	movwf	pinMode@pin^0,c
  1565  001ACA  0E00               	movlw	0
  1566  001ACC  6E04               	movwf	(pinMode@type+1)^0,c
  1567  001ACE  0E00               	movlw	0
  1568  001AD0  6E03               	movwf	pinMode@type^0,c
  1569  001AD2  ECC6  F005         	call	_pinMode	;wreg free
  1570                           
  1571                           ;ssd.c: 102:     soInit();
  1572  001AD6  EC6C  F00E         	call	_soInit	;wreg free
  1573  001ADA  0012               	return		;funcret
  1574  001ADC                     __end_of_ssdInit:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _pwmInit *****************
  1578 ;; Defined at:
  1579 ;;		line 51 in file "pwm.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 2
  1600 ;; This function calls:
  1601 ;;		_pwmFrequency
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text7
  1608  00202E                     __ptext7:
  1609                           	callstack 0
  1610  00202E                     _pwmInit:
  1611                           	callstack 28
  1612  00202E                     
  1613                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1614  00202E  9294               	bcf	148,1,c	;volatile
  1615  002030                     
  1616                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1617  002030  0E03               	movlw	3
  1618  002032  12CA               	iorwf	202,f,c	;volatile
  1619  002034                     
  1620                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1621  002034  84CA               	bsf	202,2,c	;volatile
  1622  002036                     
  1623                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1624  002036  0E0C               	movlw	12
  1625  002038  6EBA               	movwf	186,c	;volatile
  1626  00203A                     
  1627                           ;pwm.c: 60:     pwmFrequency(100);
  1628  00203A  0E00               	movlw	0
  1629  00203C  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1630  00203E  0E64               	movlw	100
  1631  002040  6E0F               	movwf	pwmFrequency@freq^0,c
  1632  002042  ECAF  F00F         	call	_pwmFrequency	;wreg free
  1633  002046  0012               	return		;funcret
  1634  002048                     __end_of_pwmInit:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _pwmFrequency *****************
  1638 ;; Defined at:
  1639 ;;		line 44 in file "pwm.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  freq            2   14[COMRAM] unsigned int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1653 ;;      Params:         2       0       0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0
  1656 ;;      Totals:         2       0       0       0       0       0       0
  1657 ;;Total ram usage:        2 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		___aldiv
  1662 ;; This function is called by:
  1663 ;;		_pwmInit
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668  001F5E                     __ptext8:
  1669                           	callstack 0
  1670  001F5E                     _pwmFrequency:
  1671                           	callstack 28
  1672  001F5E                     
  1673                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  1674  001F5E  0E48               	movlw	72
  1675  001F60  6E01               	movwf	___aldiv@dividend^0,c
  1676  001F62  0EE8               	movlw	232
  1677  001F64  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1678  001F66  0E01               	movlw	1
  1679  001F68  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1680  001F6A  0E00               	movlw	0
  1681  001F6C  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1682  001F6E  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1683  001F72  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1684  001F76  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1685  001F78  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1686  001F7A  EC8D  F009         	call	___aldiv	;wreg free
  1687  001F7E  0401               	decf	?___aldiv^0,w,c
  1688  001F80  6ECB               	movwf	203,c	;volatile
  1689  001F82  0012               	return		;funcret
  1690  001F84                     __end_of_pwmFrequency:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function ___aldiv *****************
  1694 ;; Defined at:
  1695 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  dividend        4    0[COMRAM] long 
  1698 ;;  divisor         4    4[COMRAM] long 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  quotient        4   10[COMRAM] long 
  1701 ;;  sign            1    9[COMRAM] unsigned char 
  1702 ;;  counter         1    8[COMRAM] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  4    0[COMRAM] long 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         8       0       0       0       0       0       0
  1713 ;;      Locals:         6       0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0
  1715 ;;      Totals:        14       0       0       0       0       0       0
  1716 ;;Total ram usage:       14 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_pwmFrequency
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text9
  1726  00131A                     __ptext9:
  1727                           	callstack 0
  1728  00131A                     ___aldiv:
  1729                           	callstack 28
  1730  00131A  0E00               	movlw	0
  1731  00131C  6E0A               	movwf	___aldiv@sign^0,c
  1732  00131E  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1733  001320  EF96  F009         	goto	u2060
  1734  001324  EF94  F009         	goto	u2061
  1735  001328                     u2061:
  1736  001328  EFA0  F009         	goto	l2369
  1737  00132C                     u2060:
  1738  00132C  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1739  00132E  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1740  001330  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1741  001332  6C05               	negf	___aldiv@divisor^0,c
  1742  001334  0E00               	movlw	0
  1743  001336  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1744  001338  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1745  00133A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1746  00133C  0E01               	movlw	1
  1747  00133E  6E0A               	movwf	___aldiv@sign^0,c
  1748  001340                     l2369:
  1749  001340  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1750  001342  EFA7  F009         	goto	u2070
  1751  001346  EFA5  F009         	goto	u2071
  1752  00134A                     u2071:
  1753  00134A  EFB1  F009         	goto	l2375
  1754  00134E                     u2070:
  1755  00134E  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1756  001350  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1757  001352  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1758  001354  6C01               	negf	___aldiv@dividend^0,c
  1759  001356  0E00               	movlw	0
  1760  001358  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1761  00135A  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1762  00135C  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1763  00135E  0E01               	movlw	1
  1764  001360  1A0A               	xorwf	___aldiv@sign^0,f,c
  1765  001362                     l2375:
  1766  001362  0E00               	movlw	0
  1767  001364  6E0B               	movwf	___aldiv@quotient^0,c
  1768  001366  0E00               	movlw	0
  1769  001368  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1770  00136A  0E00               	movlw	0
  1771  00136C  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1772  00136E  0E00               	movlw	0
  1773  001370  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1774  001372  5005               	movf	___aldiv@divisor^0,w,c
  1775  001374  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1776  001376  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1777  001378  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1778  00137A  B4D8               	btfsc	status,2,c
  1779  00137C  EFC2  F009         	goto	u2081
  1780  001380  EFC4  F009         	goto	u2080
  1781  001384                     u2081:
  1782  001384  EFFA  F009         	goto	l2397
  1783  001388                     u2080:
  1784  001388  0E01               	movlw	1
  1785  00138A  6E09               	movwf	___aldiv@counter^0,c
  1786  00138C  EFCE  F009         	goto	l2383
  1787  001390                     l2381:
  1788  001390  90D8               	bcf	status,0,c
  1789  001392  3605               	rlcf	___aldiv@divisor^0,f,c
  1790  001394  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1791  001396  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1792  001398  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1793  00139A  2A09               	incf	___aldiv@counter^0,f,c
  1794  00139C                     l2383:
  1795  00139C  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1796  00139E  EFD3  F009         	goto	u2091
  1797  0013A2  EFD5  F009         	goto	u2090
  1798  0013A6                     u2091:
  1799  0013A6  EFC8  F009         	goto	l2381
  1800  0013AA                     u2090:
  1801  0013AA                     l2385:
  1802  0013AA  90D8               	bcf	status,0,c
  1803  0013AC  360B               	rlcf	___aldiv@quotient^0,f,c
  1804  0013AE  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1805  0013B0  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1806  0013B2  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1807  0013B4  5005               	movf	___aldiv@divisor^0,w,c
  1808  0013B6  5C01               	subwf	___aldiv@dividend^0,w,c
  1809  0013B8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1810  0013BA  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1811  0013BC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1812  0013BE  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1813  0013C0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1814  0013C2  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1815  0013C4  A0D8               	btfss	status,0,c
  1816  0013C6  EFE7  F009         	goto	u2101
  1817  0013CA  EFE9  F009         	goto	u2100
  1818  0013CE                     u2101:
  1819  0013CE  EFF2  F009         	goto	l2393
  1820  0013D2                     u2100:
  1821  0013D2  5005               	movf	___aldiv@divisor^0,w,c
  1822  0013D4  5E01               	subwf	___aldiv@dividend^0,f,c
  1823  0013D6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1824  0013D8  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1825  0013DA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1826  0013DC  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1827  0013DE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1828  0013E0  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1829  0013E2  800B               	bsf	___aldiv@quotient^0,0,c
  1830  0013E4                     l2393:
  1831  0013E4  90D8               	bcf	status,0,c
  1832  0013E6  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1833  0013E8  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1834  0013EA  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1835  0013EC  3205               	rrcf	___aldiv@divisor^0,f,c
  1836  0013EE  2E09               	decfsz	___aldiv@counter^0,f,c
  1837  0013F0  EFD5  F009         	goto	l2385
  1838  0013F4                     l2397:
  1839  0013F4  500A               	movf	___aldiv@sign^0,w,c
  1840  0013F6  B4D8               	btfsc	status,2,c
  1841  0013F8  EF00  F00A         	goto	u2111
  1842  0013FC  EF02  F00A         	goto	u2110
  1843  001400                     u2111:
  1844  001400  EF0A  F00A         	goto	l2401
  1845  001404                     u2110:
  1846  001404  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1847  001406  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1848  001408  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1849  00140A  6C0B               	negf	___aldiv@quotient^0,c
  1850  00140C  0E00               	movlw	0
  1851  00140E  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1852  001410  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1853  001412  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1854  001414                     l2401:
  1855  001414  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1856  001418  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1857  00141C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1858  001420  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1859  001424  0012               	return		;funcret
  1860  001426                     __end_of___aldiv:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _leTeclado *****************
  1864 ;; Defined at:
  1865 ;;		line 56 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 5
  1886 ;; This function calls:
  1887 ;;		_kpDebounce
  1888 ;;		_kpRead
  1889 ;;		_lcdCommand
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text10
  1896  001846                     __ptext10:
  1897                           	callstack 0
  1898  001846                     _leTeclado:
  1899                           	callstack 25
  1900  001846                     
  1901                           ;main.c: 57:     static unsigned int tecla = 16;;main.c: 59:     kpDebounce();
  1902  001846  EC58  F008         	call	_kpDebounce	;wreg free
  1903                           
  1904                           ;main.c: 60:     if (kpRead() != tecla) {
  1905  00184A  EC36  F010         	call	_kpRead	;wreg free
  1906  00184E  505D               	movf	leTeclado@tecla^0,w,c
  1907  001850  1801               	xorwf	?_kpRead^0,w,c
  1908  001852  E109               	bnz	u2370
  1909  001854  505E               	movf	(leTeclado@tecla+1)^0,w,c
  1910  001856  1802               	xorwf	(?_kpRead+1)^0,w,c
  1911  001858  B4D8               	btfsc	status,2,c
  1912  00185A  EF31  F00C         	goto	u2371
  1913  00185E  EF33  F00C         	goto	u2370
  1914  001862                     u2371:
  1915  001862  EF59  F00C         	goto	l66
  1916  001866                     u2370:
  1917  001866                     
  1918                           ;main.c: 61:         tecla = kpRead();
  1919  001866  EC36  F010         	call	_kpRead	;wreg free
  1920  00186A  C001  F05D         	movff	?_kpRead,leTeclado@tecla
  1921  00186E  C002  F05E         	movff	?_kpRead+1,leTeclado@tecla+1
  1922  001872                     
  1923                           ;main.c: 62:         if (((tecla) & (1<<(9)))) {
  1924  001872  A25E               	btfss	(leTeclado@tecla+1)^0,1,c
  1925  001874  EF3E  F00C         	goto	u2381
  1926  001878  EF40  F00C         	goto	u2380
  1927  00187C                     u2381:
  1928  00187C  EF45  F00C         	goto	l2615
  1929  001880                     u2380:
  1930  001880                     
  1931                           ;main.c: 63:             state = 1;
  1932  001880  0E01               	movlw	1
  1933  001882  6E4A               	movwf	_state^0,c
  1934  001884                     
  1935                           ;main.c: 64:             lcdCommand(0x01);
  1936  001884  0E01               	movlw	1
  1937  001886  EC08  F010         	call	_lcdCommand
  1938  00188A                     l2615:
  1939                           
  1940                           ;main.c: 67:         if (((tecla) & (1<<(4)))) {
  1941  00188A  A85D               	btfss	leTeclado@tecla^0,4,c
  1942  00188C  EF4A  F00C         	goto	u2391
  1943  001890  EF4C  F00C         	goto	u2390
  1944  001894                     u2391:
  1945  001894  EF59  F00C         	goto	l66
  1946  001898                     u2390:
  1947  001898                     
  1948                           ;main.c: 68:             start = !start;
  1949  001898  5049               	movf	_start^0,w,c
  1950  00189A  B4D8               	btfsc	status,2,c
  1951  00189C  EF52  F00C         	goto	u2401
  1952  0018A0  EF55  F00C         	goto	u2400
  1953  0018A4                     u2401:
  1954  0018A4  0E01               	movlw	1
  1955  0018A6  EF56  F00C         	goto	u2410
  1956  0018AA                     u2400:
  1957  0018AA  0E00               	movlw	0
  1958  0018AC                     u2410:
  1959  0018AC  6E49               	movwf	_start^0,c
  1960                           
  1961                           ;main.c: 69:             fim = 0;
  1962  0018AE  0E00               	movlw	0
  1963  0018B0  6E48               	movwf	_fim^0,c
  1964  0018B2                     l66:
  1965  0018B2  0012               	return		;funcret
  1966  0018B4                     __end_of_leTeclado:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _lcdInit *****************
  1970 ;; Defined at:
  1971 ;;		line 72 in file "lcd.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1985 ;;      Params:         0       0       0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 5
  1992 ;; This function calls:
  1993 ;;		_delayMicro
  1994 ;;		_delayMili
  1995 ;;		_lcdCommand
  1996 ;;		_pinMode
  1997 ;;		_pushNibble
  1998 ;;		_soInit
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text11
  2005  0015B0                     __ptext11:
  2006                           	callstack 0
  2007  0015B0                     _lcdInit:
  2008                           	callstack 25
  2009  0015B0                     
  2010                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2011  0015B0  0E00               	movlw	0
  2012  0015B2  6E02               	movwf	(pinMode@pin+1)^0,c
  2013  0015B4  0E1C               	movlw	28
  2014  0015B6  6E01               	movwf	pinMode@pin^0,c
  2015  0015B8  0E00               	movlw	0
  2016  0015BA  6E04               	movwf	(pinMode@type+1)^0,c
  2017  0015BC  0E00               	movlw	0
  2018  0015BE  6E03               	movwf	pinMode@type^0,c
  2019  0015C0  ECC6  F005         	call	_pinMode	;wreg free
  2020                           
  2021                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2022  0015C4  0E00               	movlw	0
  2023  0015C6  6E02               	movwf	(pinMode@pin+1)^0,c
  2024  0015C8  0E1D               	movlw	29
  2025  0015CA  6E01               	movwf	pinMode@pin^0,c
  2026  0015CC  0E00               	movlw	0
  2027  0015CE  6E04               	movwf	(pinMode@type+1)^0,c
  2028  0015D0  0E00               	movlw	0
  2029  0015D2  6E03               	movwf	pinMode@type^0,c
  2030  0015D4  ECC6  F005         	call	_pinMode	;wreg free
  2031                           
  2032                           ;lcd.c: 75:  soInit();
  2033  0015D8  EC6C  F00E         	call	_soInit	;wreg free
  2034                           
  2035                           ;lcd.c: 76:  delayMili(15);
  2036  0015DC  0E00               	movlw	0
  2037  0015DE  6E02               	movwf	(delayMili@a+1)^0,c
  2038  0015E0  0E0F               	movlw	15
  2039  0015E2  6E01               	movwf	delayMili@a^0,c
  2040  0015E4  EC2C  F00F         	call	_delayMili	;wreg free
  2041                           
  2042                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2043  0015E8  0E00               	movlw	0
  2044  0015EA  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2045  0015EC  0E00               	movlw	0
  2046  0015EE  6E0A               	movwf	pushNibble@rs^0,c
  2047  0015F0  0E03               	movlw	3
  2048  0015F2  ECC2  F00F         	call	_pushNibble
  2049                           
  2050                           ;lcd.c: 79:  delayMili(5);
  2051  0015F6  0E00               	movlw	0
  2052  0015F8  6E02               	movwf	(delayMili@a+1)^0,c
  2053  0015FA  0E05               	movlw	5
  2054  0015FC  6E01               	movwf	delayMili@a^0,c
  2055  0015FE  EC2C  F00F         	call	_delayMili	;wreg free
  2056                           
  2057                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2058  001602  0E00               	movlw	0
  2059  001604  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2060  001606  0E00               	movlw	0
  2061  001608  6E0A               	movwf	pushNibble@rs^0,c
  2062  00160A  0E03               	movlw	3
  2063  00160C  ECC2  F00F         	call	_pushNibble
  2064  001610                     
  2065                           ;lcd.c: 81:  delayMicro(160);
  2066  001610  0E00               	movlw	0
  2067  001612  6E02               	movwf	(delayMicro@a+1)^0,c
  2068  001614  0EA0               	movlw	160
  2069  001616  6E01               	movwf	delayMicro@a^0,c
  2070  001618  EC40  F010         	call	_delayMicro	;wreg free
  2071  00161C                     
  2072                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2073  00161C  0E00               	movlw	0
  2074  00161E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2075  001620  0E00               	movlw	0
  2076  001622  6E0A               	movwf	pushNibble@rs^0,c
  2077  001624  0E03               	movlw	3
  2078  001626  ECC2  F00F         	call	_pushNibble
  2079                           
  2080                           ;lcd.c: 83:  delayMicro(160);
  2081  00162A  0E00               	movlw	0
  2082  00162C  6E02               	movwf	(delayMicro@a+1)^0,c
  2083  00162E  0EA0               	movlw	160
  2084  001630  6E01               	movwf	delayMicro@a^0,c
  2085  001632  EC40  F010         	call	_delayMicro	;wreg free
  2086  001636                     
  2087                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2088  001636  0E00               	movlw	0
  2089  001638  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2090  00163A  0E00               	movlw	0
  2091  00163C  6E0A               	movwf	pushNibble@rs^0,c
  2092  00163E  0E02               	movlw	2
  2093  001640  ECC2  F00F         	call	_pushNibble
  2094  001644                     
  2095                           ;lcd.c: 86:  delayMili(10);
  2096  001644  0E00               	movlw	0
  2097  001646  6E02               	movwf	(delayMili@a+1)^0,c
  2098  001648  0E0A               	movlw	10
  2099  00164A  6E01               	movwf	delayMili@a^0,c
  2100  00164C  EC2C  F00F         	call	_delayMili	;wreg free
  2101  001650                     
  2102                           ;lcd.c: 88:  lcdCommand(0x28);
  2103  001650  0E28               	movlw	40
  2104  001652  EC08  F010         	call	_lcdCommand
  2105  001656                     
  2106                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2107  001656  0E0C               	movlw	12
  2108  001658  EC08  F010         	call	_lcdCommand
  2109  00165C                     
  2110                           ;lcd.c: 90:  lcdCommand(0x01);
  2111  00165C  0E01               	movlw	1
  2112  00165E  EC08  F010         	call	_lcdCommand
  2113  001662  0012               	return		;funcret
  2114  001664                     __end_of_lcdInit:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _pushNibble *****************
  2118 ;; Defined at:
  2119 ;;		line 25 in file "lcd.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  value           1    wreg     unsigned char 
  2122 ;;  rs              2    9[COMRAM] int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  value           1   11[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         2       0       0       0       0       0       0
  2135 ;;      Locals:         1       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0
  2137 ;;      Totals:         3       0       0       0       0       0       0
  2138 ;;Total ram usage:        3 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 3
  2141 ;; This function calls:
  2142 ;;		_digitalWrite
  2143 ;;		_pulseEnablePin
  2144 ;;		_soWrite
  2145 ;; This function is called by:
  2146 ;;		_lcdInit
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text12
  2151  001F84                     __ptext12:
  2152                           	callstack 0
  2153  001F84                     _pushNibble:
  2154                           	callstack 26
  2155                           
  2156                           ;incstack = 0
  2157                           ;pushNibble@value stored from wreg
  2158  001F84  6E0C               	movwf	pushNibble@value^0,c
  2159  001F86                     
  2160                           ;lcd.c: 26:  soWrite(value);
  2161  001F86  C00C  F007         	movff	pushNibble@value,soWrite@value
  2162  001F8A  6A08               	clrf	(soWrite@value+1)^0,c
  2163  001F8C  EC99  F00D         	call	_soWrite	;wreg free
  2164                           
  2165                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2166  001F90  0E00               	movlw	0
  2167  001F92  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2168  001F94  0E1D               	movlw	29
  2169  001F96  6E01               	movwf	digitalWrite@pin^0,c
  2170  001F98  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2171  001F9C  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2172  001FA0  EC9F  F004         	call	_digitalWrite	;wreg free
  2173                           
  2174                           ;lcd.c: 28:  pulseEnablePin();
  2175  001FA4  EC4B  F00E         	call	_pulseEnablePin	;wreg free
  2176  001FA8  0012               	return		;funcret
  2177  001FAA                     __end_of_pushNibble:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _kpInit *****************
  2181 ;; Defined at:
  2182 ;;		line 54 in file "keypad.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2196 ;;      Params:         0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		_pinMode
  2205 ;;		_soInit
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text13
  2212  001DF4                     __ptext13:
  2213                           	callstack 0
  2214  001DF4                     _kpInit:
  2215                           	callstack 28
  2216  001DF4                     
  2217                           ;keypad.c: 55:   soInit();
  2218  001DF4  EC6C  F00E         	call	_soInit	;wreg free
  2219                           
  2220                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2221  001DF8  0E00               	movlw	0
  2222  001DFA  6E02               	movwf	(pinMode@pin+1)^0,c
  2223  001DFC  0E0A               	movlw	10
  2224  001DFE  6E01               	movwf	pinMode@pin^0,c
  2225  001E00  0E00               	movlw	0
  2226  001E02  6E04               	movwf	(pinMode@type+1)^0,c
  2227  001E04  0E01               	movlw	1
  2228  001E06  6E03               	movwf	pinMode@type^0,c
  2229  001E08  ECC6  F005         	call	_pinMode	;wreg free
  2230                           
  2231                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2232  001E0C  0E00               	movlw	0
  2233  001E0E  6E02               	movwf	(pinMode@pin+1)^0,c
  2234  001E10  0E09               	movlw	9
  2235  001E12  6E01               	movwf	pinMode@pin^0,c
  2236  001E14  0E00               	movlw	0
  2237  001E16  6E04               	movwf	(pinMode@type+1)^0,c
  2238  001E18  0E01               	movlw	1
  2239  001E1A  6E03               	movwf	pinMode@type^0,c
  2240  001E1C  ECC6  F005         	call	_pinMode	;wreg free
  2241  001E20                     
  2242                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2243  001E20  0E0C               	movlw	12
  2244  001E22  6EC1               	movwf	193,c	;volatile
  2245  001E24  0012               	return		;funcret
  2246  001E26                     __end_of_kpInit:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _soInit *****************
  2250 ;; Defined at:
  2251 ;;		line 3 in file "so.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         0       0       0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 1
  2272 ;; This function calls:
  2273 ;;		_pinMode
  2274 ;; This function is called by:
  2275 ;;		_kpInit
  2276 ;;		_lcdInit
  2277 ;;		_ssdInit
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text14
  2282  001CD8                     __ptext14:
  2283                           	callstack 0
  2284  001CD8                     _soInit:
  2285                           	callstack 28
  2286  001CD8                     
  2287                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2288  001CD8  0E00               	movlw	0
  2289  001CDA  6E02               	movwf	(pinMode@pin+1)^0,c
  2290  001CDC  0E1F               	movlw	31
  2291  001CDE  6E01               	movwf	pinMode@pin^0,c
  2292  001CE0  0E00               	movlw	0
  2293  001CE2  6E04               	movwf	(pinMode@type+1)^0,c
  2294  001CE4  0E00               	movlw	0
  2295  001CE6  6E03               	movwf	pinMode@type^0,c
  2296  001CE8  ECC6  F005         	call	_pinMode	;wreg free
  2297                           
  2298                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2299  001CEC  0E00               	movlw	0
  2300  001CEE  6E02               	movwf	(pinMode@pin+1)^0,c
  2301  001CF0  0E08               	movlw	8
  2302  001CF2  6E01               	movwf	pinMode@pin^0,c
  2303  001CF4  0E00               	movlw	0
  2304  001CF6  6E04               	movwf	(pinMode@type+1)^0,c
  2305  001CF8  0E00               	movlw	0
  2306  001CFA  6E03               	movwf	pinMode@type^0,c
  2307  001CFC  ECC6  F005         	call	_pinMode	;wreg free
  2308                           
  2309                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2310  001D00  0E00               	movlw	0
  2311  001D02  6E02               	movwf	(pinMode@pin+1)^0,c
  2312  001D04  0E1E               	movlw	30
  2313  001D06  6E01               	movwf	pinMode@pin^0,c
  2314  001D08  0E00               	movlw	0
  2315  001D0A  6E04               	movwf	(pinMode@type+1)^0,c
  2316  001D0C  0E00               	movlw	0
  2317  001D0E  6E03               	movwf	pinMode@type^0,c
  2318  001D10  ECC6  F005         	call	_pinMode	;wreg free
  2319  001D14  0012               	return		;funcret
  2320  001D16                     __end_of_soInit:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _inicio *****************
  2324 ;; Defined at:
  2325 ;;		line 26 in file "main.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         0       0       0       0       0       0       0
  2340 ;;      Locals:         2       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0
  2342 ;;      Totals:         2       0       0       0       0       0       0
  2343 ;;Total ram usage:        2 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 6
  2346 ;; This function calls:
  2347 ;;		___awdiv
  2348 ;;		___awmod
  2349 ;;		_bcd2dec
  2350 ;;		_dsReadData
  2351 ;;		_lcdChar
  2352 ;;		_lcdCommand
  2353 ;;		_lcdString
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text15
  2360  000676                     __ptext15:
  2361                           	callstack 0
  2362  000676                     _inicio:
  2363                           	callstack 24
  2364  000676                     
  2365                           ;main.c: 28:     lcdCommand(0x80);
  2366  000676  0E80               	movlw	128
  2367  000678  EC08  F010         	call	_lcdCommand
  2368  00067C                     
  2369                           ;main.c: 29:     lcdString("    ");
  2370  00067C  0E70               	movlw	low (STR_6+1)
  2371  00067E  6E0F               	movwf	lcdString@msg^0,c
  2372  000680  0E06               	movlw	high (STR_6+1)
  2373  000682  6E10               	movwf	(lcdString@msg+1)^0,c
  2374  000684  EC6E  F00D         	call	_lcdString	;wreg free
  2375  000688                     
  2376                           ;main.c: 30:     lcdChar((((bcd2dec(dsReadData(4)& 0x5f)) / 10) % 10) + 48);
  2377  000688  0E00               	movlw	0
  2378  00068A  6E12               	movwf	(dsReadData@address+1)^0,c
  2379  00068C  0E04               	movlw	4
  2380  00068E  6E11               	movwf	dsReadData@address^0,c
  2381  000690  ECE4  F00D         	call	_dsReadData	;wreg free
  2382  000694  0E5F               	movlw	95
  2383  000696  1411               	andwf	?_dsReadData^0,w,c
  2384  000698  6E24               	movwf	bcd2dec@value^0,c
  2385  00069A  6A25               	clrf	(bcd2dec@value+1)^0,c
  2386  00069C  EC2A  F00E         	call	_bcd2dec	;wreg free
  2387  0006A0  C024  F02E         	movff	?_bcd2dec,_inicio$1310
  2388  0006A4  C025  F02F         	movff	?_bcd2dec+1,_inicio$1310+1
  2389  0006A8                     
  2390                           ;main.c: 30:     lcdChar((((bcd2dec(dsReadData(4)& 0x5f)) / 10) % 10) + 48);
  2391  0006A8  0E00               	movlw	0
  2392  0006AA  6E19               	movwf	(___awdiv@divisor+1)^0,c
  2393  0006AC  0E0A               	movlw	10
  2394  0006AE  6E18               	movwf	___awdiv@divisor^0,c
  2395  0006B0  C02E  F016         	movff	_inicio$1310,___awdiv@dividend
  2396  0006B4  C02F  F017         	movff	_inicio$1310+1,___awdiv@dividend+1
  2397  0006B8  EC76  F00A         	call	___awdiv	;wreg free
  2398  0006BC  C016  F028         	movff	?___awdiv,___awmod@dividend
  2399  0006C0  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2400  0006C4  0E00               	movlw	0
  2401  0006C6  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2402  0006C8  0E0A               	movlw	10
  2403  0006CA  6E2A               	movwf	___awmod@divisor^0,c
  2404  0006CC  EC32  F00B         	call	___awmod	;wreg free
  2405  0006D0  5028               	movf	?___awmod^0,w,c
  2406  0006D2  0F30               	addlw	48
  2407  0006D4  ECF9  F00F         	call	_lcdChar
  2408  0006D8                     
  2409                           ;main.c: 31:     lcdChar(((bcd2dec(dsReadData(4)& 0x5f)) % 10) + 48);
  2410  0006D8  0E00               	movlw	0
  2411  0006DA  6E12               	movwf	(dsReadData@address+1)^0,c
  2412  0006DC  0E04               	movlw	4
  2413  0006DE  6E11               	movwf	dsReadData@address^0,c
  2414  0006E0  ECE4  F00D         	call	_dsReadData	;wreg free
  2415  0006E4  0E5F               	movlw	95
  2416  0006E6  1411               	andwf	?_dsReadData^0,w,c
  2417  0006E8  6E24               	movwf	bcd2dec@value^0,c
  2418  0006EA  6A25               	clrf	(bcd2dec@value+1)^0,c
  2419  0006EC  EC2A  F00E         	call	_bcd2dec	;wreg free
  2420  0006F0  C024  F028         	movff	?_bcd2dec,___awmod@dividend
  2421  0006F4  C025  F029         	movff	?_bcd2dec+1,___awmod@dividend+1
  2422  0006F8  0E00               	movlw	0
  2423  0006FA  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2424  0006FC  0E0A               	movlw	10
  2425  0006FE  6E2A               	movwf	___awmod@divisor^0,c
  2426  000700  EC32  F00B         	call	___awmod	;wreg free
  2427  000704  5028               	movf	?___awmod^0,w,c
  2428  000706  0F30               	addlw	48
  2429  000708  ECF9  F00F         	call	_lcdChar
  2430  00070C                     
  2431                           ;main.c: 32:     lcdChar('/');
  2432  00070C  0E2F               	movlw	47
  2433  00070E  ECF9  F00F         	call	_lcdChar
  2434  000712                     
  2435                           ;main.c: 33:     lcdChar((((bcd2dec(dsReadData(5)& 0x3f)) / 10) % 10) + 48);
  2436  000712  0E00               	movlw	0
  2437  000714  6E12               	movwf	(dsReadData@address+1)^0,c
  2438  000716  0E05               	movlw	5
  2439  000718  6E11               	movwf	dsReadData@address^0,c
  2440  00071A  ECE4  F00D         	call	_dsReadData	;wreg free
  2441  00071E  0E3F               	movlw	63
  2442  000720  1411               	andwf	?_dsReadData^0,w,c
  2443  000722  6E24               	movwf	bcd2dec@value^0,c
  2444  000724  6A25               	clrf	(bcd2dec@value+1)^0,c
  2445  000726  EC2A  F00E         	call	_bcd2dec	;wreg free
  2446  00072A  C024  F02E         	movff	?_bcd2dec,_inicio$1310
  2447  00072E  C025  F02F         	movff	?_bcd2dec+1,_inicio$1310+1
  2448  000732                     
  2449                           ;main.c: 33:     lcdChar((((bcd2dec(dsReadData(5)& 0x3f)) / 10) % 10) + 48);
  2450  000732  0E00               	movlw	0
  2451  000734  6E19               	movwf	(___awdiv@divisor+1)^0,c
  2452  000736  0E0A               	movlw	10
  2453  000738  6E18               	movwf	___awdiv@divisor^0,c
  2454  00073A  C02E  F016         	movff	_inicio$1310,___awdiv@dividend
  2455  00073E  C02F  F017         	movff	_inicio$1310+1,___awdiv@dividend+1
  2456  000742  EC76  F00A         	call	___awdiv	;wreg free
  2457  000746  C016  F028         	movff	?___awdiv,___awmod@dividend
  2458  00074A  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2459  00074E  0E00               	movlw	0
  2460  000750  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2461  000752  0E0A               	movlw	10
  2462  000754  6E2A               	movwf	___awmod@divisor^0,c
  2463  000756  EC32  F00B         	call	___awmod	;wreg free
  2464  00075A  5028               	movf	?___awmod^0,w,c
  2465  00075C  0F30               	addlw	48
  2466  00075E  ECF9  F00F         	call	_lcdChar
  2467  000762                     
  2468                           ;main.c: 34:     lcdChar(((bcd2dec(dsReadData(5)& 0x3f)) % 10) + 48);
  2469  000762  0E00               	movlw	0
  2470  000764  6E12               	movwf	(dsReadData@address+1)^0,c
  2471  000766  0E05               	movlw	5
  2472  000768  6E11               	movwf	dsReadData@address^0,c
  2473  00076A  ECE4  F00D         	call	_dsReadData	;wreg free
  2474  00076E  0E3F               	movlw	63
  2475  000770  1411               	andwf	?_dsReadData^0,w,c
  2476  000772  6E24               	movwf	bcd2dec@value^0,c
  2477  000774  6A25               	clrf	(bcd2dec@value+1)^0,c
  2478  000776  EC2A  F00E         	call	_bcd2dec	;wreg free
  2479  00077A  C024  F028         	movff	?_bcd2dec,___awmod@dividend
  2480  00077E  C025  F029         	movff	?_bcd2dec+1,___awmod@dividend+1
  2481  000782  0E00               	movlw	0
  2482  000784  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2483  000786  0E0A               	movlw	10
  2484  000788  6E2A               	movwf	___awmod@divisor^0,c
  2485  00078A  EC32  F00B         	call	___awmod	;wreg free
  2486  00078E  5028               	movf	?___awmod^0,w,c
  2487  000790  0F30               	addlw	48
  2488  000792  ECF9  F00F         	call	_lcdChar
  2489  000796                     
  2490                           ;main.c: 35:     lcdChar('/');
  2491  000796  0E2F               	movlw	47
  2492  000798  ECF9  F00F         	call	_lcdChar
  2493  00079C                     
  2494                           ;main.c: 36:     lcdChar((((bcd2dec(dsReadData(6)& 0xff)) / 10) % 10) + 48);
  2495  00079C  0E00               	movlw	0
  2496  00079E  6E12               	movwf	(dsReadData@address+1)^0,c
  2497  0007A0  0E06               	movlw	6
  2498  0007A2  6E11               	movwf	dsReadData@address^0,c
  2499  0007A4  ECE4  F00D         	call	_dsReadData	;wreg free
  2500  0007A8  5011               	movf	?_dsReadData^0,w,c
  2501  0007AA  6E24               	movwf	bcd2dec@value^0,c
  2502  0007AC  6A25               	clrf	(bcd2dec@value+1)^0,c
  2503  0007AE  EC2A  F00E         	call	_bcd2dec	;wreg free
  2504  0007B2  C024  F02E         	movff	?_bcd2dec,_inicio$1310
  2505  0007B6  C025  F02F         	movff	?_bcd2dec+1,_inicio$1310+1
  2506  0007BA                     
  2507                           ;main.c: 36:     lcdChar((((bcd2dec(dsReadData(6)& 0xff)) / 10) % 10) + 48);
  2508  0007BA  0E00               	movlw	0
  2509  0007BC  6E19               	movwf	(___awdiv@divisor+1)^0,c
  2510  0007BE  0E0A               	movlw	10
  2511  0007C0  6E18               	movwf	___awdiv@divisor^0,c
  2512  0007C2  C02E  F016         	movff	_inicio$1310,___awdiv@dividend
  2513  0007C6  C02F  F017         	movff	_inicio$1310+1,___awdiv@dividend+1
  2514  0007CA  EC76  F00A         	call	___awdiv	;wreg free
  2515  0007CE  C016  F028         	movff	?___awdiv,___awmod@dividend
  2516  0007D2  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2517  0007D6  0E00               	movlw	0
  2518  0007D8  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2519  0007DA  0E0A               	movlw	10
  2520  0007DC  6E2A               	movwf	___awmod@divisor^0,c
  2521  0007DE  EC32  F00B         	call	___awmod	;wreg free
  2522  0007E2  5028               	movf	?___awmod^0,w,c
  2523  0007E4  0F30               	addlw	48
  2524  0007E6  ECF9  F00F         	call	_lcdChar
  2525  0007EA                     
  2526                           ;main.c: 37:     lcdChar(((bcd2dec(dsReadData(6)& 0xff)) % 10) + 48);
  2527  0007EA  0E00               	movlw	0
  2528  0007EC  6E12               	movwf	(dsReadData@address+1)^0,c
  2529  0007EE  0E06               	movlw	6
  2530  0007F0  6E11               	movwf	dsReadData@address^0,c
  2531  0007F2  ECE4  F00D         	call	_dsReadData	;wreg free
  2532  0007F6  5011               	movf	?_dsReadData^0,w,c
  2533  0007F8  6E24               	movwf	bcd2dec@value^0,c
  2534  0007FA  6A25               	clrf	(bcd2dec@value+1)^0,c
  2535  0007FC  EC2A  F00E         	call	_bcd2dec	;wreg free
  2536  000800  C024  F028         	movff	?_bcd2dec,___awmod@dividend
  2537  000804  C025  F029         	movff	?_bcd2dec+1,___awmod@dividend+1
  2538  000808  0E00               	movlw	0
  2539  00080A  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2540  00080C  0E0A               	movlw	10
  2541  00080E  6E2A               	movwf	___awmod@divisor^0,c
  2542  000810  EC32  F00B         	call	___awmod	;wreg free
  2543  000814  5028               	movf	?___awmod^0,w,c
  2544  000816  0F30               	addlw	48
  2545  000818  ECF9  F00F         	call	_lcdChar
  2546  00081C                     
  2547                           ;main.c: 40:     lcdCommand(0xC0);
  2548  00081C  0EC0               	movlw	192
  2549  00081E  EC08  F010         	call	_lcdCommand
  2550  000822                     
  2551                           ;main.c: 41:     lcdString("     ");
  2552  000822  0E6F               	movlw	low STR_6
  2553  000824  6E0F               	movwf	lcdString@msg^0,c
  2554  000826  0E06               	movlw	high STR_6
  2555  000828  6E10               	movwf	(lcdString@msg+1)^0,c
  2556  00082A  EC6E  F00D         	call	_lcdString	;wreg free
  2557  00082E                     
  2558                           ;main.c: 42:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
  2559  00082E  0E00               	movlw	0
  2560  000830  6E12               	movwf	(dsReadData@address+1)^0,c
  2561  000832  0E02               	movlw	2
  2562  000834  6E11               	movwf	dsReadData@address^0,c
  2563  000836  ECE4  F00D         	call	_dsReadData	;wreg free
  2564  00083A  0E5F               	movlw	95
  2565  00083C  1411               	andwf	?_dsReadData^0,w,c
  2566  00083E  6E24               	movwf	bcd2dec@value^0,c
  2567  000840  6A25               	clrf	(bcd2dec@value+1)^0,c
  2568  000842  EC2A  F00E         	call	_bcd2dec	;wreg free
  2569  000846  C024  F02E         	movff	?_bcd2dec,_inicio$1310
  2570  00084A  C025  F02F         	movff	?_bcd2dec+1,_inicio$1310+1
  2571  00084E                     
  2572                           ;main.c: 42:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10) + 48);
  2573  00084E  0E00               	movlw	0
  2574  000850  6E19               	movwf	(___awdiv@divisor+1)^0,c
  2575  000852  0E0A               	movlw	10
  2576  000854  6E18               	movwf	___awdiv@divisor^0,c
  2577  000856  C02E  F016         	movff	_inicio$1310,___awdiv@dividend
  2578  00085A  C02F  F017         	movff	_inicio$1310+1,___awdiv@dividend+1
  2579  00085E  EC76  F00A         	call	___awdiv	;wreg free
  2580  000862  C016  F028         	movff	?___awdiv,___awmod@dividend
  2581  000866  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2582  00086A  0E00               	movlw	0
  2583  00086C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2584  00086E  0E0A               	movlw	10
  2585  000870  6E2A               	movwf	___awmod@divisor^0,c
  2586  000872  EC32  F00B         	call	___awmod	;wreg free
  2587  000876  5028               	movf	?___awmod^0,w,c
  2588  000878  0F30               	addlw	48
  2589  00087A  ECF9  F00F         	call	_lcdChar
  2590                           
  2591                           ;main.c: 43:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
  2592  00087E  0E00               	movlw	0
  2593  000880  6E12               	movwf	(dsReadData@address+1)^0,c
  2594  000882  0E02               	movlw	2
  2595  000884  6E11               	movwf	dsReadData@address^0,c
  2596  000886  ECE4  F00D         	call	_dsReadData	;wreg free
  2597  00088A  0E5F               	movlw	95
  2598  00088C  1411               	andwf	?_dsReadData^0,w,c
  2599  00088E  6E24               	movwf	bcd2dec@value^0,c
  2600  000890  6A25               	clrf	(bcd2dec@value+1)^0,c
  2601  000892  EC2A  F00E         	call	_bcd2dec	;wreg free
  2602  000896  C024  F028         	movff	?_bcd2dec,___awmod@dividend
  2603  00089A  C025  F029         	movff	?_bcd2dec+1,___awmod@dividend+1
  2604  00089E  0E00               	movlw	0
  2605  0008A0  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2606  0008A2  0E0A               	movlw	10
  2607  0008A4  6E2A               	movwf	___awmod@divisor^0,c
  2608  0008A6  EC32  F00B         	call	___awmod	;wreg free
  2609  0008AA  5028               	movf	?___awmod^0,w,c
  2610  0008AC  0F30               	addlw	48
  2611  0008AE  ECF9  F00F         	call	_lcdChar
  2612  0008B2                     
  2613                           ;main.c: 44:     lcdChar(':');
  2614  0008B2  0E3A               	movlw	58
  2615  0008B4  ECF9  F00F         	call	_lcdChar
  2616  0008B8                     
  2617                           ;main.c: 45:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  2618  0008B8  0E00               	movlw	0
  2619  0008BA  6E12               	movwf	(dsReadData@address+1)^0,c
  2620  0008BC  0E01               	movlw	1
  2621  0008BE  6E11               	movwf	dsReadData@address^0,c
  2622  0008C0  ECE4  F00D         	call	_dsReadData	;wreg free
  2623  0008C4  0E7F               	movlw	127
  2624  0008C6  1411               	andwf	?_dsReadData^0,w,c
  2625  0008C8  6E24               	movwf	bcd2dec@value^0,c
  2626  0008CA  6A25               	clrf	(bcd2dec@value+1)^0,c
  2627  0008CC  EC2A  F00E         	call	_bcd2dec	;wreg free
  2628  0008D0  C024  F02E         	movff	?_bcd2dec,_inicio$1310
  2629  0008D4  C025  F02F         	movff	?_bcd2dec+1,_inicio$1310+1
  2630                           
  2631                           ;main.c: 45:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  2632  0008D8  0E00               	movlw	0
  2633  0008DA  6E19               	movwf	(___awdiv@divisor+1)^0,c
  2634  0008DC  0E0A               	movlw	10
  2635  0008DE  6E18               	movwf	___awdiv@divisor^0,c
  2636  0008E0  C02E  F016         	movff	_inicio$1310,___awdiv@dividend
  2637  0008E4  C02F  F017         	movff	_inicio$1310+1,___awdiv@dividend+1
  2638  0008E8  EC76  F00A         	call	___awdiv	;wreg free
  2639  0008EC  C016  F028         	movff	?___awdiv,___awmod@dividend
  2640  0008F0  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  2641  0008F4  0E00               	movlw	0
  2642  0008F6  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2643  0008F8  0E0A               	movlw	10
  2644  0008FA  6E2A               	movwf	___awmod@divisor^0,c
  2645  0008FC  EC32  F00B         	call	___awmod	;wreg free
  2646  000900  5028               	movf	?___awmod^0,w,c
  2647  000902  0F30               	addlw	48
  2648  000904  ECF9  F00F         	call	_lcdChar
  2649  000908                     
  2650                           ;main.c: 46:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
  2651  000908  0E00               	movlw	0
  2652  00090A  6E12               	movwf	(dsReadData@address+1)^0,c
  2653  00090C  0E01               	movlw	1
  2654  00090E  6E11               	movwf	dsReadData@address^0,c
  2655  000910  ECE4  F00D         	call	_dsReadData	;wreg free
  2656  000914  0E7F               	movlw	127
  2657  000916  1411               	andwf	?_dsReadData^0,w,c
  2658  000918  6E24               	movwf	bcd2dec@value^0,c
  2659  00091A  6A25               	clrf	(bcd2dec@value+1)^0,c
  2660  00091C  EC2A  F00E         	call	_bcd2dec	;wreg free
  2661  000920  C024  F028         	movff	?_bcd2dec,___awmod@dividend
  2662  000924  C025  F029         	movff	?_bcd2dec+1,___awmod@dividend+1
  2663  000928  0E00               	movlw	0
  2664  00092A  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2665  00092C  0E0A               	movlw	10
  2666  00092E  6E2A               	movwf	___awmod@divisor^0,c
  2667  000930  EC32  F00B         	call	___awmod	;wreg free
  2668  000934  5028               	movf	?___awmod^0,w,c
  2669  000936  0F30               	addlw	48
  2670  000938  ECF9  F00F         	call	_lcdChar
  2671  00093C  0012               	return		;funcret
  2672  00093E                     __end_of_inicio:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _dsReadData *****************
  2676 ;; Defined at:
  2677 ;;		line 29 in file "ds1307.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  address         2   16[COMRAM] int 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  result          2   19[COMRAM] int 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2   16[COMRAM] int 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         2       0       0       0       0       0       0
  2692 ;;      Locals:         2       0       0       0       0       0       0
  2693 ;;      Temps:          1       0       0       0       0       0       0
  2694 ;;      Totals:         5       0       0       0       0       0       0
  2695 ;;Total ram usage:        5 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 4
  2698 ;; This function calls:
  2699 ;;		_i2cReadByte
  2700 ;;		_i2cWriteByte
  2701 ;; This function is called by:
  2702 ;;		_inicio
  2703 ;;		_dsStartClock
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text16
  2708  001BC8                     __ptext16:
  2709                           	callstack 0
  2710  001BC8                     _dsReadData:
  2711                           	callstack 25
  2712  001BC8                     
  2713                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  2714  001BC8  0E00               	movlw	0
  2715  001BCA  6E08               	movwf	i2cWriteByte@send_stop^0,c
  2716  001BCC  0ED0               	movlw	208
  2717  001BCE  6E09               	movwf	i2cWriteByte@byte^0,c
  2718  001BD0  0E01               	movlw	1
  2719  001BD2  EC8E  F00C         	call	_i2cWriteByte
  2720                           
  2721                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  2722  001BD6  0E00               	movlw	0
  2723  001BD8  6E08               	movwf	i2cWriteByte@send_stop^0,c
  2724  001BDA  C011  F009         	movff	dsReadData@address,i2cWriteByte@byte
  2725  001BDE  0E00               	movlw	0
  2726  001BE0  EC8E  F00C         	call	_i2cWriteByte
  2727                           
  2728                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  2729  001BE4  0E00               	movlw	0
  2730  001BE6  6E08               	movwf	i2cWriteByte@send_stop^0,c
  2731  001BE8  0ED1               	movlw	209
  2732  001BEA  6E09               	movwf	i2cWriteByte@byte^0,c
  2733  001BEC  0E01               	movlw	1
  2734  001BEE  EC8E  F00C         	call	_i2cWriteByte
  2735                           
  2736                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  2737  001BF2  0E01               	movlw	1
  2738  001BF4  6E08               	movwf	i2cReadByte@send_stop^0,c
  2739  001BF6  0E01               	movlw	1
  2740  001BF8  EC5A  F00C         	call	_i2cReadByte
  2741  001BFC  6E13               	movwf	??_dsReadData^0,c
  2742  001BFE  5013               	movf	??_dsReadData^0,w,c
  2743  001C00  6E14               	movwf	dsReadData@result^0,c
  2744  001C02  6A15               	clrf	(dsReadData@result+1)^0,c
  2745  001C04                     
  2746                           ;ds1307.c: 35:  return result;
  2747  001C04  C014  F011         	movff	dsReadData@result,?_dsReadData
  2748  001C08  C015  F012         	movff	dsReadData@result+1,?_dsReadData+1
  2749  001C0C  0012               	return		;funcret
  2750  001C0E                     __end_of_dsReadData:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _i2cWriteByte *****************
  2754 ;; Defined at:
  2755 ;;		line 113 in file "i2c.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  send_start      1    wreg     unsigned char 
  2758 ;;  send_stop       1    7[COMRAM] unsigned char 
  2759 ;;  byte            1    8[COMRAM] unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  send_start      1    9[COMRAM] unsigned char 
  2762 ;;  bit             1   10[COMRAM] unsigned char 
  2763 ;;  nack            1    0        unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      unsigned char 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2773 ;;      Params:         2       0       0       0       0       0       0
  2774 ;;      Locals:         2       0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0
  2776 ;;      Totals:         4       0       0       0       0       0       0
  2777 ;;Total ram usage:        4 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 3
  2780 ;; This function calls:
  2781 ;;		_i2c_read_bit
  2782 ;;		_i2c_start
  2783 ;;		_i2c_stop
  2784 ;;		_i2c_write_bit
  2785 ;; This function is called by:
  2786 ;;		_dsReadData
  2787 ;;		_dsWriteData
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text17
  2792  00191C                     __ptext17:
  2793                           	callstack 0
  2794  00191C                     _i2cWriteByte:
  2795                           	callstack 25
  2796                           
  2797                           ;incstack = 0
  2798                           ;i2cWriteByte@send_start stored from wreg
  2799  00191C  6E0A               	movwf	i2cWriteByte@send_start^0,c
  2800  00191E                     
  2801                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  2802  00191E  500A               	movf	i2cWriteByte@send_start^0,w,c
  2803  001920  B4D8               	btfsc	status,2,c
  2804  001922  EF95  F00C         	goto	u1981
  2805  001926  EF97  F00C         	goto	u1980
  2806  00192A                     u1981:
  2807  00192A  EF99  F00C         	goto	l2305
  2808  00192E                     u1980:
  2809  00192E                     
  2810                           ;i2c.c: 117:   i2c_start();
  2811  00192E  EC07  F00E         	call	_i2c_start	;wreg free
  2812  001932                     l2305:
  2813                           
  2814                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  2815  001932  0E00               	movlw	0
  2816  001934  6E0B               	movwf	i2cWriteByte@bit^0,c
  2817  001936                     l2311:
  2818                           
  2819                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  2820  001936  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  2821  001938  EFA0  F00C         	goto	u1991
  2822  00193C  EFA3  F00C         	goto	u1990
  2823  001940                     u1991:
  2824  001940  0E01               	movlw	1
  2825  001942  EFA4  F00C         	goto	u2000
  2826  001946                     u1990:
  2827  001946  0E00               	movlw	0
  2828  001948                     u2000:
  2829  001948  ECEB  F00C         	call	_i2c_write_bit
  2830  00194C                     
  2831                           ;i2c.c: 121:   byte <<= 1;
  2832  00194C  90D8               	bcf	status,0,c
  2833  00194E  3609               	rlcf	i2cWriteByte@byte^0,f,c
  2834  001950                     
  2835                           ;i2c.c: 122:  }
  2836  001950  2A0B               	incf	i2cWriteByte@bit^0,f,c
  2837  001952  0E07               	movlw	7
  2838  001954  640B               	cpfsgt	i2cWriteByte@bit^0,c
  2839  001956  EFAF  F00C         	goto	u2011
  2840  00195A  EFB1  F00C         	goto	u2010
  2841  00195E                     u2011:
  2842  00195E  EF9B  F00C         	goto	l2311
  2843  001962                     u2010:
  2844  001962  EC13  F00F         	call	_i2c_read_bit	;wreg free
  2845  001966                     
  2846                           ;i2c.c: 124:  if (send_stop) {
  2847  001966  5008               	movf	i2cWriteByte@send_stop^0,w,c
  2848  001968  B4D8               	btfsc	status,2,c
  2849  00196A  EFB9  F00C         	goto	u2021
  2850  00196E  EFBB  F00C         	goto	u2020
  2851  001972                     u2021:
  2852  001972  EFBD  F00C         	goto	l509
  2853  001976                     u2020:
  2854  001976                     
  2855                           ;i2c.c: 125:   i2c_stop();
  2856  001976  EC44  F00F         	call	_i2c_stop	;wreg free
  2857  00197A                     l509:
  2858  00197A  0012               	return		;funcret
  2859  00197C                     __end_of_i2cWriteByte:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _i2c_start *****************
  2863 ;; Defined at:
  2864 ;;		line 52 in file "i2c.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2878 ;;      Params:         0       0       0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		_I2C_delay
  2887 ;;		_clear_SCL
  2888 ;;		_clear_SDA
  2889 ;;		_read_SCL
  2890 ;;		_read_SDA
  2891 ;; This function is called by:
  2892 ;;		_i2cWriteByte
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text18
  2897  001C0E                     __ptext18:
  2898                           	callstack 0
  2899  001C0E                     _i2c_start:
  2900                           	callstack 25
  2901  001C0E                     
  2902                           ;i2c.c: 54:  if (started) {
  2903  001C0E  5041               	movf	_started^0,w,c
  2904  001C10  B4D8               	btfsc	status,2,c
  2905  001C12  EF0D  F00E         	goto	u1911
  2906  001C16  EF0F  F00E         	goto	u1910
  2907  001C1A                     u1911:
  2908  001C1A  EF1F  F00E         	goto	l2237
  2909  001C1E                     u1910:
  2910  001C1E                     
  2911                           ;i2c.c: 55:   read_SDA();
  2912  001C1E  EC8B  F00E         	call	_read_SDA	;wreg free
  2913  001C22                     
  2914                           ;i2c.c: 56:   I2C_delay();
  2915  001C22  EC3F  F010         	call	_I2C_delay	;wreg free
  2916  001C26                     l2233:
  2917  001C26  ECA7  F00E         	call	_read_SCL	;wreg free
  2918  001C2A  0900               	iorlw	0
  2919  001C2C  B4D8               	btfsc	status,2,c
  2920  001C2E  EF1B  F00E         	goto	u1921
  2921  001C32  EF1D  F00E         	goto	u1920
  2922  001C36                     u1921:
  2923  001C36  EF13  F00E         	goto	l2233
  2924  001C3A                     u1920:
  2925  001C3A                     
  2926                           ;i2c.c: 59:   I2C_delay();
  2927  001C3A  EC3F  F010         	call	_I2C_delay	;wreg free
  2928  001C3E                     l2237:
  2929                           
  2930                           ;i2c.c: 61:  if (read_SDA() == 0) {
  2931  001C3E  EC8B  F00E         	call	_read_SDA	;wreg free
  2932  001C42                     
  2933                           ;i2c.c: 65:  clear_SDA();
  2934  001C42  EC5B  F00F         	call	_clear_SDA	;wreg free
  2935  001C46                     
  2936                           ;i2c.c: 66:  I2C_delay();
  2937  001C46  EC3F  F010         	call	_I2C_delay	;wreg free
  2938  001C4A                     
  2939                           ;i2c.c: 67:  clear_SCL();
  2940  001C4A  EC70  F00F         	call	_clear_SCL	;wreg free
  2941  001C4E                     
  2942                           ;i2c.c: 68:  started = 1;
  2943  001C4E  0E01               	movlw	1
  2944  001C50  6E41               	movwf	_started^0,c
  2945  001C52  0012               	return		;funcret
  2946  001C54                     __end_of_i2c_start:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _i2cReadByte *****************
  2950 ;; Defined at:
  2951 ;;		line 131 in file "i2c.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  nack            1    wreg     unsigned char 
  2954 ;;  send_stop       1    7[COMRAM] unsigned char 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  nack            1   11[COMRAM] unsigned char 
  2957 ;;  bit             2   14[COMRAM] unsigned int 
  2958 ;;  byte            2   12[COMRAM] int 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      unsigned char 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2968 ;;      Params:         1       0       0       0       0       0       0
  2969 ;;      Locals:         5       0       0       0       0       0       0
  2970 ;;      Temps:          3       0       0       0       0       0       0
  2971 ;;      Totals:         9       0       0       0       0       0       0
  2972 ;;Total ram usage:        9 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 3
  2975 ;; This function calls:
  2976 ;;		_i2c_read_bit
  2977 ;;		_i2c_stop
  2978 ;;		_i2c_write_bit
  2979 ;; This function is called by:
  2980 ;;		_dsReadData
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text19
  2985  0018B4                     __ptext19:
  2986                           	callstack 0
  2987  0018B4                     _i2cReadByte:
  2988                           	callstack 25
  2989                           
  2990                           ;incstack = 0
  2991                           ;i2cReadByte@nack stored from wreg
  2992  0018B4  6E0C               	movwf	i2cReadByte@nack^0,c
  2993  0018B6                     
  2994                           ;i2c.c: 132:  int byte = 0;
  2995  0018B6  0E00               	movlw	0
  2996  0018B8  6E0E               	movwf	(i2cReadByte@byte+1)^0,c
  2997  0018BA  0E00               	movlw	0
  2998  0018BC  6E0D               	movwf	i2cReadByte@byte^0,c
  2999                           
  3000                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  3001  0018BE  0E00               	movlw	0
  3002  0018C0  6E10               	movwf	(i2cReadByte@bit+1)^0,c
  3003  0018C2  0E00               	movlw	0
  3004  0018C4  6E0F               	movwf	i2cReadByte@bit^0,c
  3005  0018C6                     l2333:
  3006                           
  3007                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  3008  0018C6  EC13  F00F         	call	_i2c_read_bit	;wreg free
  3009  0018CA  6E09               	movwf	??_i2cReadByte^0,c
  3010  0018CC  5009               	movf	??_i2cReadByte^0,w,c
  3011  0018CE  C00D  F00A         	movff	i2cReadByte@byte,??_i2cReadByte+1
  3012  0018D2  C00E  F00B         	movff	i2cReadByte@byte+1,??_i2cReadByte+2
  3013  0018D6  90D8               	bcf	status,0,c
  3014  0018D8  360A               	rlcf	(??_i2cReadByte+1)^0,f,c
  3015  0018DA  360B               	rlcf	(??_i2cReadByte+2)^0,f,c
  3016  0018DC  100A               	iorwf	(??_i2cReadByte+1)^0,w,c
  3017  0018DE  6E0D               	movwf	i2cReadByte@byte^0,c
  3018  0018E0  500B               	movf	(??_i2cReadByte+2)^0,w,c
  3019  0018E2  6E0E               	movwf	(i2cReadByte@byte+1)^0,c
  3020  0018E4                     
  3021                           ;i2c.c: 136:  }
  3022  0018E4  4A0F               	infsnz	i2cReadByte@bit^0,f,c
  3023  0018E6  2A10               	incf	(i2cReadByte@bit+1)^0,f,c
  3024  0018E8  5010               	movf	(i2cReadByte@bit+1)^0,w,c
  3025  0018EA  E109               	bnz	u2030
  3026  0018EC  0E08               	movlw	8
  3027  0018EE  5C0F               	subwf	i2cReadByte@bit^0,w,c
  3028  0018F0  A0D8               	btfss	status,0,c
  3029  0018F2  EF7D  F00C         	goto	u2031
  3030  0018F6  EF7F  F00C         	goto	u2030
  3031  0018FA                     u2031:
  3032  0018FA  EF63  F00C         	goto	l2333
  3033  0018FE                     u2030:
  3034  0018FE                     
  3035                           ;i2c.c: 137:  i2c_write_bit(nack);
  3036  0018FE  500C               	movf	i2cReadByte@nack^0,w,c
  3037  001900  ECEB  F00C         	call	_i2c_write_bit
  3038  001904                     
  3039                           ;i2c.c: 138:  if (send_stop) {
  3040  001904  5008               	movf	i2cReadByte@send_stop^0,w,c
  3041  001906  B4D8               	btfsc	status,2,c
  3042  001908  EF88  F00C         	goto	u2041
  3043  00190C  EF8A  F00C         	goto	u2040
  3044  001910                     u2041:
  3045  001910  EF8C  F00C         	goto	l2345
  3046  001914                     u2040:
  3047  001914                     
  3048                           ;i2c.c: 139:   i2c_stop();
  3049  001914  EC44  F00F         	call	_i2c_stop	;wreg free
  3050  001918                     l2345:
  3051                           
  3052                           ;i2c.c: 141:  return byte;
  3053  001918  500D               	movf	i2cReadByte@byte^0,w,c
  3054  00191A  0012               	return		;funcret
  3055  00191C                     __end_of_i2cReadByte:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _i2c_write_bit *****************
  3059 ;; Defined at:
  3060 ;;		line 84 in file "i2c.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  bit             1    wreg     unsigned char 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  bit             1    6[COMRAM] unsigned char 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3074 ;;      Params:         0       0       0       0       0       0       0
  3075 ;;      Locals:         1       0       0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0
  3077 ;;      Totals:         1       0       0       0       0       0       0
  3078 ;;Total ram usage:        1 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 2
  3081 ;; This function calls:
  3082 ;;		_I2C_delay
  3083 ;;		_clear_SCL
  3084 ;;		_clear_SDA
  3085 ;;		_read_SCL
  3086 ;;		_read_SDA
  3087 ;; This function is called by:
  3088 ;;		_i2cWriteByte
  3089 ;;		_i2cReadByte
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text20
  3094  0019D6                     __ptext20:
  3095                           	callstack 0
  3096  0019D6                     _i2c_write_bit:
  3097                           	callstack 25
  3098                           
  3099                           ;incstack = 0
  3100                           ;i2c_write_bit@bit stored from wreg
  3101  0019D6  6E07               	movwf	i2c_write_bit@bit^0,c
  3102  0019D8                     
  3103                           ;i2c.c: 85:  if (bit) {
  3104  0019D8  5007               	movf	i2c_write_bit@bit^0,w,c
  3105  0019DA  B4D8               	btfsc	status,2,c
  3106  0019DC  EFF2  F00C         	goto	u1941
  3107  0019E0  EFF4  F00C         	goto	u1940
  3108  0019E4                     u1941:
  3109  0019E4  EFF8  F00C         	goto	l2265
  3110  0019E8                     u1940:
  3111  0019E8                     
  3112                           ;i2c.c: 86:   read_SDA();
  3113  0019E8  EC8B  F00E         	call	_read_SDA	;wreg free
  3114                           
  3115                           ;i2c.c: 87:  } else {
  3116  0019EC  EFFA  F00C         	goto	l2267
  3117  0019F0                     l2265:
  3118                           
  3119                           ;i2c.c: 88:   clear_SDA();
  3120  0019F0  EC5B  F00F         	call	_clear_SDA	;wreg free
  3121  0019F4                     l2267:
  3122                           
  3123                           ;i2c.c: 90:  I2C_delay();
  3124  0019F4  EC3F  F010         	call	_I2C_delay	;wreg free
  3125  0019F8                     l2269:
  3126  0019F8  ECA7  F00E         	call	_read_SCL	;wreg free
  3127  0019FC  0900               	iorlw	0
  3128  0019FE  B4D8               	btfsc	status,2,c
  3129  001A00  EF04  F00D         	goto	u1951
  3130  001A04  EF06  F00D         	goto	u1950
  3131  001A08                     u1951:
  3132  001A08  EFFC  F00C         	goto	l2269
  3133  001A0C                     u1950:
  3134  001A0C                     
  3135                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  3136  001A0C  5007               	movf	i2c_write_bit@bit^0,w,c
  3137  001A0E  B4D8               	btfsc	status,2,c
  3138  001A10  EF0C  F00D         	goto	u1961
  3139  001A14  EF0E  F00D         	goto	u1960
  3140  001A18                     u1961:
  3141  001A18  EF10  F00D         	goto	l2275
  3142  001A1C                     u1960:
  3143  001A1C  EC8B  F00E         	call	_read_SDA	;wreg free
  3144  001A20                     l2275:
  3145                           
  3146                           ;i2c.c: 95:  I2C_delay();
  3147  001A20  EC3F  F010         	call	_I2C_delay	;wreg free
  3148  001A24                     
  3149                           ;i2c.c: 96:  clear_SCL();
  3150  001A24  EC70  F00F         	call	_clear_SCL	;wreg free
  3151  001A28                     
  3152                           ;i2c.c: 97:  I2C_delay();
  3153  001A28  EC3F  F010         	call	_I2C_delay	;wreg free
  3154  001A2C  0012               	return		;funcret
  3155  001A2E                     __end_of_i2c_write_bit:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function _i2c_stop *****************
  3159 ;; Defined at:
  3160 ;;		line 71 in file "i2c.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         0       0       0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 2
  3181 ;; This function calls:
  3182 ;;		_I2C_delay
  3183 ;;		_clear_SDA
  3184 ;;		_read_SCL
  3185 ;;		_read_SDA
  3186 ;; This function is called by:
  3187 ;;		_i2cWriteByte
  3188 ;;		_i2cReadByte
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text21
  3193  001E88                     __ptext21:
  3194                           	callstack 0
  3195  001E88                     _i2c_stop:
  3196                           	callstack 25
  3197  001E88                     
  3198                           ;i2c.c: 73:  clear_SDA();
  3199  001E88  EC5B  F00F         	call	_clear_SDA	;wreg free
  3200  001E8C                     
  3201                           ;i2c.c: 74:  I2C_delay();
  3202  001E8C  EC3F  F010         	call	_I2C_delay	;wreg free
  3203  001E90                     l2251:
  3204  001E90  ECA7  F00E         	call	_read_SCL	;wreg free
  3205  001E94  0900               	iorlw	0
  3206  001E96  B4D8               	btfsc	status,2,c
  3207  001E98  EF50  F00F         	goto	u1931
  3208  001E9C  EF52  F00F         	goto	u1930
  3209  001EA0                     u1931:
  3210  001EA0  EF48  F00F         	goto	l2251
  3211  001EA4                     u1930:
  3212  001EA4                     
  3213                           ;i2c.c: 76:  I2C_delay();
  3214  001EA4  EC3F  F010         	call	_I2C_delay	;wreg free
  3215  001EA8                     
  3216                           ;i2c.c: 77:  if (read_SDA() == 0) {
  3217  001EA8  EC8B  F00E         	call	_read_SDA	;wreg free
  3218  001EAC                     
  3219                           ;i2c.c: 80:  I2C_delay();
  3220  001EAC  EC3F  F010         	call	_I2C_delay	;wreg free
  3221  001EB0                     
  3222                           ;i2c.c: 81:  started = 0;
  3223  001EB0  0E00               	movlw	0
  3224  001EB2  6E41               	movwf	_started^0,c
  3225  001EB4  0012               	return		;funcret
  3226  001EB6                     __end_of_i2c_stop:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _clear_SDA *****************
  3230 ;; Defined at:
  3231 ;;		line 45 in file "i2c.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         0       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 1
  3252 ;; This function calls:
  3253 ;;		_digitalWrite
  3254 ;;		_pinMode
  3255 ;; This function is called by:
  3256 ;;		_i2c_start
  3257 ;;		_i2c_stop
  3258 ;;		_i2c_write_bit
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text22
  3263  001EB6                     __ptext22:
  3264                           	callstack 0
  3265  001EB6                     _clear_SDA:
  3266                           	callstack 25
  3267  001EB6                     
  3268                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  3269  001EB6  0E00               	movlw	0
  3270  001EB8  6E02               	movwf	(pinMode@pin+1)^0,c
  3271  001EBA  0E0C               	movlw	12
  3272  001EBC  6E01               	movwf	pinMode@pin^0,c
  3273  001EBE  0E00               	movlw	0
  3274  001EC0  6E04               	movwf	(pinMode@type+1)^0,c
  3275  001EC2  0E00               	movlw	0
  3276  001EC4  6E03               	movwf	pinMode@type^0,c
  3277  001EC6  ECC6  F005         	call	_pinMode	;wreg free
  3278                           
  3279                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  3280  001ECA  0E00               	movlw	0
  3281  001ECC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3282  001ECE  0E0C               	movlw	12
  3283  001ED0  6E01               	movwf	digitalWrite@pin^0,c
  3284  001ED2  0E00               	movlw	0
  3285  001ED4  6E04               	movwf	(digitalWrite@value+1)^0,c
  3286  001ED6  0E00               	movlw	0
  3287  001ED8  6E03               	movwf	digitalWrite@value^0,c
  3288  001EDA  EC9F  F004         	call	_digitalWrite	;wreg free
  3289  001EDE  0012               	return		;funcret
  3290  001EE0                     __end_of_clear_SDA:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _i2c_read_bit *****************
  3294 ;; Defined at:
  3295 ;;		line 100 in file "i2c.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  bit             1    6[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      unsigned char 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3309 ;;      Params:         0       0       0       0       0       0       0
  3310 ;;      Locals:         1       0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0
  3312 ;;      Totals:         1       0       0       0       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 2
  3316 ;; This function calls:
  3317 ;;		_I2C_delay
  3318 ;;		_clear_SCL
  3319 ;;		_read_SCL
  3320 ;;		_read_SDA
  3321 ;; This function is called by:
  3322 ;;		_i2cWriteByte
  3323 ;;		_i2cReadByte
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text23
  3328  001E26                     __ptext23:
  3329                           	callstack 0
  3330  001E26                     _i2c_read_bit:
  3331                           	callstack 25
  3332  001E26                     
  3333                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  3334  001E26  EC8B  F00E         	call	_read_SDA	;wreg free
  3335  001E2A                     
  3336                           ;i2c.c: 103:  I2C_delay();
  3337  001E2A  EC3F  F010         	call	_I2C_delay	;wreg free
  3338  001E2E                     l2285:
  3339  001E2E  ECA7  F00E         	call	_read_SCL	;wreg free
  3340  001E32  0900               	iorlw	0
  3341  001E34  B4D8               	btfsc	status,2,c
  3342  001E36  EF1F  F00F         	goto	u1971
  3343  001E3A  EF21  F00F         	goto	u1970
  3344  001E3E                     u1971:
  3345  001E3E  EF17  F00F         	goto	l2285
  3346  001E42                     u1970:
  3347  001E42                     
  3348                           ;i2c.c: 105:  bit = read_SDA();
  3349  001E42  EC8B  F00E         	call	_read_SDA	;wreg free
  3350  001E46  6E07               	movwf	i2c_read_bit@bit^0,c
  3351  001E48                     
  3352                           ;i2c.c: 106:  I2C_delay();
  3353  001E48  EC3F  F010         	call	_I2C_delay	;wreg free
  3354  001E4C                     
  3355                           ;i2c.c: 107:  clear_SCL();
  3356  001E4C  EC70  F00F         	call	_clear_SCL	;wreg free
  3357                           
  3358                           ;i2c.c: 108:  I2C_delay();
  3359  001E50  EC3F  F010         	call	_I2C_delay	;wreg free
  3360  001E54                     
  3361                           ;i2c.c: 109:  return bit;
  3362  001E54  5007               	movf	i2c_read_bit@bit^0,w,c
  3363  001E56  0012               	return		;funcret
  3364  001E58                     __end_of_i2c_read_bit:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _read_SDA *****************
  3368 ;; Defined at:
  3369 ;;		line 34 in file "i2c.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      unsigned char 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3383 ;;      Params:         0       0       0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 1
  3390 ;; This function calls:
  3391 ;;		_digitalRead
  3392 ;;		_pinMode
  3393 ;; This function is called by:
  3394 ;;		_i2c_start
  3395 ;;		_i2c_stop
  3396 ;;		_i2c_write_bit
  3397 ;;		_i2c_read_bit
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text24
  3402  001D16                     __ptext24:
  3403                           	callstack 0
  3404  001D16                     _read_SDA:
  3405                           	callstack 25
  3406  001D16                     
  3407                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  3408  001D16  0E00               	movlw	0
  3409  001D18  6E02               	movwf	(pinMode@pin+1)^0,c
  3410  001D1A  0E0C               	movlw	12
  3411  001D1C  6E01               	movwf	pinMode@pin^0,c
  3412  001D1E  0E00               	movlw	0
  3413  001D20  6E04               	movwf	(pinMode@type+1)^0,c
  3414  001D22  0E01               	movlw	1
  3415  001D24  6E03               	movwf	pinMode@type^0,c
  3416  001D26  ECC6  F005         	call	_pinMode	;wreg free
  3417                           
  3418                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  3419  001D2A  0E00               	movlw	0
  3420  001D2C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3421  001D2E  0E0C               	movlw	12
  3422  001D30  6E01               	movwf	digitalRead@pin^0,c
  3423  001D32  ECA3  F007         	call	_digitalRead	;wreg free
  3424  001D36  5001               	movf	?_digitalRead^0,w,c
  3425  001D38  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3426  001D3A  A4D8               	btfss	status,2,c
  3427  001D3C  EFA2  F00E         	goto	u1891
  3428  001D40  EFA5  F00E         	goto	u1890
  3429  001D44                     u1891:
  3430  001D44  0E01               	movlw	1
  3431  001D46  EFA6  F00E         	goto	u1900
  3432  001D4A                     u1890:
  3433  001D4A  0E00               	movlw	0
  3434  001D4C                     u1900:
  3435  001D4C  0012               	return		;funcret
  3436  001D4E                     __end_of_read_SDA:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _read_SCL *****************
  3440 ;; Defined at:
  3441 ;;		line 29 in file "i2c.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 1
  3462 ;; This function calls:
  3463 ;;		_digitalRead
  3464 ;;		_pinMode
  3465 ;; This function is called by:
  3466 ;;		_i2c_start
  3467 ;;		_i2c_stop
  3468 ;;		_i2c_write_bit
  3469 ;;		_i2c_read_bit
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text25
  3474  001D4E                     __ptext25:
  3475                           	callstack 0
  3476  001D4E                     _read_SCL:
  3477                           	callstack 25
  3478  001D4E                     
  3479                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  3480  001D4E  0E00               	movlw	0
  3481  001D50  6E02               	movwf	(pinMode@pin+1)^0,c
  3482  001D52  0E0B               	movlw	11
  3483  001D54  6E01               	movwf	pinMode@pin^0,c
  3484  001D56  0E00               	movlw	0
  3485  001D58  6E04               	movwf	(pinMode@type+1)^0,c
  3486  001D5A  0E01               	movlw	1
  3487  001D5C  6E03               	movwf	pinMode@type^0,c
  3488  001D5E  ECC6  F005         	call	_pinMode	;wreg free
  3489                           
  3490                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  3491  001D62  0E00               	movlw	0
  3492  001D64  6E02               	movwf	(digitalRead@pin+1)^0,c
  3493  001D66  0E0B               	movlw	11
  3494  001D68  6E01               	movwf	digitalRead@pin^0,c
  3495  001D6A  ECA3  F007         	call	_digitalRead	;wreg free
  3496  001D6E  5001               	movf	?_digitalRead^0,w,c
  3497  001D70  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3498  001D72  A4D8               	btfss	status,2,c
  3499  001D74  EFBE  F00E         	goto	u1871
  3500  001D78  EFC1  F00E         	goto	u1870
  3501  001D7C                     u1871:
  3502  001D7C  0E01               	movlw	1
  3503  001D7E  EFC2  F00E         	goto	u1880
  3504  001D82                     u1870:
  3505  001D82  0E00               	movlw	0
  3506  001D84                     u1880:
  3507  001D84  0012               	return		;funcret
  3508  001D86                     __end_of_read_SCL:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _clear_SCL *****************
  3512 ;; Defined at:
  3513 ;;		line 39 in file "i2c.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3527 ;;      Params:         0       0       0       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0
  3530 ;;      Totals:         0       0       0       0       0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 1
  3534 ;; This function calls:
  3535 ;;		_digitalWrite
  3536 ;;		_pinMode
  3537 ;; This function is called by:
  3538 ;;		_i2c_start
  3539 ;;		_i2c_write_bit
  3540 ;;		_i2c_read_bit
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text26
  3545  001EE0                     __ptext26:
  3546                           	callstack 0
  3547  001EE0                     _clear_SCL:
  3548                           	callstack 25
  3549  001EE0                     
  3550                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  3551  001EE0  0E00               	movlw	0
  3552  001EE2  6E02               	movwf	(pinMode@pin+1)^0,c
  3553  001EE4  0E0B               	movlw	11
  3554  001EE6  6E01               	movwf	pinMode@pin^0,c
  3555  001EE8  0E00               	movlw	0
  3556  001EEA  6E04               	movwf	(pinMode@type+1)^0,c
  3557  001EEC  0E00               	movlw	0
  3558  001EEE  6E03               	movwf	pinMode@type^0,c
  3559  001EF0  ECC6  F005         	call	_pinMode	;wreg free
  3560                           
  3561                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  3562  001EF4  0E00               	movlw	0
  3563  001EF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3564  001EF8  0E0B               	movlw	11
  3565  001EFA  6E01               	movwf	digitalWrite@pin^0,c
  3566  001EFC  0E00               	movlw	0
  3567  001EFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3568  001F00  0E00               	movlw	0
  3569  001F02  6E03               	movwf	digitalWrite@value^0,c
  3570  001F04  EC9F  F004         	call	_digitalWrite	;wreg free
  3571  001F08  0012               	return		;funcret
  3572  001F0A                     __end_of_clear_SCL:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _I2C_delay *****************
  3576 ;; Defined at:
  3577 ;;		line 22 in file "i2c.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  i               2    0        int 
  3582 ;;  v               2    0        volatile int 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		None
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3592 ;;      Params:         0       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_i2c_start
  3602 ;;		_i2c_stop
  3603 ;;		_i2c_write_bit
  3604 ;;		_i2c_read_bit
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text27
  3609  00207E                     __ptext27:
  3610                           	callstack 0
  3611  00207E                     _I2C_delay:
  3612                           	callstack 26
  3613  00207E  0012               	return		;funcret
  3614  002080                     __end_of_I2C_delay:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _bcd2dec *****************
  3618 ;; Defined at:
  3619 ;;		line 12 in file "ds1307.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  value           2   35[COMRAM] int 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   35[COMRAM] int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3633 ;;      Params:         2       0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0
  3635 ;;      Temps:          2       0       0       0       0       0       0
  3636 ;;      Totals:         4       0       0       0       0       0       0
  3637 ;;Total ram usage:        4 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 1
  3640 ;; This function calls:
  3641 ;;		___awdiv
  3642 ;;		___wmul
  3643 ;; This function is called by:
  3644 ;;		_inicio
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text28
  3649  001C54                     __ptext28:
  3650                           	callstack 0
  3651  001C54                     _bcd2dec:
  3652                           	callstack 28
  3653  001C54                     
  3654                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  3655  001C54  0E0F               	movlw	15
  3656  001C56  1424               	andwf	bcd2dec@value^0,w,c
  3657  001C58  6E26               	movwf	??_bcd2dec^0,c
  3658  001C5A  0E00               	movlw	0
  3659  001C5C  1425               	andwf	(bcd2dec@value+1)^0,w,c
  3660  001C5E  6E27               	movwf	(??_bcd2dec+1)^0,c
  3661  001C60  0E00               	movlw	0
  3662  001C62  6E19               	movwf	(___awdiv@divisor+1)^0,c
  3663  001C64  0E10               	movlw	16
  3664  001C66  6E18               	movwf	___awdiv@divisor^0,c
  3665  001C68  C024  F016         	movff	bcd2dec@value,___awdiv@dividend
  3666  001C6C  C025  F017         	movff	bcd2dec@value+1,___awdiv@dividend+1
  3667  001C70  EC76  F00A         	call	___awdiv	;wreg free
  3668  001C74  C016  F01E         	movff	?___awdiv,___wmul@multiplier
  3669  001C78  C017  F01F         	movff	?___awdiv+1,___wmul@multiplier+1
  3670  001C7C  0E00               	movlw	0
  3671  001C7E  6E21               	movwf	(___wmul@multiplicand+1)^0,c
  3672  001C80  0E0A               	movlw	10
  3673  001C82  6E20               	movwf	___wmul@multiplicand^0,c
  3674  001C84  ECD5  F00F         	call	___wmul	;wreg free
  3675  001C88  5026               	movf	??_bcd2dec^0,w,c
  3676  001C8A  241E               	addwf	?___wmul^0,w,c
  3677  001C8C  6E24               	movwf	?_bcd2dec^0,c
  3678  001C8E  5027               	movf	(??_bcd2dec+1)^0,w,c
  3679  001C90  201F               	addwfc	(?___wmul+1)^0,w,c
  3680  001C92  6E25               	movwf	(?_bcd2dec+1)^0,c
  3681  001C94  0012               	return		;funcret
  3682  001C96                     __end_of_bcd2dec:
  3683                           	callstack 0
  3684                           
  3685 ;; *************** function ___wmul *****************
  3686 ;; Defined at:
  3687 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  multiplier      2   29[COMRAM] unsigned int 
  3690 ;;  multiplicand    2   31[COMRAM] unsigned int 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  product         2   33[COMRAM] unsigned int 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   29[COMRAM] unsigned int 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, prodl, prodh
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3702 ;;      Params:         4       0       0       0       0       0       0
  3703 ;;      Locals:         2       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0
  3705 ;;      Totals:         6       0       0       0       0       0       0
  3706 ;;Total ram usage:        6 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_bcd2dec
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text29
  3716  001FAA                     __ptext29:
  3717                           	callstack 0
  3718  001FAA                     ___wmul:
  3719                           	callstack 28
  3720  001FAA  501E               	movf	___wmul@multiplier^0,w,c
  3721  001FAC  0220               	mulwf	___wmul@multiplicand^0,c
  3722  001FAE  CFF3 F022          	movff	prodl,___wmul@product
  3723  001FB2  CFF4 F023          	movff	prodh,___wmul@product+1
  3724  001FB6  501E               	movf	___wmul@multiplier^0,w,c
  3725  001FB8  0221               	mulwf	(___wmul@multiplicand+1)^0,c
  3726  001FBA  50F3               	movf	243,w,c
  3727  001FBC  2623               	addwf	(___wmul@product+1)^0,f,c
  3728  001FBE  501F               	movf	(___wmul@multiplier+1)^0,w,c
  3729  001FC0  0220               	mulwf	___wmul@multiplicand^0,c
  3730  001FC2  50F3               	movf	243,w,c
  3731  001FC4  2623               	addwf	(___wmul@product+1)^0,f,c
  3732  001FC6  C022  F01E         	movff	___wmul@product,?___wmul
  3733  001FCA  C023  F01F         	movff	___wmul@product+1,?___wmul+1
  3734  001FCE  0012               	return		;funcret
  3735  001FD0                     __end_of___wmul:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _escolherProcesso *****************
  3739 ;; Defined at:
  3740 ;;		line 74 in file "main.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3754 ;;      Params:         0       0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 6
  3761 ;; This function calls:
  3762 ;;		_kpDebounce
  3763 ;;		_kpRead
  3764 ;;		_lcdCommand
  3765 ;;		_lcdString
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text30
  3772  001426                     __ptext30:
  3773                           	callstack 0
  3774  001426                     _escolherProcesso:
  3775                           	callstack 24
  3776  001426                     
  3777                           ;main.c: 75:     static unsigned int tecla = 16;;main.c: 77:     kpDebounce();
  3778  001426  EC58  F008         	call	_kpDebounce	;wreg free
  3779                           
  3780                           ;main.c: 78:     if (kpRead() != tecla) {
  3781  00142A  EC36  F010         	call	_kpRead	;wreg free
  3782  00142E  505B               	movf	escolherProcesso@tecla^0,w,c
  3783  001430  1801               	xorwf	?_kpRead^0,w,c
  3784  001432  E109               	bnz	u2420
  3785  001434  505C               	movf	(escolherProcesso@tecla+1)^0,w,c
  3786  001436  1802               	xorwf	(?_kpRead+1)^0,w,c
  3787  001438  B4D8               	btfsc	status,2,c
  3788  00143A  EF21  F00A         	goto	u2421
  3789  00143E  EF23  F00A         	goto	u2420
  3790  001442                     u2421:
  3791  001442  EF75  F00A         	goto	l75
  3792  001446                     u2420:
  3793  001446                     
  3794                           ;main.c: 80:         tecla = kpRead();
  3795  001446  EC36  F010         	call	_kpRead	;wreg free
  3796  00144A  C001  F05B         	movff	?_kpRead,escolherProcesso@tecla
  3797  00144E  C002  F05C         	movff	?_kpRead+1,escolherProcesso@tecla+1
  3798  001452                     
  3799                           ;main.c: 81:         lcdCommand(0x80);
  3800  001452  0E80               	movlw	128
  3801  001454  EC08  F010         	call	_lcdCommand
  3802  001458                     
  3803                           ;main.c: 82:         lcdString("Escolha o modo: ");
  3804  001458  0E2C               	movlw	low STR_8
  3805  00145A  6E0F               	movwf	lcdString@msg^0,c
  3806  00145C  0E06               	movlw	high STR_8
  3807  00145E  6E10               	movwf	(lcdString@msg+1)^0,c
  3808  001460  EC6E  F00D         	call	_lcdString	;wreg free
  3809  001464                     
  3810                           ;main.c: 83:         lcdCommand(0xC0);
  3811  001464  0EC0               	movlw	192
  3812  001466  EC08  F010         	call	_lcdCommand
  3813  00146A                     
  3814                           ;main.c: 84:         lcdString(processo[i]);
  3815  00146A  90D8               	bcf	status,0,c
  3816  00146C  343F               	rlcf	_i^0,w,c
  3817  00146E  6ED9               	movwf	fsr2l,c
  3818  001470  3440               	rlcf	(_i+1)^0,w,c
  3819  001472  6EDA               	movwf	fsr2h,c
  3820  001474  0E53               	movlw	low _processo
  3821  001476  26D9               	addwf	fsr2l,f,c
  3822  001478  0E00               	movlw	high _processo
  3823  00147A  22DA               	addwfc	fsr2h,f,c
  3824  00147C  CFDE F00F          	movff	postinc2,lcdString@msg
  3825  001480  CFDD F010          	movff	postdec2,lcdString@msg+1
  3826  001484  EC6E  F00D         	call	_lcdString	;wreg free
  3827  001488                     
  3828                           ;main.c: 85:         minutos = t[i];
  3829  001488  90D8               	bcf	status,0,c
  3830  00148A  343F               	rlcf	_i^0,w,c
  3831  00148C  6ED9               	movwf	fsr2l,c
  3832  00148E  3440               	rlcf	(_i+1)^0,w,c
  3833  001490  6EDA               	movwf	fsr2h,c
  3834  001492  0E4B               	movlw	low _t
  3835  001494  26D9               	addwf	fsr2l,f,c
  3836  001496  0E00               	movlw	high _t
  3837  001498  22DA               	addwfc	fsr2h,f,c
  3838  00149A  CFDE F03D          	movff	postinc2,_minutos
  3839  00149E  CFDD F03E          	movff	postdec2,_minutos+1
  3840  0014A2                     
  3841                           ;main.c: 86:         segundos = 0;
  3842  0014A2  0E00               	movlw	0
  3843  0014A4  6E3C               	movwf	(_segundos+1)^0,c
  3844  0014A6  0E00               	movlw	0
  3845  0014A8  6E3B               	movwf	_segundos^0,c
  3846  0014AA                     
  3847                           ;main.c: 88:         if (((tecla) & (1<<(7)))) {
  3848  0014AA  AE5B               	btfss	escolherProcesso@tecla^0,7,c
  3849  0014AC  EF5A  F00A         	goto	u2431
  3850  0014B0  EF5C  F00A         	goto	u2430
  3851  0014B4                     u2431:
  3852  0014B4  EF75  F00A         	goto	l75
  3853  0014B8                     u2430:
  3854  0014B8                     
  3855                           ;main.c: 89:             lcdCommand(0x01);
  3856  0014B8  0E01               	movlw	1
  3857  0014BA  EC08  F010         	call	_lcdCommand
  3858  0014BE                     
  3859                           ;main.c: 90:             if (i < 3) {
  3860  0014BE  BE40               	btfsc	(_i+1)^0,7,c
  3861  0014C0  EF6D  F00A         	goto	u2440
  3862  0014C4  5040               	movf	(_i+1)^0,w,c
  3863  0014C6  E107               	bnz	u2441
  3864  0014C8  0E03               	movlw	3
  3865  0014CA  5C3F               	subwf	_i^0,w,c
  3866  0014CC  B0D8               	btfsc	status,0,c
  3867  0014CE  EF6B  F00A         	goto	u2441
  3868  0014D2  EF6D  F00A         	goto	u2440
  3869  0014D6                     u2441:
  3870  0014D6  EF71  F00A         	goto	l2643
  3871  0014DA                     u2440:
  3872  0014DA                     
  3873                           ;main.c: 91:                 i++;
  3874  0014DA  4A3F               	infsnz	_i^0,f,c
  3875  0014DC  2A40               	incf	(_i+1)^0,f,c
  3876                           
  3877                           ;main.c: 92:             } else {
  3878  0014DE  EF75  F00A         	goto	l75
  3879  0014E2                     l2643:
  3880                           
  3881                           ;main.c: 93:                 i = 0;
  3882  0014E2  0E00               	movlw	0
  3883  0014E4  6E40               	movwf	(_i+1)^0,c
  3884  0014E6  0E00               	movlw	0
  3885  0014E8  6E3F               	movwf	_i^0,c
  3886  0014EA                     l75:
  3887  0014EA  0012               	return		;funcret
  3888  0014EC                     __end_of_escolherProcesso:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _kpRead *****************
  3892 ;; Defined at:
  3893 ;;		line 14 in file "keypad.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2    0[COMRAM] unsigned int 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         2       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         2       0       0       0       0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_leTeclado
  3917 ;;		_escolherProcesso
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text31
  3922  00206C                     __ptext31:
  3923                           	callstack 0
  3924  00206C                     _kpRead:
  3925                           	callstack 29
  3926  00206C                     
  3927                           ;keypad.c: 15:     return keys;
  3928  00206C  C039  F001         	movff	_keys,?_kpRead
  3929  002070  C03A  F002         	movff	_keys+1,?_kpRead+1
  3930  002074  0012               	return		;funcret
  3931  002076                     __end_of_kpRead:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _kpDebounce *****************
  3935 ;; Defined at:
  3936 ;;		line 27 in file "keypad.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  i               2   12[COMRAM] int 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3950 ;;      Params:         0       0       0       0       0       0       0
  3951 ;;      Locals:         2       0       0       0       0       0       0
  3952 ;;      Temps:          3       0       0       0       0       0       0
  3953 ;;      Totals:         5       0       0       0       0       0       0
  3954 ;;Total ram usage:        5 bytes
  3955 ;; Hardware stack levels used: 1
  3956 ;; Hardware stack levels required when called: 3
  3957 ;; This function calls:
  3958 ;;		_digitalRead
  3959 ;;		_soWrite
  3960 ;; This function is called by:
  3961 ;;		_leTeclado
  3962 ;;		_escolherProcesso
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text32
  3967  0010B0                     __ptext32:
  3968                           	callstack 0
  3969  0010B0                     _kpDebounce:
  3970                           	callstack 26
  3971  0010B0                     
  3972                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3973  0010B0  0E00               	movlw	0
  3974  0010B2  6E38               	movwf	(kpDebounce@newRead+1)^0,c
  3975  0010B4  0E00               	movlw	0
  3976  0010B6  6E37               	movwf	kpDebounce@newRead^0,c
  3977                           
  3978                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3979  0010B8  0E00               	movlw	0
  3980  0010BA  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3981  0010BC  0E00               	movlw	0
  3982  0010BE  6E0D               	movwf	kpDebounce@i^0,c
  3983  0010C0                     l2471:
  3984  0010C0  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3985  0010C2  EF6C  F008         	goto	u2191
  3986  0010C6  500E               	movf	(kpDebounce@i+1)^0,w,c
  3987  0010C8  E109               	bnz	u2190
  3988  0010CA  0E05               	movlw	5
  3989  0010CC  5C0D               	subwf	kpDebounce@i^0,w,c
  3990  0010CE  A0D8               	btfss	status,0,c
  3991  0010D0  EF6C  F008         	goto	u2191
  3992  0010D4  EF6E  F008         	goto	u2190
  3993  0010D8                     u2191:
  3994  0010D8  EF70  F008         	goto	l2475
  3995  0010DC                     u2190:
  3996  0010DC  EFD1  F008         	goto	l2487
  3997  0010E0                     l2475:
  3998                           
  3999                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4000  0010E0  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4001  0010E4  0E03               	movlw	3
  4002  0010E6  260A               	addwf	??_kpDebounce^0,f,c
  4003  0010E8  0E01               	movlw	1
  4004  0010EA  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4005  0010EC  0E00               	movlw	0
  4006  0010EE  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4007  0010F0  2A0A               	incf	??_kpDebounce^0,f,c
  4008  0010F2  EF7E  F008         	goto	u2204
  4009  0010F6                     u2205:
  4010  0010F6  90D8               	bcf	status,0,c
  4011  0010F8  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4012  0010FA  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4013  0010FC                     u2204:
  4014  0010FC  2E0A               	decfsz	??_kpDebounce^0,f,c
  4015  0010FE  EF7B  F008         	goto	u2205
  4016  001102  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  4017  001106  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  4018  00110A  EC99  F00D         	call	_soWrite	;wreg free
  4019                           
  4020                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4021  00110E  0E00               	movlw	0
  4022  001110  6E02               	movwf	(digitalRead@pin+1)^0,c
  4023  001112  0E0A               	movlw	10
  4024  001114  6E01               	movwf	digitalRead@pin^0,c
  4025  001116  ECA3  F007         	call	_digitalRead	;wreg free
  4026  00111A  5001               	movf	?_digitalRead^0,w,c
  4027  00111C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4028  00111E  B4D8               	btfsc	status,2,c
  4029  001120  EF94  F008         	goto	u2211
  4030  001124  EF96  F008         	goto	u2210
  4031  001128                     u2211:
  4032  001128  EFA9  F008         	goto	l2479
  4033  00112C                     u2210:
  4034  00112C                     
  4035                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4036  00112C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4037  001130  0E01               	movlw	1
  4038  001132  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4039  001134  0E00               	movlw	0
  4040  001136  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4041  001138  2A0A               	incf	??_kpDebounce^0,f,c
  4042  00113A  EFA2  F008         	goto	u2224
  4043  00113E                     u2225:
  4044  00113E  90D8               	bcf	status,0,c
  4045  001140  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4046  001142  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4047  001144                     u2224:
  4048  001144  2E0A               	decfsz	??_kpDebounce^0,f,c
  4049  001146  EF9F  F008         	goto	u2225
  4050  00114A  500B               	movf	(??_kpDebounce+1)^0,w,c
  4051  00114C  1237               	iorwf	kpDebounce@newRead^0,f,c
  4052  00114E  500C               	movf	(??_kpDebounce+2)^0,w,c
  4053  001150  1238               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4054  001152                     l2479:
  4055                           
  4056                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4057  001152  0E00               	movlw	0
  4058  001154  6E02               	movwf	(digitalRead@pin+1)^0,c
  4059  001156  0E09               	movlw	9
  4060  001158  6E01               	movwf	digitalRead@pin^0,c
  4061  00115A  ECA3  F007         	call	_digitalRead	;wreg free
  4062  00115E  5001               	movf	?_digitalRead^0,w,c
  4063  001160  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4064  001162  B4D8               	btfsc	status,2,c
  4065  001164  EFB6  F008         	goto	u2231
  4066  001168  EFB8  F008         	goto	u2230
  4067  00116C                     u2231:
  4068  00116C  EFCD  F008         	goto	l2483
  4069  001170                     u2230:
  4070  001170                     
  4071                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4072  001170  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4073  001174  0E05               	movlw	5
  4074  001176  260A               	addwf	??_kpDebounce^0,f,c
  4075  001178  0E01               	movlw	1
  4076  00117A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4077  00117C  0E00               	movlw	0
  4078  00117E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4079  001180  2A0A               	incf	??_kpDebounce^0,f,c
  4080  001182  EFC6  F008         	goto	u2244
  4081  001186                     u2245:
  4082  001186  90D8               	bcf	status,0,c
  4083  001188  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4084  00118A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4085  00118C                     u2244:
  4086  00118C  2E0A               	decfsz	??_kpDebounce^0,f,c
  4087  00118E  EFC3  F008         	goto	u2245
  4088  001192  500B               	movf	(??_kpDebounce+1)^0,w,c
  4089  001194  1237               	iorwf	kpDebounce@newRead^0,f,c
  4090  001196  500C               	movf	(??_kpDebounce+2)^0,w,c
  4091  001198  1238               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4092  00119A                     l2483:
  4093                           
  4094                           ;keypad.c: 42:     }
  4095  00119A  4A0D               	infsnz	kpDebounce@i^0,f,c
  4096  00119C  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  4097  00119E  EF60  F008         	goto	l2471
  4098  0011A2                     l2487:
  4099                           
  4100                           ;keypad.c: 43:     if (oldRead == newRead) {
  4101  0011A2  5037               	movf	kpDebounce@newRead^0,w,c
  4102  0011A4  1835               	xorwf	kpDebounce@oldRead^0,w,c
  4103  0011A6  E107               	bnz	u2251
  4104  0011A8  5038               	movf	(kpDebounce@newRead+1)^0,w,c
  4105  0011AA  1836               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4106  0011AC  A4D8               	btfss	status,2,c
  4107  0011AE  EFDB  F008         	goto	u2251
  4108  0011B2  EFDD  F008         	goto	u2250
  4109  0011B6                     u2251:
  4110  0011B6  EFE0  F008         	goto	l2491
  4111  0011BA                     u2250:
  4112  0011BA                     
  4113                           ;keypad.c: 44:         tempo--;
  4114  0011BA  0647               	decf	kpDebounce@tempo^0,f,c
  4115                           
  4116                           ;keypad.c: 45:     } else {
  4117  0011BC  EFE6  F008         	goto	l280
  4118  0011C0                     l2491:
  4119                           
  4120                           ;keypad.c: 46:         tempo = 1;
  4121  0011C0  0E01               	movlw	1
  4122  0011C2  6E47               	movwf	kpDebounce@tempo^0,c
  4123  0011C4                     
  4124                           ;keypad.c: 47:         oldRead = newRead;
  4125  0011C4  C037  F035         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4126  0011C8  C038  F036         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4127  0011CC                     l280:
  4128                           
  4129                           ;keypad.c: 49:     if (tempo == 0) {
  4130  0011CC  5047               	movf	kpDebounce@tempo^0,w,c
  4131  0011CE  A4D8               	btfss	status,2,c
  4132  0011D0  EFEC  F008         	goto	u2261
  4133  0011D4  EFEE  F008         	goto	u2260
  4134  0011D8                     u2261:
  4135  0011D8  EFF2  F008         	goto	l282
  4136  0011DC                     u2260:
  4137  0011DC                     
  4138                           ;keypad.c: 50:         keys = oldRead;
  4139  0011DC  C035  F039         	movff	kpDebounce@oldRead,_keys
  4140  0011E0  C036  F03A         	movff	kpDebounce@oldRead+1,_keys+1
  4141  0011E4                     l282:
  4142  0011E4  0012               	return		;funcret
  4143  0011E6                     __end_of_kpDebounce:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _digitalRead *****************
  4147 ;; Defined at:
  4148 ;;		line 39 in file "io.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  pin             2    0[COMRAM] int 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2    0[COMRAM] int 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4162 ;;      Params:         2       0       0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0
  4164 ;;      Temps:          3       0       0       0       0       0       0
  4165 ;;      Totals:         5       0       0       0       0       0       0
  4166 ;;Total ram usage:        5 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_kpDebounce
  4172 ;;		_read_SCL
  4173 ;;		_read_SDA
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text33
  4178  000F46                     __ptext33:
  4179                           	callstack 0
  4180  000F46                     _digitalRead:
  4181                           	callstack 28
  4182  000F46                     
  4183                           ;io.c: 40:     if(pin <8){
  4184  000F46  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4185  000F48  EFB1  F007         	goto	u1760
  4186  000F4C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4187  000F4E  E107               	bnz	u1761
  4188  000F50  0E08               	movlw	8
  4189  000F52  5C01               	subwf	digitalRead@pin^0,w,c
  4190  000F54  B0D8               	btfsc	status,0,c
  4191  000F56  EFAF  F007         	goto	u1761
  4192  000F5A  EFB1  F007         	goto	u1760
  4193  000F5E                     u1761:
  4194  000F5E  EFC5  F007         	goto	l2155
  4195  000F62                     u1760:
  4196  000F62                     
  4197                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4198  000F62  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4199  000F66  0E01               	movlw	1
  4200  000F68  6E04               	movwf	(??_digitalRead+1)^0,c
  4201  000F6A  2A03               	incf	??_digitalRead^0,f,c
  4202  000F6C  EFBA  F007         	goto	u1774
  4203  000F70                     u1775:
  4204  000F70  90D8               	bcf	status,0,c
  4205  000F72  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4206  000F74                     u1774:
  4207  000F74  2E03               	decfsz	??_digitalRead^0,f,c
  4208  000F76  EFB8  F007         	goto	u1775
  4209  000F7A  5004               	movf	(??_digitalRead+1)^0,w,c
  4210  000F7C  1480               	andwf	128,w,c	;volatile
  4211  000F7E  6E05               	movwf	(??_digitalRead+2)^0,c
  4212  000F80  5005               	movf	(??_digitalRead+2)^0,w,c
  4213  000F82  6E01               	movwf	?_digitalRead^0,c
  4214  000F84  6A02               	clrf	(?_digitalRead+1)^0,c
  4215  000F86  EF57  F008         	goto	l213
  4216  000F8A                     l2155:
  4217  000F8A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4218  000F8C  EFD3  F007         	goto	u1780
  4219  000F90  5002               	movf	(digitalRead@pin+1)^0,w,c
  4220  000F92  E107               	bnz	u1781
  4221  000F94  0E10               	movlw	16
  4222  000F96  5C01               	subwf	digitalRead@pin^0,w,c
  4223  000F98  B0D8               	btfsc	status,0,c
  4224  000F9A  EFD1  F007         	goto	u1781
  4225  000F9E  EFD3  F007         	goto	u1780
  4226  000FA2                     u1781:
  4227  000FA2  EFE9  F007         	goto	l2163
  4228  000FA6                     u1780:
  4229  000FA6                     
  4230                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4231  000FA6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4232  000FAA  0EF8               	movlw	-8
  4233  000FAC  2603               	addwf	??_digitalRead^0,f,c
  4234  000FAE  0E01               	movlw	1
  4235  000FB0  6E04               	movwf	(??_digitalRead+1)^0,c
  4236  000FB2  2A03               	incf	??_digitalRead^0,f,c
  4237  000FB4  EFDE  F007         	goto	u1794
  4238  000FB8                     u1795:
  4239  000FB8  90D8               	bcf	status,0,c
  4240  000FBA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4241  000FBC                     u1794:
  4242  000FBC  2E03               	decfsz	??_digitalRead^0,f,c
  4243  000FBE  EFDC  F007         	goto	u1795
  4244  000FC2  5004               	movf	(??_digitalRead+1)^0,w,c
  4245  000FC4  1481               	andwf	129,w,c	;volatile
  4246  000FC6  6E05               	movwf	(??_digitalRead+2)^0,c
  4247  000FC8  5005               	movf	(??_digitalRead+2)^0,w,c
  4248  000FCA  6E01               	movwf	?_digitalRead^0,c
  4249  000FCC  6A02               	clrf	(?_digitalRead+1)^0,c
  4250  000FCE  EF57  F008         	goto	l213
  4251  000FD2                     l2163:
  4252  000FD2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4253  000FD4  EFF7  F007         	goto	u1800
  4254  000FD8  5002               	movf	(digitalRead@pin+1)^0,w,c
  4255  000FDA  E107               	bnz	u1801
  4256  000FDC  0E18               	movlw	24
  4257  000FDE  5C01               	subwf	digitalRead@pin^0,w,c
  4258  000FE0  B0D8               	btfsc	status,0,c
  4259  000FE2  EFF5  F007         	goto	u1801
  4260  000FE6  EFF7  F007         	goto	u1800
  4261  000FEA                     u1801:
  4262  000FEA  EF0D  F008         	goto	l2171
  4263  000FEE                     u1800:
  4264  000FEE                     
  4265                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4266  000FEE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4267  000FF2  0EF0               	movlw	-16
  4268  000FF4  2603               	addwf	??_digitalRead^0,f,c
  4269  000FF6  0E01               	movlw	1
  4270  000FF8  6E04               	movwf	(??_digitalRead+1)^0,c
  4271  000FFA  2A03               	incf	??_digitalRead^0,f,c
  4272  000FFC  EF02  F008         	goto	u1814
  4273  001000                     u1815:
  4274  001000  90D8               	bcf	status,0,c
  4275  001002  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4276  001004                     u1814:
  4277  001004  2E03               	decfsz	??_digitalRead^0,f,c
  4278  001006  EF00  F008         	goto	u1815
  4279  00100A  5004               	movf	(??_digitalRead+1)^0,w,c
  4280  00100C  1482               	andwf	130,w,c	;volatile
  4281  00100E  6E05               	movwf	(??_digitalRead+2)^0,c
  4282  001010  5005               	movf	(??_digitalRead+2)^0,w,c
  4283  001012  6E01               	movwf	?_digitalRead^0,c
  4284  001014  6A02               	clrf	(?_digitalRead+1)^0,c
  4285  001016  EF57  F008         	goto	l213
  4286  00101A                     l2171:
  4287  00101A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4288  00101C  EF1B  F008         	goto	u1820
  4289  001020  5002               	movf	(digitalRead@pin+1)^0,w,c
  4290  001022  E107               	bnz	u1821
  4291  001024  0E20               	movlw	32
  4292  001026  5C01               	subwf	digitalRead@pin^0,w,c
  4293  001028  B0D8               	btfsc	status,0,c
  4294  00102A  EF19  F008         	goto	u1821
  4295  00102E  EF1B  F008         	goto	u1820
  4296  001032                     u1821:
  4297  001032  EF31  F008         	goto	l2179
  4298  001036                     u1820:
  4299  001036                     
  4300                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4301  001036  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4302  00103A  0EE8               	movlw	-24
  4303  00103C  2603               	addwf	??_digitalRead^0,f,c
  4304  00103E  0E01               	movlw	1
  4305  001040  6E04               	movwf	(??_digitalRead+1)^0,c
  4306  001042  2A03               	incf	??_digitalRead^0,f,c
  4307  001044  EF26  F008         	goto	u1834
  4308  001048                     u1835:
  4309  001048  90D8               	bcf	status,0,c
  4310  00104A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4311  00104C                     u1834:
  4312  00104C  2E03               	decfsz	??_digitalRead^0,f,c
  4313  00104E  EF24  F008         	goto	u1835
  4314  001052  5004               	movf	(??_digitalRead+1)^0,w,c
  4315  001054  1483               	andwf	131,w,c	;volatile
  4316  001056  6E05               	movwf	(??_digitalRead+2)^0,c
  4317  001058  5005               	movf	(??_digitalRead+2)^0,w,c
  4318  00105A  6E01               	movwf	?_digitalRead^0,c
  4319  00105C  6A02               	clrf	(?_digitalRead+1)^0,c
  4320  00105E  EF57  F008         	goto	l213
  4321  001062                     l2179:
  4322  001062  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4323  001064  EF3F  F008         	goto	u1840
  4324  001068  5002               	movf	(digitalRead@pin+1)^0,w,c
  4325  00106A  E107               	bnz	u1841
  4326  00106C  0E28               	movlw	40
  4327  00106E  5C01               	subwf	digitalRead@pin^0,w,c
  4328  001070  B0D8               	btfsc	status,0,c
  4329  001072  EF3D  F008         	goto	u1841
  4330  001076  EF3F  F008         	goto	u1840
  4331  00107A                     u1841:
  4332  00107A  EF55  F008         	goto	l218
  4333  00107E                     u1840:
  4334  00107E                     
  4335                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4336  00107E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4337  001082  0EE0               	movlw	-32
  4338  001084  2603               	addwf	??_digitalRead^0,f,c
  4339  001086  0E01               	movlw	1
  4340  001088  6E04               	movwf	(??_digitalRead+1)^0,c
  4341  00108A  2A03               	incf	??_digitalRead^0,f,c
  4342  00108C  EF4A  F008         	goto	u1854
  4343  001090                     u1855:
  4344  001090  90D8               	bcf	status,0,c
  4345  001092  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4346  001094                     u1854:
  4347  001094  2E03               	decfsz	??_digitalRead^0,f,c
  4348  001096  EF48  F008         	goto	u1855
  4349  00109A  5004               	movf	(??_digitalRead+1)^0,w,c
  4350  00109C  1484               	andwf	132,w,c	;volatile
  4351  00109E  6E05               	movwf	(??_digitalRead+2)^0,c
  4352  0010A0  5005               	movf	(??_digitalRead+2)^0,w,c
  4353  0010A2  6E01               	movwf	?_digitalRead^0,c
  4354  0010A4  6A02               	clrf	(?_digitalRead+1)^0,c
  4355  0010A6  EF57  F008         	goto	l213
  4356  0010AA                     l218:
  4357  0010AA                     
  4358                           ;io.c: 51:     return -1;
  4359  0010AA  6801               	setf	?_digitalRead^0,c
  4360  0010AC  6802               	setf	(?_digitalRead+1)^0,c
  4361  0010AE                     l213:
  4362  0010AE  0012               	return		;funcret
  4363  0010B0                     __end_of_digitalRead:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _atualizaSSD *****************
  4367 ;; Defined at:
  4368 ;;		line 99 in file "main.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4382 ;;      Params:         0       0       0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0
  4385 ;;      Totals:         0       0       0       0       0       0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 1
  4389 ;; This function calls:
  4390 ;;		___awdiv
  4391 ;;		___awmod
  4392 ;;		_ssdDigit
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text34
  4399  001714                     __ptext34:
  4400                           	callstack 0
  4401  001714                     _atualizaSSD:
  4402                           	callstack 29
  4403  001714                     
  4404                           ;main.c: 100:     ssdDigit(((minutos / 10) % 10), 0);
  4405  001714  0E00               	movlw	0
  4406  001716  6E2E               	movwf	ssdDigit@pos^0,c
  4407  001718  0E00               	movlw	0
  4408  00171A  6E19               	movwf	(___awdiv@divisor+1)^0,c
  4409  00171C  0E0A               	movlw	10
  4410  00171E  6E18               	movwf	___awdiv@divisor^0,c
  4411  001720  C03D  F016         	movff	_minutos,___awdiv@dividend
  4412  001724  C03E  F017         	movff	_minutos+1,___awdiv@dividend+1
  4413  001728  EC76  F00A         	call	___awdiv	;wreg free
  4414  00172C  C016  F028         	movff	?___awdiv,___awmod@dividend
  4415  001730  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  4416  001734  0E00               	movlw	0
  4417  001736  6E2B               	movwf	(___awmod@divisor+1)^0,c
  4418  001738  0E0A               	movlw	10
  4419  00173A  6E2A               	movwf	___awmod@divisor^0,c
  4420  00173C  EC32  F00B         	call	___awmod	;wreg free
  4421  001740  5028               	movf	?___awmod^0,w,c
  4422  001742  EC17  F00D         	call	_ssdDigit
  4423                           
  4424                           ;main.c: 101:     ssdDigit(((minutos / 1) % 10), 1);
  4425  001746  0E01               	movlw	1
  4426  001748  6E2E               	movwf	ssdDigit@pos^0,c
  4427  00174A  C03D  F028         	movff	_minutos,___awmod@dividend
  4428  00174E  C03E  F029         	movff	_minutos+1,___awmod@dividend+1
  4429  001752  0E00               	movlw	0
  4430  001754  6E2B               	movwf	(___awmod@divisor+1)^0,c
  4431  001756  0E0A               	movlw	10
  4432  001758  6E2A               	movwf	___awmod@divisor^0,c
  4433  00175A  EC32  F00B         	call	___awmod	;wreg free
  4434  00175E  5028               	movf	?___awmod^0,w,c
  4435  001760  EC17  F00D         	call	_ssdDigit
  4436                           
  4437                           ;main.c: 102:     ssdDigit(((segundos / 10) % 10), 2);
  4438  001764  0E02               	movlw	2
  4439  001766  6E2E               	movwf	ssdDigit@pos^0,c
  4440  001768  0E00               	movlw	0
  4441  00176A  6E19               	movwf	(___awdiv@divisor+1)^0,c
  4442  00176C  0E0A               	movlw	10
  4443  00176E  6E18               	movwf	___awdiv@divisor^0,c
  4444  001770  C03B  F016         	movff	_segundos,___awdiv@dividend
  4445  001774  C03C  F017         	movff	_segundos+1,___awdiv@dividend+1
  4446  001778  EC76  F00A         	call	___awdiv	;wreg free
  4447  00177C  C016  F028         	movff	?___awdiv,___awmod@dividend
  4448  001780  C017  F029         	movff	?___awdiv+1,___awmod@dividend+1
  4449  001784  0E00               	movlw	0
  4450  001786  6E2B               	movwf	(___awmod@divisor+1)^0,c
  4451  001788  0E0A               	movlw	10
  4452  00178A  6E2A               	movwf	___awmod@divisor^0,c
  4453  00178C  EC32  F00B         	call	___awmod	;wreg free
  4454  001790  5028               	movf	?___awmod^0,w,c
  4455  001792  EC17  F00D         	call	_ssdDigit
  4456                           
  4457                           ;main.c: 103:     ssdDigit(((segundos / 1) % 10), 3);
  4458  001796  0E03               	movlw	3
  4459  001798  6E2E               	movwf	ssdDigit@pos^0,c
  4460  00179A  C03B  F028         	movff	_segundos,___awmod@dividend
  4461  00179E  C03C  F029         	movff	_segundos+1,___awmod@dividend+1
  4462  0017A2  0E00               	movlw	0
  4463  0017A4  6E2B               	movwf	(___awmod@divisor+1)^0,c
  4464  0017A6  0E0A               	movlw	10
  4465  0017A8  6E2A               	movwf	___awmod@divisor^0,c
  4466  0017AA  EC32  F00B         	call	___awmod	;wreg free
  4467  0017AE  5028               	movf	?___awmod^0,w,c
  4468  0017B0  EC17  F00D         	call	_ssdDigit
  4469  0017B4  0012               	return		;funcret
  4470  0017B6                     __end_of_atualizaSSD:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _ssdDigit *****************
  4474 ;; Defined at:
  4475 ;;		line 34 in file "ssd.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  val             1    wreg     unsigned char 
  4478 ;;  pos             1   45[COMRAM] unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  val             1   46[COMRAM] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4490 ;;      Params:         1       0       0       0       0       0       0
  4491 ;;      Locals:         1       0       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0
  4493 ;;      Totals:         2       0       0       0       0       0       0
  4494 ;;Total ram usage:        2 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_atualizaSSD
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text35
  4504  001A2E                     __ptext35:
  4505                           	callstack 0
  4506  001A2E                     _ssdDigit:
  4507                           	callstack 29
  4508                           
  4509                           ;incstack = 0
  4510                           ;ssdDigit@val stored from wreg
  4511  001A2E  6E2F               	movwf	ssdDigit@val^0,c
  4512  001A30                     
  4513                           ;ssd.c: 35:     if (pos == 0) {
  4514  001A30  502E               	movf	ssdDigit@pos^0,w,c
  4515  001A32  A4D8               	btfss	status,2,c
  4516  001A34  EF1E  F00D         	goto	u2271
  4517  001A38  EF20  F00D         	goto	u2270
  4518  001A3C                     u2271:
  4519  001A3C  EF22  F00D         	goto	l2503
  4520  001A40                     u2270:
  4521  001A40                     
  4522                           ;ssd.c: 36:         v0 = val;
  4523  001A40  C02F  F045         	movff	ssdDigit@val,_v0
  4524  001A44                     l2503:
  4525                           
  4526                           ;ssd.c: 38:     if (pos == 1) {
  4527  001A44  042E               	decf	ssdDigit@pos^0,w,c
  4528  001A46  A4D8               	btfss	status,2,c
  4529  001A48  EF28  F00D         	goto	u2281
  4530  001A4C  EF2A  F00D         	goto	u2280
  4531  001A50                     u2281:
  4532  001A50  EF2C  F00D         	goto	l2507
  4533  001A54                     u2280:
  4534  001A54                     
  4535                           ;ssd.c: 39:         v1 = val;
  4536  001A54  C02F  F044         	movff	ssdDigit@val,_v1
  4537  001A58                     l2507:
  4538                           
  4539                           ;ssd.c: 41:     if (pos == 2) {
  4540  001A58  0E02               	movlw	2
  4541  001A5A  182E               	xorwf	ssdDigit@pos^0,w,c
  4542  001A5C  A4D8               	btfss	status,2,c
  4543  001A5E  EF33  F00D         	goto	u2291
  4544  001A62  EF35  F00D         	goto	u2290
  4545  001A66                     u2291:
  4546  001A66  EF37  F00D         	goto	l2511
  4547  001A6A                     u2290:
  4548  001A6A                     
  4549                           ;ssd.c: 42:         v2 = val;
  4550  001A6A  C02F  F043         	movff	ssdDigit@val,_v2
  4551  001A6E                     l2511:
  4552                           
  4553                           ;ssd.c: 44:     if (pos == 3) {
  4554  001A6E  0E03               	movlw	3
  4555  001A70  182E               	xorwf	ssdDigit@pos^0,w,c
  4556  001A72  A4D8               	btfss	status,2,c
  4557  001A74  EF3E  F00D         	goto	u2301
  4558  001A78  EF40  F00D         	goto	u2300
  4559  001A7C                     u2301:
  4560  001A7C  EF42  F00D         	goto	l415
  4561  001A80                     u2300:
  4562  001A80                     
  4563                           ;ssd.c: 45:         v3 = val;
  4564  001A80  C02F  F042         	movff	ssdDigit@val,_v3
  4565  001A84                     l415:
  4566  001A84  0012               	return		;funcret
  4567  001A86                     __end_of_ssdDigit:
  4568                           	callstack 0
  4569                           
  4570 ;; *************** function ___awmod *****************
  4571 ;; Defined at:
  4572 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  dividend        2   39[COMRAM] int 
  4575 ;;  divisor         2   41[COMRAM] int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  sign            1   44[COMRAM] unsigned char 
  4578 ;;  counter         1   43[COMRAM] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  2   39[COMRAM] int 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4588 ;;      Params:         4       0       0       0       0       0       0
  4589 ;;      Locals:         2       0       0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0
  4591 ;;      Totals:         6       0       0       0       0       0       0
  4592 ;;Total ram usage:        6 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_inicio
  4598 ;;		_atualizaSSD
  4599 ;;		_dec2bcd
  4600 ;;		_lcdNumber
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text36
  4605  001664                     __ptext36:
  4606                           	callstack 0
  4607  001664                     ___awmod:
  4608                           	callstack 29
  4609  001664  0E00               	movlw	0
  4610  001666  6E2D               	movwf	___awmod@sign^0,c
  4611  001668  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  4612  00166A  EF3B  F00B         	goto	u2310
  4613  00166E  EF39  F00B         	goto	u2311
  4614  001672                     u2311:
  4615  001672  EF41  F00B         	goto	l2529
  4616  001676                     u2310:
  4617  001676  6C28               	negf	___awmod@dividend^0,c
  4618  001678  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4619  00167A  B0D8               	btfsc	status,0,c
  4620  00167C  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4621  00167E  0E01               	movlw	1
  4622  001680  6E2D               	movwf	___awmod@sign^0,c
  4623  001682                     l2529:
  4624  001682  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  4625  001684  EF48  F00B         	goto	u2320
  4626  001688  EF46  F00B         	goto	u2321
  4627  00168C                     u2321:
  4628  00168C  EF4C  F00B         	goto	l2533
  4629  001690                     u2320:
  4630  001690  6C2A               	negf	___awmod@divisor^0,c
  4631  001692  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  4632  001694  B0D8               	btfsc	status,0,c
  4633  001696  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  4634  001698                     l2533:
  4635  001698  502A               	movf	___awmod@divisor^0,w,c
  4636  00169A  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  4637  00169C  B4D8               	btfsc	status,2,c
  4638  00169E  EF53  F00B         	goto	u2331
  4639  0016A2  EF55  F00B         	goto	u2330
  4640  0016A6                     u2331:
  4641  0016A6  EF79  F00B         	goto	l2549
  4642  0016AA                     u2330:
  4643  0016AA  0E01               	movlw	1
  4644  0016AC  6E2C               	movwf	___awmod@counter^0,c
  4645  0016AE  EF5D  F00B         	goto	l2539
  4646  0016B2                     l2537:
  4647  0016B2  90D8               	bcf	status,0,c
  4648  0016B4  362A               	rlcf	___awmod@divisor^0,f,c
  4649  0016B6  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  4650  0016B8  2A2C               	incf	___awmod@counter^0,f,c
  4651  0016BA                     l2539:
  4652  0016BA  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  4653  0016BC  EF62  F00B         	goto	u2341
  4654  0016C0  EF64  F00B         	goto	u2340
  4655  0016C4                     u2341:
  4656  0016C4  EF59  F00B         	goto	l2537
  4657  0016C8                     u2340:
  4658  0016C8                     l2541:
  4659  0016C8  502A               	movf	___awmod@divisor^0,w,c
  4660  0016CA  5C28               	subwf	___awmod@dividend^0,w,c
  4661  0016CC  502B               	movf	(___awmod@divisor+1)^0,w,c
  4662  0016CE  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  4663  0016D0  A0D8               	btfss	status,0,c
  4664  0016D2  EF6D  F00B         	goto	u2351
  4665  0016D6  EF6F  F00B         	goto	u2350
  4666  0016DA                     u2351:
  4667  0016DA  EF73  F00B         	goto	l2545
  4668  0016DE                     u2350:
  4669  0016DE  502A               	movf	___awmod@divisor^0,w,c
  4670  0016E0  5E28               	subwf	___awmod@dividend^0,f,c
  4671  0016E2  502B               	movf	(___awmod@divisor+1)^0,w,c
  4672  0016E4  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  4673  0016E6                     l2545:
  4674  0016E6  90D8               	bcf	status,0,c
  4675  0016E8  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  4676  0016EA  322A               	rrcf	___awmod@divisor^0,f,c
  4677  0016EC  2E2C               	decfsz	___awmod@counter^0,f,c
  4678  0016EE  EF64  F00B         	goto	l2541
  4679  0016F2                     l2549:
  4680  0016F2  502D               	movf	___awmod@sign^0,w,c
  4681  0016F4  B4D8               	btfsc	status,2,c
  4682  0016F6  EF7F  F00B         	goto	u2361
  4683  0016FA  EF81  F00B         	goto	u2360
  4684  0016FE                     u2361:
  4685  0016FE  EF85  F00B         	goto	l2553
  4686  001702                     u2360:
  4687  001702  6C28               	negf	___awmod@dividend^0,c
  4688  001704  1E29               	comf	(___awmod@dividend+1)^0,f,c
  4689  001706  B0D8               	btfsc	status,0,c
  4690  001708  2A29               	incf	(___awmod@dividend+1)^0,f,c
  4691  00170A                     l2553:
  4692  00170A  C028  F028         	movff	___awmod@dividend,?___awmod
  4693  00170E  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  4694  001712  0012               	return		;funcret
  4695  001714                     __end_of___awmod:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function ___awdiv *****************
  4699 ;; Defined at:
  4700 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  dividend        2   21[COMRAM] int 
  4703 ;;  divisor         2   23[COMRAM] int 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  quotient        2   27[COMRAM] int 
  4706 ;;  sign            1   26[COMRAM] unsigned char 
  4707 ;;  counter         1   25[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2   21[COMRAM] int 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4717 ;;      Params:         4       0       0       0       0       0       0
  4718 ;;      Locals:         4       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0
  4720 ;;      Totals:         8       0       0       0       0       0       0
  4721 ;;Total ram usage:        8 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_inicio
  4727 ;;		_atualizaSSD
  4728 ;;		_bcd2dec
  4729 ;;		_dec2bcd
  4730 ;;		_lcdNumber
  4731 ;;		_pwmSet
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text37
  4736  0014EC                     __ptext37:
  4737                           	callstack 0
  4738  0014EC                     ___awdiv:
  4739                           	callstack 28
  4740  0014EC  0E00               	movlw	0
  4741  0014EE  6E1B               	movwf	___awdiv@sign^0,c
  4742  0014F0  BE19               	btfsc	(___awdiv@divisor+1)^0,7,c
  4743  0014F2  EF7F  F00A         	goto	u2120
  4744  0014F6  EF7D  F00A         	goto	u2121
  4745  0014FA                     u2121:
  4746  0014FA  EF85  F00A         	goto	l2413
  4747  0014FE                     u2120:
  4748  0014FE  6C18               	negf	___awdiv@divisor^0,c
  4749  001500  1E19               	comf	(___awdiv@divisor+1)^0,f,c
  4750  001502  B0D8               	btfsc	status,0,c
  4751  001504  2A19               	incf	(___awdiv@divisor+1)^0,f,c
  4752  001506  0E01               	movlw	1
  4753  001508  6E1B               	movwf	___awdiv@sign^0,c
  4754  00150A                     l2413:
  4755  00150A  BE17               	btfsc	(___awdiv@dividend+1)^0,7,c
  4756  00150C  EF8C  F00A         	goto	u2130
  4757  001510  EF8A  F00A         	goto	u2131
  4758  001514                     u2131:
  4759  001514  EF92  F00A         	goto	l2419
  4760  001518                     u2130:
  4761  001518  6C16               	negf	___awdiv@dividend^0,c
  4762  00151A  1E17               	comf	(___awdiv@dividend+1)^0,f,c
  4763  00151C  B0D8               	btfsc	status,0,c
  4764  00151E  2A17               	incf	(___awdiv@dividend+1)^0,f,c
  4765  001520  0E01               	movlw	1
  4766  001522  1A1B               	xorwf	___awdiv@sign^0,f,c
  4767  001524                     l2419:
  4768  001524  0E00               	movlw	0
  4769  001526  6E1D               	movwf	(___awdiv@quotient+1)^0,c
  4770  001528  0E00               	movlw	0
  4771  00152A  6E1C               	movwf	___awdiv@quotient^0,c
  4772  00152C  5018               	movf	___awdiv@divisor^0,w,c
  4773  00152E  1019               	iorwf	(___awdiv@divisor+1)^0,w,c
  4774  001530  B4D8               	btfsc	status,2,c
  4775  001532  EF9D  F00A         	goto	u2141
  4776  001536  EF9F  F00A         	goto	u2140
  4777  00153A                     u2141:
  4778  00153A  EFC7  F00A         	goto	l2441
  4779  00153E                     u2140:
  4780  00153E  0E01               	movlw	1
  4781  001540  6E1A               	movwf	___awdiv@counter^0,c
  4782  001542  EFA7  F00A         	goto	l2427
  4783  001546                     l2425:
  4784  001546  90D8               	bcf	status,0,c
  4785  001548  3618               	rlcf	___awdiv@divisor^0,f,c
  4786  00154A  3619               	rlcf	(___awdiv@divisor+1)^0,f,c
  4787  00154C  2A1A               	incf	___awdiv@counter^0,f,c
  4788  00154E                     l2427:
  4789  00154E  AE19               	btfss	(___awdiv@divisor+1)^0,7,c
  4790  001550  EFAC  F00A         	goto	u2151
  4791  001554  EFAE  F00A         	goto	u2150
  4792  001558                     u2151:
  4793  001558  EFA3  F00A         	goto	l2425
  4794  00155C                     u2150:
  4795  00155C                     l2429:
  4796  00155C  90D8               	bcf	status,0,c
  4797  00155E  361C               	rlcf	___awdiv@quotient^0,f,c
  4798  001560  361D               	rlcf	(___awdiv@quotient+1)^0,f,c
  4799  001562  5018               	movf	___awdiv@divisor^0,w,c
  4800  001564  5C16               	subwf	___awdiv@dividend^0,w,c
  4801  001566  5019               	movf	(___awdiv@divisor+1)^0,w,c
  4802  001568  5817               	subwfb	(___awdiv@dividend+1)^0,w,c
  4803  00156A  A0D8               	btfss	status,0,c
  4804  00156C  EFBA  F00A         	goto	u2161
  4805  001570  EFBC  F00A         	goto	u2160
  4806  001574                     u2161:
  4807  001574  EFC1  F00A         	goto	l2437
  4808  001578                     u2160:
  4809  001578  5018               	movf	___awdiv@divisor^0,w,c
  4810  00157A  5E16               	subwf	___awdiv@dividend^0,f,c
  4811  00157C  5019               	movf	(___awdiv@divisor+1)^0,w,c
  4812  00157E  5A17               	subwfb	(___awdiv@dividend+1)^0,f,c
  4813  001580  801C               	bsf	___awdiv@quotient^0,0,c
  4814  001582                     l2437:
  4815  001582  90D8               	bcf	status,0,c
  4816  001584  3219               	rrcf	(___awdiv@divisor+1)^0,f,c
  4817  001586  3218               	rrcf	___awdiv@divisor^0,f,c
  4818  001588  2E1A               	decfsz	___awdiv@counter^0,f,c
  4819  00158A  EFAE  F00A         	goto	l2429
  4820  00158E                     l2441:
  4821  00158E  501B               	movf	___awdiv@sign^0,w,c
  4822  001590  B4D8               	btfsc	status,2,c
  4823  001592  EFCD  F00A         	goto	u2171
  4824  001596  EFCF  F00A         	goto	u2170
  4825  00159A                     u2171:
  4826  00159A  EFD3  F00A         	goto	l2445
  4827  00159E                     u2170:
  4828  00159E  6C1C               	negf	___awdiv@quotient^0,c
  4829  0015A0  1E1D               	comf	(___awdiv@quotient+1)^0,f,c
  4830  0015A2  B0D8               	btfsc	status,0,c
  4831  0015A4  2A1D               	incf	(___awdiv@quotient+1)^0,f,c
  4832  0015A6                     l2445:
  4833  0015A6  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  4834  0015AA  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  4835  0015AE  0012               	return		;funcret
  4836  0015B0                     __end_of___awdiv:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _atualizaLCD *****************
  4840 ;; Defined at:
  4841 ;;		line 49 in file "main.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         0       0       0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 6
  4862 ;; This function calls:
  4863 ;;		_lcdCommand
  4864 ;;		_lcdString
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text38
  4871  001D86                     __ptext38:
  4872                           	callstack 0
  4873  001D86                     _atualizaLCD:
  4874                           	callstack 24
  4875  001D86                     
  4876                           ;main.c: 50:     lcdCommand(0x80);
  4877  001D86  0E80               	movlw	128
  4878  001D88  EC08  F010         	call	_lcdCommand
  4879  001D8C                     
  4880                           ;main.c: 51:     lcdString("Modo escolhido: ");
  4881  001D8C  0E1B               	movlw	low STR_7
  4882  001D8E  6E0F               	movwf	lcdString@msg^0,c
  4883  001D90  0E06               	movlw	high STR_7
  4884  001D92  6E10               	movwf	(lcdString@msg+1)^0,c
  4885  001D94  EC6E  F00D         	call	_lcdString	;wreg free
  4886  001D98                     
  4887                           ;main.c: 52:     lcdCommand(0xC0);
  4888  001D98  0EC0               	movlw	192
  4889  001D9A  EC08  F010         	call	_lcdCommand
  4890  001D9E                     
  4891                           ;main.c: 53:     lcdString(processo[i]);
  4892  001D9E  90D8               	bcf	status,0,c
  4893  001DA0  343F               	rlcf	_i^0,w,c
  4894  001DA2  6ED9               	movwf	fsr2l,c
  4895  001DA4  3440               	rlcf	(_i+1)^0,w,c
  4896  001DA6  6EDA               	movwf	fsr2h,c
  4897  001DA8  0E53               	movlw	low _processo
  4898  001DAA  26D9               	addwf	fsr2l,f,c
  4899  001DAC  0E00               	movlw	high _processo
  4900  001DAE  22DA               	addwfc	fsr2h,f,c
  4901  001DB0  CFDE F00F          	movff	postinc2,lcdString@msg
  4902  001DB4  CFDD F010          	movff	postdec2,lcdString@msg+1
  4903  001DB8  EC6E  F00D         	call	_lcdString	;wreg free
  4904  001DBC  0012               	return		;funcret
  4905  001DBE                     __end_of_atualizaLCD:
  4906                           	callstack 0
  4907                           
  4908 ;; *************** function _lcdString *****************
  4909 ;; Defined at:
  4910 ;;		line 57 in file "lcd.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4913 ;;		 -> STR_8(17), STR_7(17), STR_6(6), STR_5(5), 
  4914 ;;		 -> STR_4(8), STR_3(11), STR_2(14), STR_1(17), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  i               2   18[COMRAM] int 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4926 ;;      Params:         2       0       0       0       0       0       0
  4927 ;;      Locals:         2       0       0       0       0       0       0
  4928 ;;      Temps:          2       0       0       0       0       0       0
  4929 ;;      Totals:         6       0       0       0       0       0       0
  4930 ;;Total ram usage:        6 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 5
  4933 ;; This function calls:
  4934 ;;		_lcdChar
  4935 ;; This function is called by:
  4936 ;;		_inicio
  4937 ;;		_atualizaLCD
  4938 ;;		_escolherProcesso
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text39
  4943  001ADC                     __ptext39:
  4944                           	callstack 0
  4945  001ADC                     _lcdString:
  4946                           	callstack 24
  4947  001ADC                     
  4948                           ;lcd.c: 58:  int i = 0;
  4949  001ADC  0E00               	movlw	0
  4950  001ADE  6E14               	movwf	(lcdString@i+1)^0,c
  4951  001AE0  0E00               	movlw	0
  4952  001AE2  6E13               	movwf	lcdString@i^0,c
  4953                           
  4954                           ;lcd.c: 59:  while (msg[i] != 0) {
  4955  001AE4  EF84  F00D         	goto	l2457
  4956  001AE8                     l2453:
  4957                           
  4958                           ;lcd.c: 60:   lcdChar(msg[i]);
  4959  001AE8  5013               	movf	lcdString@i^0,w,c
  4960  001AEA  240F               	addwf	lcdString@msg^0,w,c
  4961  001AEC  6E11               	movwf	??_lcdString^0,c
  4962  001AEE  5014               	movf	(lcdString@i+1)^0,w,c
  4963  001AF0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4964  001AF2  6E12               	movwf	(??_lcdString+1)^0,c
  4965  001AF4  C011  FFF6         	movff	??_lcdString,tblptrl
  4966  001AF8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4967  001AFC                     	if	0	;tblptru may be non-zero
  4968  001AFC                     	endif
  4969  001AFC                     	if	0	;tblptru may be non-zero
  4970  001AFC                     	endif
  4971  001AFC  0008               	tblrd		*
  4972  001AFE  50F5               	movf	tablat,w,c
  4973  001B00  ECF9  F00F         	call	_lcdChar
  4974  001B04                     
  4975                           ;lcd.c: 61:   i++;
  4976  001B04  4A13               	infsnz	lcdString@i^0,f,c
  4977  001B06  2A14               	incf	(lcdString@i+1)^0,f,c
  4978  001B08                     l2457:
  4979                           
  4980                           ;lcd.c: 59:  while (msg[i] != 0) {
  4981  001B08  5013               	movf	lcdString@i^0,w,c
  4982  001B0A  240F               	addwf	lcdString@msg^0,w,c
  4983  001B0C  6E11               	movwf	??_lcdString^0,c
  4984  001B0E  5014               	movf	(lcdString@i+1)^0,w,c
  4985  001B10  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4986  001B12  6E12               	movwf	(??_lcdString+1)^0,c
  4987  001B14  C011  FFF6         	movff	??_lcdString,tblptrl
  4988  001B18  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4989  001B1C                     	if	0	;tblptru may be non-zero
  4990  001B1C                     	endif
  4991  001B1C                     	if	0	;tblptru may be non-zero
  4992  001B1C                     	endif
  4993  001B1C  0008               	tblrd		*
  4994  001B1E  50F5               	movf	tablat,w,c
  4995  001B20  0900               	iorlw	0
  4996  001B22  A4D8               	btfss	status,2,c
  4997  001B24  EF96  F00D         	goto	u2181
  4998  001B28  EF98  F00D         	goto	u2180
  4999  001B2C                     u2181:
  5000  001B2C  EF74  F00D         	goto	l2453
  5001  001B30                     u2180:
  5002  001B30  0012               	return		;funcret
  5003  001B32                     __end_of_lcdString:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _lcdChar *****************
  5007 ;; Defined at:
  5008 ;;		line 52 in file "lcd.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  value           1    wreg     unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  value           1   13[COMRAM] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5022 ;;      Params:         0       0       0       0       0       0       0
  5023 ;;      Locals:         1       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0
  5025 ;;      Totals:         1       0       0       0       0       0       0
  5026 ;;Total ram usage:        1 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; Hardware stack levels required when called: 4
  5029 ;; This function calls:
  5030 ;;		_delayMicro
  5031 ;;		_pushByte
  5032 ;; This function is called by:
  5033 ;;		_inicio
  5034 ;;		_lcdString
  5035 ;;		_lcdNumber
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text40
  5040  001FF2                     __ptext40:
  5041                           	callstack 0
  5042  001FF2                     _lcdChar:
  5043                           	callstack 24
  5044                           
  5045                           ;incstack = 0
  5046                           ;lcdChar@value stored from wreg
  5047  001FF2  6E0E               	movwf	lcdChar@value^0,c
  5048  001FF4                     
  5049                           ;lcd.c: 53:  pushByte(value, 1);
  5050  001FF4  0E00               	movlw	0
  5051  001FF6  6E0B               	movwf	(pushByte@rs+1)^0,c
  5052  001FF8  0E01               	movlw	1
  5053  001FFA  6E0A               	movwf	pushByte@rs^0,c
  5054  001FFC  500E               	movf	lcdChar@value^0,w,c
  5055  001FFE  ECBE  F00C         	call	_pushByte
  5056  002002                     
  5057                           ;lcd.c: 54:  delayMicro(80);
  5058  002002  0E00               	movlw	0
  5059  002004  6E02               	movwf	(delayMicro@a+1)^0,c
  5060  002006  0E50               	movlw	80
  5061  002008  6E01               	movwf	delayMicro@a^0,c
  5062  00200A  EC40  F010         	call	_delayMicro	;wreg free
  5063  00200E  0012               	return		;funcret
  5064  002010                     __end_of_lcdChar:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _lcdCommand *****************
  5068 ;; Defined at:
  5069 ;;		line 40 in file "lcd.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  value           1    wreg     unsigned char 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  value           1   13[COMRAM] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5083 ;;      Params:         0       0       0       0       0       0       0
  5084 ;;      Locals:         1       0       0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0
  5086 ;;      Totals:         1       0       0       0       0       0       0
  5087 ;;Total ram usage:        1 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; Hardware stack levels required when called: 4
  5090 ;; This function calls:
  5091 ;;		_delayMili
  5092 ;;		_pushByte
  5093 ;; This function is called by:
  5094 ;;		_inicio
  5095 ;;		_atualizaLCD
  5096 ;;		_leTeclado
  5097 ;;		_escolherProcesso
  5098 ;;		_main
  5099 ;;		_lcdInit
  5100 ;;		_lcdPosition
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text41
  5105  002010                     __ptext41:
  5106                           	callstack 0
  5107  002010                     _lcdCommand:
  5108                           	callstack 25
  5109                           
  5110                           ;incstack = 0
  5111                           ;lcdCommand@value stored from wreg
  5112  002010  6E0E               	movwf	lcdCommand@value^0,c
  5113  002012                     
  5114                           ;lcd.c: 41:  pushByte(value, 0);
  5115  002012  0E00               	movlw	0
  5116  002014  6E0B               	movwf	(pushByte@rs+1)^0,c
  5117  002016  0E00               	movlw	0
  5118  002018  6E0A               	movwf	pushByte@rs^0,c
  5119  00201A  500E               	movf	lcdCommand@value^0,w,c
  5120  00201C  ECBE  F00C         	call	_pushByte
  5121                           
  5122                           ;lcd.c: 42:  delayMili(2);
  5123  002020  0E00               	movlw	0
  5124  002022  6E02               	movwf	(delayMili@a+1)^0,c
  5125  002024  0E02               	movlw	2
  5126  002026  6E01               	movwf	delayMili@a^0,c
  5127  002028  EC2C  F00F         	call	_delayMili	;wreg free
  5128  00202C  0012               	return		;funcret
  5129  00202E                     __end_of_lcdCommand:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _pushByte *****************
  5133 ;; Defined at:
  5134 ;;		line 31 in file "lcd.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  value           1    wreg     unsigned char 
  5137 ;;  rs              2    9[COMRAM] int 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  value           1   12[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5149 ;;      Params:         2       0       0       0       0       0       0
  5150 ;;      Locals:         1       0       0       0       0       0       0
  5151 ;;      Temps:          1       0       0       0       0       0       0
  5152 ;;      Totals:         4       0       0       0       0       0       0
  5153 ;;Total ram usage:        4 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 3
  5156 ;; This function calls:
  5157 ;;		_digitalWrite
  5158 ;;		_pulseEnablePin
  5159 ;;		_soWrite
  5160 ;; This function is called by:
  5161 ;;		_lcdCommand
  5162 ;;		_lcdChar
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text42
  5167  00197C                     __ptext42:
  5168                           	callstack 0
  5169  00197C                     _pushByte:
  5170                           	callstack 25
  5171                           
  5172                           ;incstack = 0
  5173                           ;pushByte@value stored from wreg
  5174  00197C  6E0D               	movwf	pushByte@value^0,c
  5175  00197E                     
  5176                           ;lcd.c: 32:  soWrite(value >> 4);
  5177  00197E  C00D  F00C         	movff	pushByte@value,??_pushByte
  5178  001982  3A0C               	swapf	??_pushByte^0,f,c
  5179  001984  0E0F               	movlw	15
  5180  001986  160C               	andwf	??_pushByte^0,f,c
  5181  001988  500C               	movf	??_pushByte^0,w,c
  5182  00198A  6E07               	movwf	soWrite@value^0,c
  5183  00198C  6A08               	clrf	(soWrite@value+1)^0,c
  5184  00198E  EC99  F00D         	call	_soWrite	;wreg free
  5185                           
  5186                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5187  001992  0E00               	movlw	0
  5188  001994  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5189  001996  0E1D               	movlw	29
  5190  001998  6E01               	movwf	digitalWrite@pin^0,c
  5191  00199A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5192  00199E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5193  0019A2  EC9F  F004         	call	_digitalWrite	;wreg free
  5194                           
  5195                           ;lcd.c: 34:  pulseEnablePin();
  5196  0019A6  EC4B  F00E         	call	_pulseEnablePin	;wreg free
  5197                           
  5198                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5199  0019AA  C00D  F00C         	movff	pushByte@value,??_pushByte
  5200  0019AE  0E0F               	movlw	15
  5201  0019B0  160C               	andwf	??_pushByte^0,f,c
  5202  0019B2  500C               	movf	??_pushByte^0,w,c
  5203  0019B4  6E07               	movwf	soWrite@value^0,c
  5204  0019B6  6A08               	clrf	(soWrite@value+1)^0,c
  5205  0019B8  EC99  F00D         	call	_soWrite	;wreg free
  5206                           
  5207                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5208  0019BC  0E00               	movlw	0
  5209  0019BE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5210  0019C0  0E1D               	movlw	29
  5211  0019C2  6E01               	movwf	digitalWrite@pin^0,c
  5212  0019C4  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5213  0019C8  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5214  0019CC  EC9F  F004         	call	_digitalWrite	;wreg free
  5215                           
  5216                           ;lcd.c: 38:  pulseEnablePin();
  5217  0019D0  EC4B  F00E         	call	_pulseEnablePin	;wreg free
  5218  0019D4  0012               	return		;funcret
  5219  0019D6                     __end_of_pushByte:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function _soWrite *****************
  5223 ;; Defined at:
  5224 ;;		line 18 in file "so.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  value           2    6[COMRAM] int 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  i               1    8[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5238 ;;      Params:         2       0       0       0       0       0       0
  5239 ;;      Locals:         1       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0
  5241 ;;      Totals:         3       0       0       0       0       0       0
  5242 ;;Total ram usage:        3 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; Hardware stack levels required when called: 2
  5245 ;; This function calls:
  5246 ;;		_PulseClockData
  5247 ;;		_PulseEnClock
  5248 ;;		_digitalWrite
  5249 ;; This function is called by:
  5250 ;;		_kpDebounce
  5251 ;;		_pushNibble
  5252 ;;		_pushByte
  5253 ;;		_ssdUpdate
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text43
  5258  001B32                     __ptext43:
  5259                           	callstack 0
  5260  001B32                     _soWrite:
  5261                           	callstack 27
  5262  001B32                     
  5263                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5264  001B32  0E00               	movlw	0
  5265  001B34  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5266  001B36  0E08               	movlw	8
  5267  001B38  6E01               	movwf	digitalWrite@pin^0,c
  5268  001B3A  0E00               	movlw	0
  5269  001B3C  6E04               	movwf	(digitalWrite@value+1)^0,c
  5270  001B3E  0E00               	movlw	0
  5271  001B40  6E03               	movwf	digitalWrite@value^0,c
  5272  001B42  EC9F  F004         	call	_digitalWrite	;wreg free
  5273  001B46                     
  5274                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5275  001B46  0E00               	movlw	0
  5276  001B48  6E09               	movwf	soWrite@i^0,c
  5277  001B4A                     l2197:
  5278                           
  5279                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5280  001B4A  0E00               	movlw	0
  5281  001B4C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5282  001B4E  0E1E               	movlw	30
  5283  001B50  6E01               	movwf	digitalWrite@pin^0,c
  5284  001B52  0E80               	movlw	128
  5285  001B54  1407               	andwf	soWrite@value^0,w,c
  5286  001B56  6E03               	movwf	digitalWrite@value^0,c
  5287  001B58  6A04               	clrf	(digitalWrite@value+1)^0,c
  5288  001B5A  EC9F  F004         	call	_digitalWrite	;wreg free
  5289                           
  5290                           ;so.c: 23:   PulseClockData();
  5291  001B5E  EC9A  F00F         	call	_PulseClockData	;wreg free
  5292  001B62                     
  5293                           ;so.c: 24:   value <<= 1;
  5294  001B62  90D8               	bcf	status,0,c
  5295  001B64  3607               	rlcf	soWrite@value^0,f,c
  5296  001B66  3608               	rlcf	(soWrite@value+1)^0,f,c
  5297  001B68                     
  5298                           ;so.c: 25:  }
  5299  001B68  2A09               	incf	soWrite@i^0,f,c
  5300  001B6A  0E07               	movlw	7
  5301  001B6C  6409               	cpfsgt	soWrite@i^0,c
  5302  001B6E  EFBB  F00D         	goto	u1861
  5303  001B72  EFBD  F00D         	goto	u1860
  5304  001B76                     u1861:
  5305  001B76  EFA5  F00D         	goto	l2197
  5306  001B7A                     u1860:
  5307  001B7A                     
  5308                           ;so.c: 26:  PulseEnClock();
  5309  001B7A  EC85  F00F         	call	_PulseEnClock	;wreg free
  5310  001B7E  0012               	return		;funcret
  5311  001B80                     __end_of_soWrite:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _PulseEnClock *****************
  5315 ;; Defined at:
  5316 ;;		line 9 in file "so.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5330 ;;      Params:         0       0       0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0
  5333 ;;      Totals:         0       0       0       0       0       0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 1
  5337 ;; This function calls:
  5338 ;;		_digitalWrite
  5339 ;; This function is called by:
  5340 ;;		_soWrite
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text44
  5345  001F0A                     __ptext44:
  5346                           	callstack 0
  5347  001F0A                     _PulseEnClock:
  5348                           	callstack 27
  5349  001F0A                     
  5350                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5351  001F0A  0E00               	movlw	0
  5352  001F0C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5353  001F0E  0E1F               	movlw	31
  5354  001F10  6E01               	movwf	digitalWrite@pin^0,c
  5355  001F12  0E00               	movlw	0
  5356  001F14  6E04               	movwf	(digitalWrite@value+1)^0,c
  5357  001F16  0E01               	movlw	1
  5358  001F18  6E03               	movwf	digitalWrite@value^0,c
  5359  001F1A  EC9F  F004         	call	_digitalWrite	;wreg free
  5360                           
  5361                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5362  001F1E  0E00               	movlw	0
  5363  001F20  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5364  001F22  0E1F               	movlw	31
  5365  001F24  6E01               	movwf	digitalWrite@pin^0,c
  5366  001F26  0E00               	movlw	0
  5367  001F28  6E04               	movwf	(digitalWrite@value+1)^0,c
  5368  001F2A  0E00               	movlw	0
  5369  001F2C  6E03               	movwf	digitalWrite@value^0,c
  5370  001F2E  EC9F  F004         	call	_digitalWrite	;wreg free
  5371  001F32  0012               	return		;funcret
  5372  001F34                     __end_of_PulseEnClock:
  5373                           	callstack 0
  5374                           
  5375 ;; *************** function _PulseClockData *****************
  5376 ;; Defined at:
  5377 ;;		line 14 in file "so.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5391 ;;      Params:         0       0       0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0
  5394 ;;      Totals:         0       0       0       0       0       0       0
  5395 ;;Total ram usage:        0 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 1
  5398 ;; This function calls:
  5399 ;;		_digitalWrite
  5400 ;; This function is called by:
  5401 ;;		_soWrite
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text45
  5406  001F34                     __ptext45:
  5407                           	callstack 0
  5408  001F34                     _PulseClockData:
  5409                           	callstack 27
  5410  001F34                     
  5411                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5412  001F34  0E00               	movlw	0
  5413  001F36  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5414  001F38  0E08               	movlw	8
  5415  001F3A  6E01               	movwf	digitalWrite@pin^0,c
  5416  001F3C  0E00               	movlw	0
  5417  001F3E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5418  001F40  0E01               	movlw	1
  5419  001F42  6E03               	movwf	digitalWrite@value^0,c
  5420  001F44  EC9F  F004         	call	_digitalWrite	;wreg free
  5421                           
  5422                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5423  001F48  0E00               	movlw	0
  5424  001F4A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5425  001F4C  0E08               	movlw	8
  5426  001F4E  6E01               	movwf	digitalWrite@pin^0,c
  5427  001F50  0E00               	movlw	0
  5428  001F52  6E04               	movwf	(digitalWrite@value+1)^0,c
  5429  001F54  0E00               	movlw	0
  5430  001F56  6E03               	movwf	digitalWrite@value^0,c
  5431  001F58  EC9F  F004         	call	_digitalWrite	;wreg free
  5432  001F5C  0012               	return		;funcret
  5433  001F5E                     __end_of_PulseClockData:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _pulseEnablePin *****************
  5437 ;; Defined at:
  5438 ;;		line 18 in file "lcd.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5452 ;;      Params:         0       0       0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0
  5455 ;;      Totals:         0       0       0       0       0       0       0
  5456 ;;Total ram usage:        0 bytes
  5457 ;; Hardware stack levels used: 1
  5458 ;; Hardware stack levels required when called: 1
  5459 ;; This function calls:
  5460 ;;		_delayMicro
  5461 ;;		_digitalWrite
  5462 ;; This function is called by:
  5463 ;;		_pushNibble
  5464 ;;		_pushByte
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text46
  5469  001C96                     __ptext46:
  5470                           	callstack 0
  5471  001C96                     _pulseEnablePin:
  5472                           	callstack 26
  5473  001C96                     
  5474                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5475  001C96  0E00               	movlw	0
  5476  001C98  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5477  001C9A  0E1C               	movlw	28
  5478  001C9C  6E01               	movwf	digitalWrite@pin^0,c
  5479  001C9E  0E00               	movlw	0
  5480  001CA0  6E04               	movwf	(digitalWrite@value+1)^0,c
  5481  001CA2  0E01               	movlw	1
  5482  001CA4  6E03               	movwf	digitalWrite@value^0,c
  5483  001CA6  EC9F  F004         	call	_digitalWrite	;wreg free
  5484  001CAA                     
  5485                           ;lcd.c: 20:  delayMicro(5);
  5486  001CAA  0E00               	movlw	0
  5487  001CAC  6E02               	movwf	(delayMicro@a+1)^0,c
  5488  001CAE  0E05               	movlw	5
  5489  001CB0  6E01               	movwf	delayMicro@a^0,c
  5490  001CB2  EC40  F010         	call	_delayMicro	;wreg free
  5491  001CB6                     
  5492                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5493  001CB6  0E00               	movlw	0
  5494  001CB8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5495  001CBA  0E1C               	movlw	28
  5496  001CBC  6E01               	movwf	digitalWrite@pin^0,c
  5497  001CBE  0E00               	movlw	0
  5498  001CC0  6E04               	movwf	(digitalWrite@value+1)^0,c
  5499  001CC2  0E00               	movlw	0
  5500  001CC4  6E03               	movwf	digitalWrite@value^0,c
  5501  001CC6  EC9F  F004         	call	_digitalWrite	;wreg free
  5502                           
  5503                           ;lcd.c: 22:  delayMicro(5);
  5504  001CCA  0E00               	movlw	0
  5505  001CCC  6E02               	movwf	(delayMicro@a+1)^0,c
  5506  001CCE  0E05               	movlw	5
  5507  001CD0  6E01               	movwf	delayMicro@a^0,c
  5508  001CD2  EC40  F010         	call	_delayMicro	;wreg free
  5509  001CD6  0012               	return		;funcret
  5510  001CD8                     __end_of_pulseEnablePin:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _digitalWrite *****************
  5514 ;; Defined at:
  5515 ;;		line 14 in file "io.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  pin             2    0[COMRAM] int 
  5518 ;;  value           2    2[COMRAM] int 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         4       0       0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0
  5532 ;;      Temps:          2       0       0       0       0       0       0
  5533 ;;      Totals:         6       0       0       0       0       0       0
  5534 ;;Total ram usage:        6 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_pulseEnablePin
  5540 ;;		_pushNibble
  5541 ;;		_pushByte
  5542 ;;		_ssdUpdate
  5543 ;;		_PulseEnClock
  5544 ;;		_PulseClockData
  5545 ;;		_soWrite
  5546 ;;		_clear_SCL
  5547 ;;		_clear_SDA
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text47
  5552  00093E                     __ptext47:
  5553                           	callstack 0
  5554  00093E                     _digitalWrite:
  5555                           	callstack 28
  5556  00093E                     
  5557                           ;io.c: 16:     if(pin <8){
  5558  00093E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5559  000940  EFAD  F004         	goto	u1360
  5560  000944  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5561  000946  E107               	bnz	u1361
  5562  000948  0E08               	movlw	8
  5563  00094A  5C01               	subwf	digitalWrite@pin^0,w,c
  5564  00094C  B0D8               	btfsc	status,0,c
  5565  00094E  EFAB  F004         	goto	u1361
  5566  000952  EFAD  F004         	goto	u1360
  5567  000956                     u1361:
  5568  000956  EFD7  F004         	goto	l2075
  5569  00095A                     u1360:
  5570  00095A                     
  5571                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5572  00095A  5003               	movf	digitalWrite@value^0,w,c
  5573  00095C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5574  00095E  B4D8               	btfsc	status,2,c
  5575  000960  EFB4  F004         	goto	u1371
  5576  000964  EFB6  F004         	goto	u1370
  5577  000968                     u1371:
  5578  000968  EFC6  F004         	goto	l2073
  5579  00096C                     u1370:
  5580  00096C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5581  000970  0E01               	movlw	1
  5582  000972  6E06               	movwf	(??_digitalWrite+1)^0,c
  5583  000974  2A05               	incf	??_digitalWrite^0,f,c
  5584  000976  EFBF  F004         	goto	u1384
  5585  00097A                     u1385:
  5586  00097A  90D8               	bcf	status,0,c
  5587  00097C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5588  00097E                     u1384:
  5589  00097E  2E05               	decfsz	??_digitalWrite^0,f,c
  5590  000980  EFBD  F004         	goto	u1385
  5591  000984  5006               	movf	(??_digitalWrite+1)^0,w,c
  5592  000986  1280               	iorwf	128,f,c	;volatile
  5593  000988  EFC5  F005         	goto	l209
  5594  00098C                     l2073:
  5595  00098C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5596  000990  0E01               	movlw	1
  5597  000992  6E06               	movwf	(??_digitalWrite+1)^0,c
  5598  000994  2A05               	incf	??_digitalWrite^0,f,c
  5599  000996  EFCF  F004         	goto	u1394
  5600  00099A                     u1395:
  5601  00099A  90D8               	bcf	status,0,c
  5602  00099C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5603  00099E                     u1394:
  5604  00099E  2E05               	decfsz	??_digitalWrite^0,f,c
  5605  0009A0  EFCD  F004         	goto	u1395
  5606  0009A4  5006               	movf	(??_digitalWrite+1)^0,w,c
  5607  0009A6  0AFF               	xorlw	255
  5608  0009A8  1680               	andwf	128,f,c	;volatile
  5609  0009AA  EFC5  F005         	goto	l209
  5610  0009AE                     l2075:
  5611  0009AE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5612  0009B0  EFE5  F004         	goto	u1400
  5613  0009B4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5614  0009B6  E107               	bnz	u1401
  5615  0009B8  0E10               	movlw	16
  5616  0009BA  5C01               	subwf	digitalWrite@pin^0,w,c
  5617  0009BC  B0D8               	btfsc	status,0,c
  5618  0009BE  EFE3  F004         	goto	u1401
  5619  0009C2  EFE5  F004         	goto	u1400
  5620  0009C6                     u1401:
  5621  0009C6  EF13  F005         	goto	l2083
  5622  0009CA                     u1400:
  5623  0009CA                     
  5624                           ;io.c: 20:         pin -=8;
  5625  0009CA  0EF8               	movlw	248
  5626  0009CC  2601               	addwf	digitalWrite@pin^0,f,c
  5627  0009CE  0EFF               	movlw	255
  5628  0009D0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5629                           
  5630                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5631  0009D2  5003               	movf	digitalWrite@value^0,w,c
  5632  0009D4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5633  0009D6  B4D8               	btfsc	status,2,c
  5634  0009D8  EFF0  F004         	goto	u1411
  5635  0009DC  EFF2  F004         	goto	u1410
  5636  0009E0                     u1411:
  5637  0009E0  EF02  F005         	goto	l2081
  5638  0009E4                     u1410:
  5639  0009E4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5640  0009E8  0E01               	movlw	1
  5641  0009EA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5642  0009EC  2A05               	incf	??_digitalWrite^0,f,c
  5643  0009EE  EFFB  F004         	goto	u1424
  5644  0009F2                     u1425:
  5645  0009F2  90D8               	bcf	status,0,c
  5646  0009F4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5647  0009F6                     u1424:
  5648  0009F6  2E05               	decfsz	??_digitalWrite^0,f,c
  5649  0009F8  EFF9  F004         	goto	u1425
  5650  0009FC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5651  0009FE  1281               	iorwf	129,f,c	;volatile
  5652  000A00  EFC5  F005         	goto	l209
  5653  000A04                     l2081:
  5654  000A04  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5655  000A08  0E01               	movlw	1
  5656  000A0A  6E06               	movwf	(??_digitalWrite+1)^0,c
  5657  000A0C  2A05               	incf	??_digitalWrite^0,f,c
  5658  000A0E  EF0B  F005         	goto	u1434
  5659  000A12                     u1435:
  5660  000A12  90D8               	bcf	status,0,c
  5661  000A14  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5662  000A16                     u1434:
  5663  000A16  2E05               	decfsz	??_digitalWrite^0,f,c
  5664  000A18  EF09  F005         	goto	u1435
  5665  000A1C  5006               	movf	(??_digitalWrite+1)^0,w,c
  5666  000A1E  0AFF               	xorlw	255
  5667  000A20  1681               	andwf	129,f,c	;volatile
  5668  000A22  EFC5  F005         	goto	l209
  5669  000A26                     l2083:
  5670  000A26  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5671  000A28  EF21  F005         	goto	u1440
  5672  000A2C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5673  000A2E  E107               	bnz	u1441
  5674  000A30  0E18               	movlw	24
  5675  000A32  5C01               	subwf	digitalWrite@pin^0,w,c
  5676  000A34  B0D8               	btfsc	status,0,c
  5677  000A36  EF1F  F005         	goto	u1441
  5678  000A3A  EF21  F005         	goto	u1440
  5679  000A3E                     u1441:
  5680  000A3E  EF4F  F005         	goto	l2091
  5681  000A42                     u1440:
  5682  000A42                     
  5683                           ;io.c: 24:         pin -=16;
  5684  000A42  0EF0               	movlw	240
  5685  000A44  2601               	addwf	digitalWrite@pin^0,f,c
  5686  000A46  0EFF               	movlw	255
  5687  000A48  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5688                           
  5689                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5690  000A4A  5003               	movf	digitalWrite@value^0,w,c
  5691  000A4C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5692  000A4E  B4D8               	btfsc	status,2,c
  5693  000A50  EF2C  F005         	goto	u1451
  5694  000A54  EF2E  F005         	goto	u1450
  5695  000A58                     u1451:
  5696  000A58  EF3E  F005         	goto	l2089
  5697  000A5C                     u1450:
  5698  000A5C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5699  000A60  0E01               	movlw	1
  5700  000A62  6E06               	movwf	(??_digitalWrite+1)^0,c
  5701  000A64  2A05               	incf	??_digitalWrite^0,f,c
  5702  000A66  EF37  F005         	goto	u1464
  5703  000A6A                     u1465:
  5704  000A6A  90D8               	bcf	status,0,c
  5705  000A6C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5706  000A6E                     u1464:
  5707  000A6E  2E05               	decfsz	??_digitalWrite^0,f,c
  5708  000A70  EF35  F005         	goto	u1465
  5709  000A74  5006               	movf	(??_digitalWrite+1)^0,w,c
  5710  000A76  1282               	iorwf	130,f,c	;volatile
  5711  000A78  EFC5  F005         	goto	l209
  5712  000A7C                     l2089:
  5713  000A7C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5714  000A80  0E01               	movlw	1
  5715  000A82  6E06               	movwf	(??_digitalWrite+1)^0,c
  5716  000A84  2A05               	incf	??_digitalWrite^0,f,c
  5717  000A86  EF47  F005         	goto	u1474
  5718  000A8A                     u1475:
  5719  000A8A  90D8               	bcf	status,0,c
  5720  000A8C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5721  000A8E                     u1474:
  5722  000A8E  2E05               	decfsz	??_digitalWrite^0,f,c
  5723  000A90  EF45  F005         	goto	u1475
  5724  000A94  5006               	movf	(??_digitalWrite+1)^0,w,c
  5725  000A96  0AFF               	xorlw	255
  5726  000A98  1682               	andwf	130,f,c	;volatile
  5727  000A9A  EFC5  F005         	goto	l209
  5728  000A9E                     l2091:
  5729  000A9E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5730  000AA0  EF5D  F005         	goto	u1480
  5731  000AA4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5732  000AA6  E107               	bnz	u1481
  5733  000AA8  0E20               	movlw	32
  5734  000AAA  5C01               	subwf	digitalWrite@pin^0,w,c
  5735  000AAC  B0D8               	btfsc	status,0,c
  5736  000AAE  EF5B  F005         	goto	u1481
  5737  000AB2  EF5D  F005         	goto	u1480
  5738  000AB6                     u1481:
  5739  000AB6  EF8B  F005         	goto	l2099
  5740  000ABA                     u1480:
  5741  000ABA                     
  5742                           ;io.c: 28:         pin -=24;
  5743  000ABA  0EE8               	movlw	232
  5744  000ABC  2601               	addwf	digitalWrite@pin^0,f,c
  5745  000ABE  0EFF               	movlw	255
  5746  000AC0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5747                           
  5748                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5749  000AC2  5003               	movf	digitalWrite@value^0,w,c
  5750  000AC4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5751  000AC6  B4D8               	btfsc	status,2,c
  5752  000AC8  EF68  F005         	goto	u1491
  5753  000ACC  EF6A  F005         	goto	u1490
  5754  000AD0                     u1491:
  5755  000AD0  EF7A  F005         	goto	l2097
  5756  000AD4                     u1490:
  5757  000AD4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5758  000AD8  0E01               	movlw	1
  5759  000ADA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5760  000ADC  2A05               	incf	??_digitalWrite^0,f,c
  5761  000ADE  EF73  F005         	goto	u1504
  5762  000AE2                     u1505:
  5763  000AE2  90D8               	bcf	status,0,c
  5764  000AE4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5765  000AE6                     u1504:
  5766  000AE6  2E05               	decfsz	??_digitalWrite^0,f,c
  5767  000AE8  EF71  F005         	goto	u1505
  5768  000AEC  5006               	movf	(??_digitalWrite+1)^0,w,c
  5769  000AEE  1283               	iorwf	131,f,c	;volatile
  5770  000AF0  EFC5  F005         	goto	l209
  5771  000AF4                     l2097:
  5772  000AF4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5773  000AF8  0E01               	movlw	1
  5774  000AFA  6E06               	movwf	(??_digitalWrite+1)^0,c
  5775  000AFC  2A05               	incf	??_digitalWrite^0,f,c
  5776  000AFE  EF83  F005         	goto	u1514
  5777  000B02                     u1515:
  5778  000B02  90D8               	bcf	status,0,c
  5779  000B04  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5780  000B06                     u1514:
  5781  000B06  2E05               	decfsz	??_digitalWrite^0,f,c
  5782  000B08  EF81  F005         	goto	u1515
  5783  000B0C  5006               	movf	(??_digitalWrite+1)^0,w,c
  5784  000B0E  0AFF               	xorlw	255
  5785  000B10  1683               	andwf	131,f,c	;volatile
  5786  000B12  EFC5  F005         	goto	l209
  5787  000B16                     l2099:
  5788  000B16  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5789  000B18  EF99  F005         	goto	u1520
  5790  000B1C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5791  000B1E  E107               	bnz	u1521
  5792  000B20  0E28               	movlw	40
  5793  000B22  5C01               	subwf	digitalWrite@pin^0,w,c
  5794  000B24  B0D8               	btfsc	status,0,c
  5795  000B26  EF97  F005         	goto	u1521
  5796  000B2A  EF99  F005         	goto	u1520
  5797  000B2E                     u1521:
  5798  000B2E  EFC5  F005         	goto	l209
  5799  000B32                     u1520:
  5800  000B32                     
  5801                           ;io.c: 32:         pin -=32;
  5802  000B32  0EE0               	movlw	224
  5803  000B34  2601               	addwf	digitalWrite@pin^0,f,c
  5804  000B36  0EFF               	movlw	255
  5805  000B38  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5806                           
  5807                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5808  000B3A  5003               	movf	digitalWrite@value^0,w,c
  5809  000B3C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5810  000B3E  B4D8               	btfsc	status,2,c
  5811  000B40  EFA4  F005         	goto	u1531
  5812  000B44  EFA6  F005         	goto	u1530
  5813  000B48                     u1531:
  5814  000B48  EFB6  F005         	goto	l2105
  5815  000B4C                     u1530:
  5816  000B4C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5817  000B50  0E01               	movlw	1
  5818  000B52  6E06               	movwf	(??_digitalWrite+1)^0,c
  5819  000B54  2A05               	incf	??_digitalWrite^0,f,c
  5820  000B56  EFAF  F005         	goto	u1544
  5821  000B5A                     u1545:
  5822  000B5A  90D8               	bcf	status,0,c
  5823  000B5C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5824  000B5E                     u1544:
  5825  000B5E  2E05               	decfsz	??_digitalWrite^0,f,c
  5826  000B60  EFAD  F005         	goto	u1545
  5827  000B64  5006               	movf	(??_digitalWrite+1)^0,w,c
  5828  000B66  1284               	iorwf	132,f,c	;volatile
  5829  000B68  EFC5  F005         	goto	l209
  5830  000B6C                     l2105:
  5831  000B6C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5832  000B70  0E01               	movlw	1
  5833  000B72  6E06               	movwf	(??_digitalWrite+1)^0,c
  5834  000B74  2A05               	incf	??_digitalWrite^0,f,c
  5835  000B76  EFBF  F005         	goto	u1554
  5836  000B7A                     u1555:
  5837  000B7A  90D8               	bcf	status,0,c
  5838  000B7C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5839  000B7E                     u1554:
  5840  000B7E  2E05               	decfsz	??_digitalWrite^0,f,c
  5841  000B80  EFBD  F005         	goto	u1555
  5842  000B84  5006               	movf	(??_digitalWrite+1)^0,w,c
  5843  000B86  0AFF               	xorlw	255
  5844  000B88  1684               	andwf	132,f,c	;volatile
  5845  000B8A                     l209:
  5846  000B8A  0012               	return		;funcret
  5847  000B8C                     __end_of_digitalWrite:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function _delayMicro *****************
  5851 ;; Defined at:
  5852 ;;		line 5 in file "lcd.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  a               2    0[COMRAM] int 
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  i               2    0        volatile int 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		None
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5866 ;;      Params:         2       0       0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0
  5869 ;;      Totals:         2       0       0       0       0       0       0
  5870 ;;Total ram usage:        2 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_pulseEnablePin
  5876 ;;		_lcdChar
  5877 ;;		_lcdInit
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text48
  5882  002080                     __ptext48:
  5883                           	callstack 0
  5884  002080                     _delayMicro:
  5885                           	callstack 26
  5886  002080  0012               	return		;funcret
  5887  002082                     __end_of_delayMicro:
  5888                           	callstack 0
  5889                           
  5890 ;; *************** function _delayMili *****************
  5891 ;; Defined at:
  5892 ;;		line 10 in file "lcd.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  a               2    0[COMRAM] int 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  i               2    3[COMRAM] volatile int 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5906 ;;      Params:         2       0       0       0       0       0       0
  5907 ;;      Locals:         2       0       0       0       0       0       0
  5908 ;;      Temps:          1       0       0       0       0       0       0
  5909 ;;      Totals:         5       0       0       0       0       0       0
  5910 ;;Total ram usage:        5 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; This function calls:
  5913 ;;		Nothing
  5914 ;; This function is called by:
  5915 ;;		_lcdCommand
  5916 ;;		_lcdInit
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text49
  5921  001E58                     __ptext49:
  5922                           	callstack 0
  5923  001E58                     _delayMili:
  5924                           	callstack 28
  5925  001E58                     
  5926                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  5927  001E58  0E00               	movlw	0
  5928  001E5A  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  5929  001E5C  0E00               	movlw	0
  5930  001E5E  6E04               	movwf	delayMili@i^0,c	;volatile
  5931  001E60  EF34  F00F         	goto	l2353
  5932  001E64                     l2351:
  5933                           
  5934                           ;lcd.c: 15:  }
  5935  001E64  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  5936  001E66  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  5937  001E68                     l2353:
  5938  001E68  5001               	movf	delayMili@a^0,w,c
  5939  001E6A  5C04               	subwf	delayMili@i^0,w,c	;volatile
  5940  001E6C  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  5941  001E6E  0A80               	xorlw	128
  5942  001E70  6E03               	movwf	??_delayMili^0,c
  5943  001E72  5002               	movf	(delayMili@a+1)^0,w,c
  5944  001E74  0A80               	xorlw	128
  5945  001E76  5803               	subwfb	??_delayMili^0,w,c
  5946  001E78  A0D8               	btfss	status,0,c
  5947  001E7A  EF41  F00F         	goto	u2051
  5948  001E7E  EF43  F00F         	goto	u2050
  5949  001E82                     u2051:
  5950  001E82  EF32  F00F         	goto	l2351
  5951  001E86                     u2050:
  5952  001E86  0012               	return		;funcret
  5953  001E88                     __end_of_delayMili:
  5954                           	callstack 0
  5955                           
  5956 ;; *************** function _adcInit *****************
  5957 ;; Defined at:
  5958 ;;		line 25 in file "adc.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5972 ;;      Params:         0       0       0       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0
  5975 ;;      Totals:         0       0       0       0       0       0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 1
  5979 ;; This function calls:
  5980 ;;		_pinMode
  5981 ;; This function is called by:
  5982 ;;		_main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text50
  5987  001B80                     __ptext50:
  5988                           	callstack 0
  5989  001B80                     _adcInit:
  5990                           	callstack 29
  5991  001B80                     
  5992                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  5993  001B80  0E00               	movlw	0
  5994  001B82  6E02               	movwf	(pinMode@pin+1)^0,c
  5995  001B84  0E00               	movlw	0
  5996  001B86  6E01               	movwf	pinMode@pin^0,c
  5997  001B88  0E00               	movlw	0
  5998  001B8A  6E04               	movwf	(pinMode@type+1)^0,c
  5999  001B8C  0E01               	movlw	1
  6000  001B8E  6E03               	movwf	pinMode@type^0,c
  6001  001B90  ECC6  F005         	call	_pinMode	;wreg free
  6002                           
  6003                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  6004  001B94  0E00               	movlw	0
  6005  001B96  6E02               	movwf	(pinMode@pin+1)^0,c
  6006  001B98  0E01               	movlw	1
  6007  001B9A  6E01               	movwf	pinMode@pin^0,c
  6008  001B9C  0E00               	movlw	0
  6009  001B9E  6E04               	movwf	(pinMode@type+1)^0,c
  6010  001BA0  0E01               	movlw	1
  6011  001BA2  6E03               	movwf	pinMode@type^0,c
  6012  001BA4  ECC6  F005         	call	_pinMode	;wreg free
  6013                           
  6014                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  6015  001BA8  0E00               	movlw	0
  6016  001BAA  6E02               	movwf	(pinMode@pin+1)^0,c
  6017  001BAC  0E02               	movlw	2
  6018  001BAE  6E01               	movwf	pinMode@pin^0,c
  6019  001BB0  0E00               	movlw	0
  6020  001BB2  6E04               	movwf	(pinMode@type+1)^0,c
  6021  001BB4  0E01               	movlw	1
  6022  001BB6  6E03               	movwf	pinMode@type^0,c
  6023  001BB8  ECC6  F005         	call	_pinMode	;wreg free
  6024  001BBC                     
  6025                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  6026  001BBC  80C2               	bsf	194,0,c	;volatile
  6027  001BBE                     
  6028                           ;adc.c: 33:     ADCON1 = 0b00001100;
  6029  001BBE  0E0C               	movlw	12
  6030  001BC0  6EC1               	movwf	193,c	;volatile
  6031  001BC2                     
  6032                           ;adc.c: 34:     ADCON2 = 0b10101010;
  6033  001BC2  0EAA               	movlw	170
  6034  001BC4  6EC0               	movwf	192,c	;volatile
  6035  001BC6  0012               	return		;funcret
  6036  001BC8                     __end_of_adcInit:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _pinMode *****************
  6040 ;; Defined at:
  6041 ;;		line 54 in file "io.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  pin             2    0[COMRAM] int 
  6044 ;;  type            2    2[COMRAM] int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6056 ;;      Params:         4       0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0
  6058 ;;      Temps:          2       0       0       0       0       0       0
  6059 ;;      Totals:         6       0       0       0       0       0       0
  6060 ;;Total ram usage:        6 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_adcInit
  6066 ;;		_kpInit
  6067 ;;		_lcdInit
  6068 ;;		_ssdInit
  6069 ;;		_soInit
  6070 ;;		_read_SCL
  6071 ;;		_read_SDA
  6072 ;;		_clear_SCL
  6073 ;;		_clear_SDA
  6074 ;;		_i2cInit
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text51
  6079  000B8C                     __ptext51:
  6080                           	callstack 0
  6081  000B8C                     _pinMode:
  6082                           	callstack 28
  6083  000B8C                     
  6084                           ;io.c: 56:     if(pin <8){
  6085  000B8C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6086  000B8E  EFD4  F005         	goto	u1560
  6087  000B92  5002               	movf	(pinMode@pin+1)^0,w,c
  6088  000B94  E107               	bnz	u1561
  6089  000B96  0E08               	movlw	8
  6090  000B98  5C01               	subwf	pinMode@pin^0,w,c
  6091  000B9A  B0D8               	btfsc	status,0,c
  6092  000B9C  EFD2  F005         	goto	u1561
  6093  000BA0  EFD4  F005         	goto	u1560
  6094  000BA4                     u1561:
  6095  000BA4  EFFE  F005         	goto	l2115
  6096  000BA8                     u1560:
  6097  000BA8                     
  6098                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  6099  000BA8  5003               	movf	pinMode@type^0,w,c
  6100  000BAA  1004               	iorwf	(pinMode@type+1)^0,w,c
  6101  000BAC  B4D8               	btfsc	status,2,c
  6102  000BAE  EFDB  F005         	goto	u1571
  6103  000BB2  EFDD  F005         	goto	u1570
  6104  000BB6                     u1571:
  6105  000BB6  EFED  F005         	goto	l2113
  6106  000BBA                     u1570:
  6107  000BBA  C001  F005         	movff	pinMode@pin,??_pinMode
  6108  000BBE  0E01               	movlw	1
  6109  000BC0  6E06               	movwf	(??_pinMode+1)^0,c
  6110  000BC2  2A05               	incf	??_pinMode^0,f,c
  6111  000BC4  EFE6  F005         	goto	u1584
  6112  000BC8                     u1585:
  6113  000BC8  90D8               	bcf	status,0,c
  6114  000BCA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6115  000BCC                     u1584:
  6116  000BCC  2E05               	decfsz	??_pinMode^0,f,c
  6117  000BCE  EFE4  F005         	goto	u1585
  6118  000BD2  5006               	movf	(??_pinMode+1)^0,w,c
  6119  000BD4  1292               	iorwf	146,f,c	;volatile
  6120  000BD6  EFEC  F006         	goto	l243
  6121  000BDA                     l2113:
  6122  000BDA  C001  F005         	movff	pinMode@pin,??_pinMode
  6123  000BDE  0E01               	movlw	1
  6124  000BE0  6E06               	movwf	(??_pinMode+1)^0,c
  6125  000BE2  2A05               	incf	??_pinMode^0,f,c
  6126  000BE4  EFF6  F005         	goto	u1594
  6127  000BE8                     u1595:
  6128  000BE8  90D8               	bcf	status,0,c
  6129  000BEA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6130  000BEC                     u1594:
  6131  000BEC  2E05               	decfsz	??_pinMode^0,f,c
  6132  000BEE  EFF4  F005         	goto	u1595
  6133  000BF2  5006               	movf	(??_pinMode+1)^0,w,c
  6134  000BF4  0AFF               	xorlw	255
  6135  000BF6  1692               	andwf	146,f,c	;volatile
  6136  000BF8  EFEC  F006         	goto	l243
  6137  000BFC                     l2115:
  6138  000BFC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6139  000BFE  EF0C  F006         	goto	u1600
  6140  000C02  5002               	movf	(pinMode@pin+1)^0,w,c
  6141  000C04  E107               	bnz	u1601
  6142  000C06  0E10               	movlw	16
  6143  000C08  5C01               	subwf	pinMode@pin^0,w,c
  6144  000C0A  B0D8               	btfsc	status,0,c
  6145  000C0C  EF0A  F006         	goto	u1601
  6146  000C10  EF0C  F006         	goto	u1600
  6147  000C14                     u1601:
  6148  000C14  EF3A  F006         	goto	l2123
  6149  000C18                     u1600:
  6150  000C18                     
  6151                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  6152  000C18  5003               	movf	pinMode@type^0,w,c
  6153  000C1A  1004               	iorwf	(pinMode@type+1)^0,w,c
  6154  000C1C  B4D8               	btfsc	status,2,c
  6155  000C1E  EF13  F006         	goto	u1611
  6156  000C22  EF15  F006         	goto	u1610
  6157  000C26                     u1611:
  6158  000C26  EF27  F006         	goto	l2121
  6159  000C2A                     u1610:
  6160  000C2A  C001  F005         	movff	pinMode@pin,??_pinMode
  6161  000C2E  0EF8               	movlw	-8
  6162  000C30  2605               	addwf	??_pinMode^0,f,c
  6163  000C32  0E01               	movlw	1
  6164  000C34  6E06               	movwf	(??_pinMode+1)^0,c
  6165  000C36  2A05               	incf	??_pinMode^0,f,c
  6166  000C38  EF20  F006         	goto	u1624
  6167  000C3C                     u1625:
  6168  000C3C  90D8               	bcf	status,0,c
  6169  000C3E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6170  000C40                     u1624:
  6171  000C40  2E05               	decfsz	??_pinMode^0,f,c
  6172  000C42  EF1E  F006         	goto	u1625
  6173  000C46  5006               	movf	(??_pinMode+1)^0,w,c
  6174  000C48  1293               	iorwf	147,f,c	;volatile
  6175  000C4A  EFEC  F006         	goto	l243
  6176  000C4E                     l2121:
  6177  000C4E  C001  F005         	movff	pinMode@pin,??_pinMode
  6178  000C52  0EF8               	movlw	-8
  6179  000C54  2605               	addwf	??_pinMode^0,f,c
  6180  000C56  0E01               	movlw	1
  6181  000C58  6E06               	movwf	(??_pinMode+1)^0,c
  6182  000C5A  2A05               	incf	??_pinMode^0,f,c
  6183  000C5C  EF32  F006         	goto	u1634
  6184  000C60                     u1635:
  6185  000C60  90D8               	bcf	status,0,c
  6186  000C62  3606               	rlcf	(??_pinMode+1)^0,f,c
  6187  000C64                     u1634:
  6188  000C64  2E05               	decfsz	??_pinMode^0,f,c
  6189  000C66  EF30  F006         	goto	u1635
  6190  000C6A  5006               	movf	(??_pinMode+1)^0,w,c
  6191  000C6C  0AFF               	xorlw	255
  6192  000C6E  1693               	andwf	147,f,c	;volatile
  6193  000C70  EFEC  F006         	goto	l243
  6194  000C74                     l2123:
  6195  000C74  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6196  000C76  EF48  F006         	goto	u1640
  6197  000C7A  5002               	movf	(pinMode@pin+1)^0,w,c
  6198  000C7C  E107               	bnz	u1641
  6199  000C7E  0E18               	movlw	24
  6200  000C80  5C01               	subwf	pinMode@pin^0,w,c
  6201  000C82  B0D8               	btfsc	status,0,c
  6202  000C84  EF46  F006         	goto	u1641
  6203  000C88  EF48  F006         	goto	u1640
  6204  000C8C                     u1641:
  6205  000C8C  EF76  F006         	goto	l2131
  6206  000C90                     u1640:
  6207  000C90                     
  6208                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  6209  000C90  5003               	movf	pinMode@type^0,w,c
  6210  000C92  1004               	iorwf	(pinMode@type+1)^0,w,c
  6211  000C94  B4D8               	btfsc	status,2,c
  6212  000C96  EF4F  F006         	goto	u1651
  6213  000C9A  EF51  F006         	goto	u1650
  6214  000C9E                     u1651:
  6215  000C9E  EF63  F006         	goto	l2129
  6216  000CA2                     u1650:
  6217  000CA2  C001  F005         	movff	pinMode@pin,??_pinMode
  6218  000CA6  0EF0               	movlw	-16
  6219  000CA8  2605               	addwf	??_pinMode^0,f,c
  6220  000CAA  0E01               	movlw	1
  6221  000CAC  6E06               	movwf	(??_pinMode+1)^0,c
  6222  000CAE  2A05               	incf	??_pinMode^0,f,c
  6223  000CB0  EF5C  F006         	goto	u1664
  6224  000CB4                     u1665:
  6225  000CB4  90D8               	bcf	status,0,c
  6226  000CB6  3606               	rlcf	(??_pinMode+1)^0,f,c
  6227  000CB8                     u1664:
  6228  000CB8  2E05               	decfsz	??_pinMode^0,f,c
  6229  000CBA  EF5A  F006         	goto	u1665
  6230  000CBE  5006               	movf	(??_pinMode+1)^0,w,c
  6231  000CC0  1294               	iorwf	148,f,c	;volatile
  6232  000CC2  EFEC  F006         	goto	l243
  6233  000CC6                     l2129:
  6234  000CC6  C001  F005         	movff	pinMode@pin,??_pinMode
  6235  000CCA  0EF0               	movlw	-16
  6236  000CCC  2605               	addwf	??_pinMode^0,f,c
  6237  000CCE  0E01               	movlw	1
  6238  000CD0  6E06               	movwf	(??_pinMode+1)^0,c
  6239  000CD2  2A05               	incf	??_pinMode^0,f,c
  6240  000CD4  EF6E  F006         	goto	u1674
  6241  000CD8                     u1675:
  6242  000CD8  90D8               	bcf	status,0,c
  6243  000CDA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6244  000CDC                     u1674:
  6245  000CDC  2E05               	decfsz	??_pinMode^0,f,c
  6246  000CDE  EF6C  F006         	goto	u1675
  6247  000CE2  5006               	movf	(??_pinMode+1)^0,w,c
  6248  000CE4  0AFF               	xorlw	255
  6249  000CE6  1694               	andwf	148,f,c	;volatile
  6250  000CE8  EFEC  F006         	goto	l243
  6251  000CEC                     l2131:
  6252  000CEC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6253  000CEE  EF84  F006         	goto	u1680
  6254  000CF2  5002               	movf	(pinMode@pin+1)^0,w,c
  6255  000CF4  E107               	bnz	u1681
  6256  000CF6  0E20               	movlw	32
  6257  000CF8  5C01               	subwf	pinMode@pin^0,w,c
  6258  000CFA  B0D8               	btfsc	status,0,c
  6259  000CFC  EF82  F006         	goto	u1681
  6260  000D00  EF84  F006         	goto	u1680
  6261  000D04                     u1681:
  6262  000D04  EFB2  F006         	goto	l2139
  6263  000D08                     u1680:
  6264  000D08                     
  6265                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  6266  000D08  5003               	movf	pinMode@type^0,w,c
  6267  000D0A  1004               	iorwf	(pinMode@type+1)^0,w,c
  6268  000D0C  B4D8               	btfsc	status,2,c
  6269  000D0E  EF8B  F006         	goto	u1691
  6270  000D12  EF8D  F006         	goto	u1690
  6271  000D16                     u1691:
  6272  000D16  EF9F  F006         	goto	l2137
  6273  000D1A                     u1690:
  6274  000D1A  C001  F005         	movff	pinMode@pin,??_pinMode
  6275  000D1E  0EE8               	movlw	-24
  6276  000D20  2605               	addwf	??_pinMode^0,f,c
  6277  000D22  0E01               	movlw	1
  6278  000D24  6E06               	movwf	(??_pinMode+1)^0,c
  6279  000D26  2A05               	incf	??_pinMode^0,f,c
  6280  000D28  EF98  F006         	goto	u1704
  6281  000D2C                     u1705:
  6282  000D2C  90D8               	bcf	status,0,c
  6283  000D2E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6284  000D30                     u1704:
  6285  000D30  2E05               	decfsz	??_pinMode^0,f,c
  6286  000D32  EF96  F006         	goto	u1705
  6287  000D36  5006               	movf	(??_pinMode+1)^0,w,c
  6288  000D38  1295               	iorwf	149,f,c	;volatile
  6289  000D3A  EFEC  F006         	goto	l243
  6290  000D3E                     l2137:
  6291  000D3E  C001  F005         	movff	pinMode@pin,??_pinMode
  6292  000D42  0EE8               	movlw	-24
  6293  000D44  2605               	addwf	??_pinMode^0,f,c
  6294  000D46  0E01               	movlw	1
  6295  000D48  6E06               	movwf	(??_pinMode+1)^0,c
  6296  000D4A  2A05               	incf	??_pinMode^0,f,c
  6297  000D4C  EFAA  F006         	goto	u1714
  6298  000D50                     u1715:
  6299  000D50  90D8               	bcf	status,0,c
  6300  000D52  3606               	rlcf	(??_pinMode+1)^0,f,c
  6301  000D54                     u1714:
  6302  000D54  2E05               	decfsz	??_pinMode^0,f,c
  6303  000D56  EFA8  F006         	goto	u1715
  6304  000D5A  5006               	movf	(??_pinMode+1)^0,w,c
  6305  000D5C  0AFF               	xorlw	255
  6306  000D5E  1695               	andwf	149,f,c	;volatile
  6307  000D60  EFEC  F006         	goto	l243
  6308  000D64                     l2139:
  6309  000D64  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6310  000D66  EFC0  F006         	goto	u1720
  6311  000D6A  5002               	movf	(pinMode@pin+1)^0,w,c
  6312  000D6C  E107               	bnz	u1721
  6313  000D6E  0E28               	movlw	40
  6314  000D70  5C01               	subwf	pinMode@pin^0,w,c
  6315  000D72  B0D8               	btfsc	status,0,c
  6316  000D74  EFBE  F006         	goto	u1721
  6317  000D78  EFC0  F006         	goto	u1720
  6318  000D7C                     u1721:
  6319  000D7C  EFEC  F006         	goto	l243
  6320  000D80                     u1720:
  6321  000D80                     
  6322                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  6323  000D80  5003               	movf	pinMode@type^0,w,c
  6324  000D82  1004               	iorwf	(pinMode@type+1)^0,w,c
  6325  000D84  B4D8               	btfsc	status,2,c
  6326  000D86  EFC7  F006         	goto	u1731
  6327  000D8A  EFC9  F006         	goto	u1730
  6328  000D8E                     u1731:
  6329  000D8E  EFDB  F006         	goto	l2145
  6330  000D92                     u1730:
  6331  000D92  C001  F005         	movff	pinMode@pin,??_pinMode
  6332  000D96  0EE0               	movlw	-32
  6333  000D98  2605               	addwf	??_pinMode^0,f,c
  6334  000D9A  0E01               	movlw	1
  6335  000D9C  6E06               	movwf	(??_pinMode+1)^0,c
  6336  000D9E  2A05               	incf	??_pinMode^0,f,c
  6337  000DA0  EFD4  F006         	goto	u1744
  6338  000DA4                     u1745:
  6339  000DA4  90D8               	bcf	status,0,c
  6340  000DA6  3606               	rlcf	(??_pinMode+1)^0,f,c
  6341  000DA8                     u1744:
  6342  000DA8  2E05               	decfsz	??_pinMode^0,f,c
  6343  000DAA  EFD2  F006         	goto	u1745
  6344  000DAE  5006               	movf	(??_pinMode+1)^0,w,c
  6345  000DB0  1296               	iorwf	150,f,c	;volatile
  6346  000DB2  EFEC  F006         	goto	l243
  6347  000DB6                     l2145:
  6348  000DB6  C001  F005         	movff	pinMode@pin,??_pinMode
  6349  000DBA  0EE0               	movlw	-32
  6350  000DBC  2605               	addwf	??_pinMode^0,f,c
  6351  000DBE  0E01               	movlw	1
  6352  000DC0  6E06               	movwf	(??_pinMode+1)^0,c
  6353  000DC2  2A05               	incf	??_pinMode^0,f,c
  6354  000DC4  EFE6  F006         	goto	u1754
  6355  000DC8                     u1755:
  6356  000DC8  90D8               	bcf	status,0,c
  6357  000DCA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6358  000DCC                     u1754:
  6359  000DCC  2E05               	decfsz	??_pinMode^0,f,c
  6360  000DCE  EFE4  F006         	goto	u1755
  6361  000DD2  5006               	movf	(??_pinMode+1)^0,w,c
  6362  000DD4  0AFF               	xorlw	255
  6363  000DD6  1696               	andwf	150,f,c	;volatile
  6364  000DD8                     l243:
  6365  000DD8  0012               	return		;funcret
  6366  000DDA                     __end_of_pinMode:
  6367                           	callstack 0
  6368                           
  6369                           	psect	rparam
  6370  0000                     
  6371                           	psect	idloc
  6372                           
  6373                           ;Config register IDLOC0 @ 0x200000
  6374                           ;	unspecified, using default values
  6375  200000                     	org	2097152
  6376  200000  FF                 	db	255
  6377                           
  6378                           ;Config register IDLOC1 @ 0x200001
  6379                           ;	unspecified, using default values
  6380  200001                     	org	2097153
  6381  200001  FF                 	db	255
  6382                           
  6383                           ;Config register IDLOC2 @ 0x200002
  6384                           ;	unspecified, using default values
  6385  200002                     	org	2097154
  6386  200002  FF                 	db	255
  6387                           
  6388                           ;Config register IDLOC3 @ 0x200003
  6389                           ;	unspecified, using default values
  6390  200003                     	org	2097155
  6391  200003  FF                 	db	255
  6392                           
  6393                           ;Config register IDLOC4 @ 0x200004
  6394                           ;	unspecified, using default values
  6395  200004                     	org	2097156
  6396  200004  FF                 	db	255
  6397                           
  6398                           ;Config register IDLOC5 @ 0x200005
  6399                           ;	unspecified, using default values
  6400  200005                     	org	2097157
  6401  200005  FF                 	db	255
  6402                           
  6403                           ;Config register IDLOC6 @ 0x200006
  6404                           ;	unspecified, using default values
  6405  200006                     	org	2097158
  6406  200006  FF                 	db	255
  6407                           
  6408                           ;Config register IDLOC7 @ 0x200007
  6409                           ;	unspecified, using default values
  6410  200007                     	org	2097159
  6411  200007  FF                 	db	255
  6412                           
  6413                           	psect	config
  6414                           
  6415                           ; Padding undefined space
  6416  300000                     	org	3145728
  6417  300000  FF                 	db	255
  6418                           
  6419                           ;Config register CONFIG1H @ 0x300001
  6420                           ;	Oscillator Selection bits
  6421                           ;	OSC = HS, HS oscillator
  6422                           ;	Fail-Safe Clock Monitor Enable bit
  6423                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6424                           ;	Internal/External Oscillator Switchover bit
  6425                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6426  300001                     	org	3145729
  6427  300001  02                 	db	2
  6428                           
  6429                           ;Config register CONFIG2L @ 0x300002
  6430                           ;	Power-up Timer Enable bit
  6431                           ;	PWRT = OFF, PWRT disabled
  6432                           ;	Brown-out Reset Enable bits
  6433                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6434                           ;	Brown Out Reset Voltage bits
  6435                           ;	BORV = 0x2E, user specified literal
  6436  300002                     	org	3145730
  6437  300002  71                 	db	369
  6438                           
  6439                           ;Config register CONFIG2H @ 0x300003
  6440                           ;	Watchdog Timer Enable bit
  6441                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6442                           ;	Watchdog Timer Postscale Select bits
  6443                           ;	WDTPS = 1, 1:1
  6444  300003                     	org	3145731
  6445  300003  00                 	db	0
  6446                           
  6447                           ; Padding undefined space
  6448  300004                     	org	3145732
  6449  300004  FF                 	db	255
  6450                           
  6451                           ;Config register CONFIG3H @ 0x300005
  6452                           ;	CCP2 MUX bit
  6453                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6454                           ;	PORTB A/D Enable bit
  6455                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6456                           ;	Low-Power Timer1 Oscillator Enable bit
  6457                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6458                           ;	MCLR Pin Enable bit
  6459                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6460  300005                     	org	3145733
  6461  300005  83                 	db	131
  6462                           
  6463                           ;Config register CONFIG4L @ 0x300006
  6464                           ;	Stack Full/Underflow Reset Enable bit
  6465                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6466                           ;	Single-Supply ICSP Enable bit
  6467                           ;	LVP = OFF, Single-Supply ICSP disabled
  6468                           ;	Extended Instruction Set Enable bit
  6469                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6470                           ;	Background Debugger Enable bit
  6471                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6472  300006                     	org	3145734
  6473  300006  80                 	db	128
  6474                           
  6475                           ; Padding undefined space
  6476  300007                     	org	3145735
  6477  300007  FF                 	db	255
  6478                           
  6479                           ;Config register CONFIG5L @ 0x300008
  6480                           ;	Code Protection bit
  6481                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6482                           ;	Code Protection bit
  6483                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6484                           ;	Code Protection bit
  6485                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6486                           ;	Code Protection bit
  6487                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6488  300008                     	org	3145736
  6489  300008  0F                 	db	15
  6490                           
  6491                           ;Config register CONFIG5H @ 0x300009
  6492                           ;	Boot Block Code Protection bit
  6493                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6494                           ;	Data EEPROM Code Protection bit
  6495                           ;	CPD = OFF, Data EEPROM not code-protected
  6496  300009                     	org	3145737
  6497  300009  C0                 	db	192
  6498                           
  6499                           ;Config register CONFIG6L @ 0x30000A
  6500                           ;	Write Protection bit
  6501                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6502                           ;	Write Protection bit
  6503                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6504                           ;	Write Protection bit
  6505                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6506                           ;	Write Protection bit
  6507                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6508  30000A                     	org	3145738
  6509  30000A  0F                 	db	15
  6510                           
  6511                           ;Config register CONFIG6H @ 0x30000B
  6512                           ;	Configuration Register Write Protection bit
  6513                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6514                           ;	Boot Block Write Protection bit
  6515                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6516                           ;	Data EEPROM Write Protection bit
  6517                           ;	WRTD = OFF, Data EEPROM not write-protected
  6518  30000B                     	org	3145739
  6519  30000B  E0                 	db	224
  6520                           
  6521                           ;Config register CONFIG7L @ 0x30000C
  6522                           ;	Table Read Protection bit
  6523                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6524                           ;	Table Read Protection bit
  6525                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6526                           ;	Table Read Protection bit
  6527                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6528                           ;	Table Read Protection bit
  6529                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6530  30000C                     	org	3145740
  6531  30000C  0F                 	db	15
  6532                           
  6533                           ;Config register CONFIG7H @ 0x30000D
  6534                           ;	Boot Block Table Read Protection bit
  6535                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6536  30000D                     	org	3145741
  6537  30000D  40                 	db	64
  6538                           tosu	equ	0xFFF
  6539                           tosh	equ	0xFFE
  6540                           tosl	equ	0xFFD
  6541                           stkptr	equ	0xFFC
  6542                           pclatu	equ	0xFFB
  6543                           pclath	equ	0xFFA
  6544                           pcl	equ	0xFF9
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           indf0	equ	0xFEF
  6552                           postinc0	equ	0xFEE
  6553                           postdec0	equ	0xFED
  6554                           preinc0	equ	0xFEC
  6555                           plusw0	equ	0xFEB
  6556                           fsr0h	equ	0xFEA
  6557                           fsr0l	equ	0xFE9
  6558                           wreg	equ	0xFE8
  6559                           indf1	equ	0xFE7
  6560                           postinc1	equ	0xFE6
  6561                           postdec1	equ	0xFE5
  6562                           preinc1	equ	0xFE4
  6563                           plusw1	equ	0xFE3
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           bsr	equ	0xFE0
  6567                           indf2	equ	0xFDF
  6568                           postinc2	equ	0xFDE
  6569                           postdec2	equ	0xFDD
  6570                           preinc2	equ	0xFDC
  6571                           plusw2	equ	0xFDB
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    26
    Data        20
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     52      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[6]), STR_5(CODE[5]), 
		 -> STR_4(CODE[8]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[17]), 

    processo	PTR unsigned char [4] size(2) Largest target is 17
		 -> STR_4(CODE[8]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_inicio
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _leTeclado->_kpDebounce
    _leTeclado->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _inicio->___awmod
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___wmul->___awdiv
    _escolherProcesso->_lcdString
    _kpDebounce->_soWrite
    _atualizaSSD->_ssdDigit
    _ssdDigit->___awmod
    ___awmod->_bcd2dec
    ___awdiv->_dsReadData
    _atualizaLCD->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  429631
                                             47 COMRAM     5     5      0
                            _adcInit
                        _atualizaLCD
                        _atualizaSSD
                   _escolherProcesso
                             _inicio
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _leTeclado
                            _pwmInit
                            _ssdInit
                          _ssdUpdate
                              _timer
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   15297
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            0     0      0   32222
                         _kpDebounce
                             _kpRead
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   47276
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   19661
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _inicio                                               2     2      0  198262
                                             45 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _dsReadData                                           5     3      2  129475
                                             16 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (3) _i2cWriteByte                                         5     3      2   75827
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0   22240
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2cReadByte                                          9     8      1   52767
                                              7 COMRAM     9     8      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_write_bit                                        1     1      0   22284
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0   15124
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _clear_SDA                                            0     0      0    7116
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _i2c_read_bit                                         1     1      0   15147
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _read_SDA                                             0     0      0    4004
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _read_SCL                                             0     0      0    4004
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _clear_SCL                                            0     0      0    7116
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2    3439
                                             35 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     511
                                             29 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _escolherProcesso                                     0     0      0   52723
                         _kpDebounce
                             _kpRead
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   12297
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atualizaSSD                                          0     0      0    5332
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             45 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2728
                                             39 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2124
                                             21 COMRAM     8     4      4
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          0     0      0   40426
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   20501
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   19955
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   19925
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   19553
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   11661
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    4016
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3636
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3480
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _atualizaLCD
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
   _atualizaSSD
     ___awdiv
       _dsReadData (ARG)
         _i2cReadByte
           _i2c_read_bit
             _I2C_delay
             _clear_SCL
               _digitalWrite
               _pinMode
             _read_SCL
               _digitalRead
               _pinMode
             _read_SDA
               _digitalRead
               _pinMode
           _i2c_stop
             _I2C_delay
             _clear_SDA
               _digitalWrite
               _pinMode
             _read_SCL
             _read_SDA
           _i2c_write_bit
             _I2C_delay
             _clear_SCL
             _clear_SDA
             _read_SCL
             _read_SDA
         _i2cWriteByte
           _i2c_read_bit
           _i2c_start
             _I2C_delay
             _clear_SCL
             _clear_SDA
             _read_SCL
             _read_SDA
           _i2c_stop
           _i2c_write_bit
     ___awmod
       ___awdiv (ARG)
       _bcd2dec (ARG)
         ___awdiv
         ___wmul
           ___awdiv (ARG)
         _dsReadData (ARG)
       _dsReadData (ARG)
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
   _escolherProcesso
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _lcdCommand
     _lcdString
   _inicio
     ___awdiv
     ___awmod
     _bcd2dec
     _dsReadData
     _lcdChar
     _lcdCommand
     _lcdString
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _leTeclado
     _kpDebounce
     _kpRead
     _lcdCommand
   _pwmInit
     _pwmFrequency
       ___aldiv
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _timer
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     34      5E       1       74.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      15        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 22:56:11 2021

                        _i 003F                          _t 004B             _pulseEnablePin 1C96  
             lcdString@msg 000F                         l55 093C                         l58 1DBC  
                       l66 18B2                         l75 14EA                         l84 1844  
                       l78 17B4               ___awdiv@sign 001B         __size_of_I2C_delay 0002  
                       _v0 0045                         _v1 0044                         _v2 0043  
                       _v3 0042        ___wmul@multiplicand 0020              ??_i2cReadByte 0009  
   __size_of_i2c_write_bit 0058      i2cWriteByte@send_stop 0008             i2cReadByte@bit 000F  
                      l122 1BC6                        l213 10AE                        l302 1E86  
                      l214 10AA                        l311 19D4                        l209 0B8A  
                      l305 1CD6                        l314 202C                        l322 200E  
                      l218 10AA                        l243 0DD8                        l155 1C94  
                      l260 2074                        l308 1FA8                        l502 1E56  
                      l415 1A84                        l167 1C0C                        l328 1B30  
                      l280 11CC                        l441 1F5C                        l337 1662  
                      l425 0F44                        l282 11E4                        l362 1F82  
                      l515 191A                        l435 1D14                        l428 1ADA  
                      l461 1D84                        l509 197A                        l285 1E24  
                      l365 2046                        l438 1F32                        l446 1B7E  
                      l518 1FCE                        l470 1EDE                        l382 206A  
                      l296 2080                        l464 1D4C                        l480 1C52  
                      l385 1FF0                        l458 207E                        l467 1F08  
                      l379 205C                        l388 207C                        l487 1EB4  
                      l496 1A2C                        l762 1712                        l749 15AE  
                      l597 1424                        _PR2 000FCB                        _fim 0048  
             ___awmod@sign 002D                        wreg 000FE8               ?_atualizaLCD 0001  
             ?_atualizaSSD 0001           i2c_write_bit@bit 0007              ?_i2cWriteByte 0008  
   i2cWriteByte@send_start 000A            i2cReadByte@nack 000C            i2cReadByte@byte 000D  
                     l2101 0B32                       l2111 0BBA                       l2103 0B4C  
                     l2121 0C4E                       l2113 0BDA                       l2105 0B6C  
                     l2201 1B68                       l2131 0CEC                       l2123 0C74  
                     l2115 0BFC                       l2107 0B8C                       l2211 1CB6  
                     l2203 1B6A                       l2141 0D80                       l2133 0D08  
                     l2125 0C90                       l2117 0C18                       l2109 0BA8  
                     l2205 1B7A                       l2221 1EE0                       l2213 1D4E  
                     l2301 191E                       l2143 0D92                       l2135 0D1A  
                     l2127 0CA2                       l2119 0C2A                       l2071 096C  
                     l2207 1C96                       l2223 1EB6                       l2231 1C22  
                     l2311 1936                       l2303 192E                       l2145 0DB6  
                     l2137 0D3E                       l2129 0CC6                       l2081 0A04  
                     l2073 098C                       l2209 1CAA                       l2225 197E  
                     l2217 1D16                       l2241 1C46                       l2233 1C26  
                     l2321 1966                       l2313 194C                       l2305 1932  
                     l2401 1414                       l2139 0D64                       l2091 0A9E  
                     l2083 0A26                       l2075 09AE                       l2067 093E  
                     l2411 1506                       l2171 101A                       l2163 0FD2  
                     l2155 0F8A                       l2147 0F46                       l2251 1E90  
                     l2243 1C4A                       l2235 1C3A                       l2227 1C0E  
                     l2323 1976                       l2315 1950                       l2093 0ABA  
                     l2085 0A42                       l2077 09CA                       l2069 095A  
                     l2421 152C                       l2413 150A                       l2405 14EC  
                     l2501 1A40                       l2181 107E                       l2173 1036  
                     l2165 0FEE                       l2157 0FA6                       l2149 0F62  
                     l2253 1EA4                       l2261 19D8                       l2341 1904  
                     l2333 18C6                       l2245 1C4E                       l2229 1C1E  
                     l2237 1C3E                       l2317 1952                       l2351 1E64  
                     l2095 0AD4                       l2087 0A5C                       l2079 09E4  
                     l2191 1B46                       l2431 1562                       l2423 153E  
                     l2415 1518                       l2407 14F0                       l2511 1A6E  
                     l2503 1A44                       l2255 1EA8                       l2247 1E88  
                     l2271 1A0C                       l2263 19E8                       l2343 1914  
                     l2335 18E4                       l2327 18B6                       l2239 1C42  
                     l2319 1962                       l2353 1E68                       l2097 0AF4  
                     l2089 0A7C                       l2185 1F0A                       l2601 1D98  
                     l2433 1578                       l2425 1546                       l2441 158E  
                     l2417 1520                       l2409 14FE                       l2521 1664  
                     l2513 1A80                       l2505 1A54                       l2281 1E26  
                     l2257 1EAC                       l2249 1E8C                       l2273 1A1C  
                     l2265 19F0                       l2345 1918                       l2337 18E8  
                     l2361 131A                       l2099 0B16                       l2187 1F34  
                     l2451 1ADC                       l2603 1D9E                       l2443 159E  
                     l2435 1580                       l2427 154E                       l2419 1524  
                     l2531 1690                       l2523 1668                       l2507 1A58  
                     l2179 1062                       l2355 1FAA                       l2291 1E4C  
                     l2283 1E2A                       l2259 1EB0                       l2275 1A20  
                     l2267 19F4                       l2339 18FE                       l2515 1CD8  
                     l2611 1880                       l2371 134E                       l2363 131E  
                     l2349 1E58                       l2197 1B4A                       l2189 1B32  
                     l2453 1AE8                       l2445 15A6                       l2437 1582  
                     l2429 155C                       l2541 16C8                       l2533 1698  
                     l2525 1676                       l2509 1A6A                       l2621 1446  
                     l2357 1FC6                       l2293 1E54                       l2285 1E2E  
                     l2277 1A24                       l2269 19F8                       l2461 1C04  
                     l2517 1F86                       l2613 1884                       l2605 1846  
                     l2381 1390                       l2373 135E                       l2365 132C  
                     l2701 0E3A                       l1821 207A                       l2199 1B62  
                     l2455 1B04                       l2439 1588                       l2551 1702  
                     l2543 16DE                       l2535 16AA                       l2527 167E  
                     l2471 10C0                       l2631 1488                       l2623 1452  
                     l2287 1E42                       l2279 1A28                       l2615 188A  
                     l2607 1866                       l2391 13E2                       l2383 139C  
                     l2375 1362                       l2367 133C                       l2519 1F5E  
                     l2711 0E9A                       l2703 0E52                       l2449 2012  
                     l2297 1FF4                       l2457 1B08                       l2553 170A  
                     l2545 16E6                       l2537 16B2                       l2529 1682  
                     l2481 1170                       l2641 14DA                       l2633 14A2  
                     l2625 1458                       l2465 1C54                       l2289 1E48  
                     l2561 0688                       l2617 1898                       l2609 1872  
                     l2393 13E4                       l2385 13AA                       l2377 1372  
                     l2369 1340                       l2721 0EEE                       l2713 0EA2  
                     l2705 0E66                       l2801 130A                       l2651 1BBE  
                     l2299 2002                       l2547 16EC                       l2539 16BA  
                     l2491 11C0                       l2483 119A                       l2475 10E0  
                     l2643 14E2                       l2635 14AA                       l2627 1464  
                     l2619 1426                       l2459 1BC8                       l2571 0732  
                     l2563 06A8                       l2395 13EE                       l2387 13B4  
                     l2379 1388                       l2723 0F02                       l2715 0EBA  
                     l2707 0E6E                       l1771 17B6                       l1819 2076  
                     l2803 130E                       l2653 1BC2                       l2549 16F2  
                     l2645 1714                       l2493 11C4                       l2477 112C  
                     l2469 10B0                       l2637 14B8                       l2629 146A  
                     l2581 07EA                       l2573 0762                       l2565 06D8  
                     l2557 0676                       l2661 161C                       l2389 13D2  
                     l2397 13F4                       l2717 0ECE                       l2709 0E86  
                     l1781 17FC                       l1773 17C6                       l2741 11FA  
                     l2647 1B80                       l2495 11DC                       l2479 1152  
                     l2487 11A2                       l2639 14BE                       l2591 08B2  
                     l2583 081C                       l2575 0796                       l2567 070C  
                     l2559 067C                       l2671 165C                       l2663 1636  
                     l2399 1404                       l2655 1A86                       l2719 0ED6  
                     l1783 1802                       l1775 17CC                       l2751 1216  
                     l2743 11FE                       l2735 11E6                       l2649 1BBC  
                     l2489 11BA                       l2497 206C                       l2593 08B8  
                     l2585 0822                       l2577 079C                       l2569 0712  
                     l2673 1DF4                       l2665 1644                       l2657 15B0  
                     l2681 2034                       l2729 0F0A                       l1785 1810  
                     l1777 17DA                       l1881 205C                       l2761 123C  
                     l2753 121A                       l2745 1202                       l2737 11F2  
                     l2499 1A30                       l2595 0908                       l2587 082E  
                     l2579 07BA                       l2675 1E20                       l2667 1650  
                     l2659 1610                       l2683 2036                       l1787 1822  
                     l1779 17F4                       l2691 1FDE                       l2771 1262  
                     l2763 1240                       l2755 122A                       l2747 1206  
                     l2739 11F6                       l2597 1D86                       l2589 084E  
                     l2669 1656                       l2685 203A                       l2677 202E  
                     l2693 1FE6                       l2853 12E0                       l2781 1292  
                     l2773 1266                       l2765 1250                       l2757 1230  
                     l2749 1212                       l2599 1D8C                       l2679 2030  
                     l2855 0F1E                       l2695 1FEA                       l2687 1FD0  
                     l2791 12C4                       l2783 1296                       l2775 1276  
                     l2767 1254                       l2759 1238                       l2697 1FEE  
                     l2689 1FDA                       l2785 12AC                       l2777 1286  
                     l2769 125E                       l2699 0DDA                       l2787 12B4  
                     l2779 128A                       l2795 12CC                       l2789 12B8  
                     l2797 12F6                       l2799 1306                       STR_1 063D  
                     STR_2 064E                       STR_3 065C                       STR_4 0667  
                     STR_5 0670                       STR_6 066F                       STR_7 061B  
                     STR_8 062C                       u1100 17C6                       u1101 17C2  
                     u1110 17DA                       u1111 17D6                       u2000 1948  
                     u1120 17F4                       u1121 17F0                       u2010 1962  
                     u1130 1810                       u2011 195E                       u1131 180C  
                     u2020 1976                       u2100 13D2                       u1140 1822  
                     u2021 1972                       u2101 13CE                       u1141 181E  
                     u2030 18FE                       u2110 1404                       u1150 183C  
                     u2031 18FA                       u2111 1400                       u1151 1836  
                     u1400 09CA                       u2120 14FE                       u2040 1914  
                     u1160 183E                       u1401 09C6                       u2121 14FA  
                     u2041 1910                       u2050 1E86                       u1410 09E4  
                     u2130 1518                       u2210 112C                       u1170 206A  
                     u2051 1E82                       u1411 09E0                       u2131 1514  
                     u2211 1128                       u1171 2066                       u2140 153E  
                     u2300 1A80                       u2204 10FC                       u2060 132C  
                     u2141 153A                       u2301 1A7C                       u2205 10F6  
                     u2061 1328                       u2150 155C                       u2310 1676  
                     u2230 1170                       u2070 134E                       u2151 1558  
                     u2311 1672                       u2231 116C                       u2071 134A  
                     u1600 0C18                       u1520 0B32                       u1504 0AE6  
                     u1440 0A42                       u1424 09F6                       u1360 095A  
                     u2160 1578                       u2320 1690                       u2224 1144  
                     u2400 18AA                       u2080 1388                       u1601 0C14  
                     u1521 0B2E                       u1505 0AE2                       u1441 0A3E  
                     u1425 09F2                       u1361 0956                       u2161 1574  
                     u2321 168C                       u2225 113E                       u2401 18A4  
                     u2081 1384                       u1610 0C2A                       u1530 0B4C  
                     u1514 0B06                       u1450 0A5C                       u1434 0A16  
                     u1370 096C                       u2170 159E                       u2330 16AA  
                     u2250 11BA                       u2410 18AC                       u2090 13AA  
                     u1611 0C26                       u1531 0B48                       u1515 0B02  
                     u1451 0A58                       u1435 0A12                       u1371 0968  
                     u2171 159A                       u2331 16A6                       u2251 11B6  
                     u2091 13A6                       u2180 1B30                       u2340 16C8  
                     u2260 11DC                       u2244 118C                       u2420 1446  
                     u2181 1B2C                       u2341 16C4                       u2261 11D8  
                     u2245 1186                       u2421 1442                       u2350 16DE  
                     u2270 1A40                       u2190 10DC                       u2430 14B8  
                     u2351 16DA                       u2271 1A3C                       u2191 10D8  
                     u2431 14B4                       u1720 0D80                       u1704 0D30  
                     u1640 0C90                       u1624 0C40                       u1560 0BA8  
                     u1544 0B5E                       u1480 0ABA                       u1464 0A6E  
                     u1384 097E                       u2360 1702                       u2280 1A54  
                     u1800 0FEE                       u2440 14DA                       u1721 0D7C  
                     u1705 0D2C                       u1641 0C8C                       u1625 0C3C  
                     u1561 0BA4                       u1545 0B5A                       u1481 0AB6  
                     u1465 0A6A                       u1385 097A                       u2361 16FE  
                     u2281 1A50                       u1801 0FEA                       u2441 14D6  
                     u1730 0D92                       u1714 0D54                       u1650 0CA2  
                     u1634 0C64                       u1570 0BBA                       u1554 0B7E  
                     u1490 0AD4                       u1474 0A8E                       u1394 099E  
                     u2290 1A6A                       u2370 1866                       u2450 122A  
                     u1731 0D8E                       u1715 0D50                       u1651 0C9E  
                     u1635 0C60                       u1571 0BB6                       u1555 0B7A  
                     u1491 0AD0                       u1475 0A8A                       u1395 099A  
                     u2291 1A66                       u2371 1862                       u2451 1226  
                     u1820 1036                       u1900 1D4C                       u2380 1880  
                     u2460 1250                       u1821 1032                       u2381 187C  
                     u2461 124C                       u1814 1004                       u1910 1C1E  
                     u2390 1898                       u2470 1276                       u1815 1000  
                     u1911 1C1A                       u2391 1894                       u2471 1272  
                     u1744 0DA8                       u1680 0D08                       u1664 0CB8  
                     u1584 0BCC                       u1840 107E                       u1760 0F62  
                     u1920 1C3A                       u2480 12AC                       u1745 0DA4  
                     u1681 0D04                       u1665 0CB4                       u1585 0BC8  
                     u1841 107A                       u1761 0F5E                       u1921 1C36  
                     u2481 12A8                       u1754 0DCC                       u1690 0D1A  
                     u1674 0CDC                       u1594 0BEC                       u1834 104C  
                     u1930 1EA4                       u2490 1306                       u1755 0DC8  
                     u1691 0D16                       u1675 0CD8                       u1595 0BE8  
                     u1835 1048                       u1931 1EA0                       u2491 1302  
                     u1860 1B7A                       u1780 0FA6                       u1940 19E8  
                     u1861 1B76                       u1781 0FA2                       u1941 19E4  
                     u1854 1094                       u1774 0F74                       u1870 1D82  
                     u1950 1A0C                       u1855 1090                       u1775 0F70  
                     u1871 1D7C                       u1951 1A08                       u1880 1D84  
                     u1960 1A1C                       u1961 1A18                       u1794 0FBC  
                     u1890 1D4A                       u1970 1E42                       u1795 0FB8  
                     u1891 1D44                       u1971 1E3E                       u1980 192E  
                     u1981 192A                       u1990 1946                       u1991 1940  
                     _main 11E6                       _keys 0039           ??_PulseClockData 0007  
                     fsr2h 000FDA                       fsr1l 000FE1                       fsr2l 000FD9  
            ?_i2c_read_bit 0001                       prodh 000FF4                       prodl 000FF3  
                     start 0000            pushNibble@value 000C               ___param_bank 000000  
   __end_of_pulseEnablePin 1CD8            __end_of_bcd2dec 1C96            __end_of___aldiv 1426  
                    ?_main 0001            __end_of_adcInit 1BC8            __end_of___awdiv 15B0  
          __end_of___awmod 1714                      _T0CON 000FD5            ___awdiv@divisor 0018  
                    _T2CON 000FCA   __end_of_escolherProcesso 14EC            ___awdiv@counter 001A  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _PORTD 000F83  
                    _PORTE 000F84            __end_of_charKey 061B                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96            __end_of_lcdChar 2010            __end_of_lcdInit 1664  
           ??_i2cWriteByte 000A        __end_of_i2cReadByte 191C            __end_of_pinMode 0DDA  
                    _valor 0601                      _timer 17B6                      _state 004A  
                    _start 0049            __end_of_soWrite 1B80                      tablat 000FF5  
          __end_of_ssdInit 1ADC          __end_of_I2C_delay 2080            __end_of_pwmInit 2048  
            _i2c_write_bit 19D6                      status 000FD8             ??_i2c_read_bit 0007  
             pushNibble@rs 000A       __end_of_digitalWrite 0B8C            __initialization 1DBE  
          ?_pulseEnablePin 0001               __end_of_main 131A            i2cWriteByte@bit 000B  
         __end_of_i2c_stop 1EB6                     ??_main 0030              __activetblptr 000002  
     __size_of_digitalRead 016A                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     _ADRESH 000FC4                     _ADRESL 000FC3  
                   _CCPR2L 000FBB           ___awdiv@dividend 0016                     ?_timer 0001  
           ?_i2c_write_bit 0001                     _INTCON 000FF2         __size_of_i2c_start 0046  
                ??_bcd2dec 0026                  ??___aldiv 0009                     ___wmul 1FAA  
                ??_adcInit 0007                  ??___awdiv 001A                  ??___awmod 002C  
                   _kpInit 1DF4                     _kpRead 206C           __end_of_read_SDA 1D4E  
         __end_of_read_SCL 1D86                     _inicio 0676                     clear_0 1DE4  
                   _soInit 1CD8           ___awdiv@quotient 001C            ___awmod@divisor 002A  
                ??_lcdChar 000E                     isa$std 000001                _i2cReadByte 18B4  
                ??_lcdInit 000F            ___awmod@counter 002C           __end_of_ssdDigit 1A86  
             __pdataCOMRAM 004B                  ??_pinMode 0005               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_soWrite 0009                  ??_ssdInit 0007                  ??_pwmInit 0011  
         __end_of_pushByte 19D6       __size_of_atualizaLCD 0038       __size_of_atualizaSSD 00A2  
               __accesstop 0080    __end_of__initialization 1DEA              ___rparam_used 000001  
            pushByte@value 000D                pinMode@type 0003       __end_of_i2cWriteByte 197C  
           __pcstackCOMRAM 0001              __end_of_valor 0611              __end_of_timer 1846  
         i2cWriteByte@byte 0009         __size_of_delayMili 0030         __size_of_clear_SDA 002A  
       __size_of_clear_SCL 002A          __end_of_i2c_start 1C54         __size_of_leTeclado 006E  
     __end_of_i2c_read_bit 1E58         __size_of_lcdString 0056            ??_i2c_write_bit 0007  
                  ??_timer 0001                  ?_i2c_stop 0001      __size_of_digitalWrite 024E  
               _dsReadData 1BC8           dsReadData@result 0014                 _delayMicro 2080  
               _lcdCommand 2010                    ?___wmul 001E                    ?_kpInit 0001  
                  ?_kpRead 0001                    _CCP2CON 000FBA                    ?_inicio 0001  
                  ?_soInit 0001                 _kpDebounce 10B0         __size_of_timerInit 0008  
       __size_of_timerWait 0010          ?_escolherProcesso 0001         __size_of_ssdUpdate 016C  
     i2cReadByte@send_stop 0008         ??_escolherProcesso 0015               _digitalWrite 093E  
        __end_of_delayMili 1E88          __end_of_clear_SDA 1EE0          __end_of_clear_SCL 1F0A  
                ?_read_SDA 0001                  ?_read_SCL 0001                 ??_i2c_stop 0007  
         ??_pulseEnablePin 0007          __end_of_leTeclado 18B4                  _I2C_delay 207E  
                  __Hparam 0000                    __Lparam 0000                  ?_ssdDigit 002E  
        __end_of_lcdString 1B32            kpDebounce@tempo 0047                    _bcd2dec 1C54  
                  ___aldiv 131A                    _adcInit 1B80                    ___awdiv 14EC  
                  ___awmod 1664                  ?_pushByte 000A            __size_of___wmul 0026  
             __psmallconst 0600            __size_of_kpInit 0032            __size_of_kpRead 000A  
                  _charKey 0611                ssdDigit@val 002F                ssdDigit@pos 002E  
          __size_of_inicio 02C8                    __pcinit 1DBE                    _lcdChar 1FF2  
                  __ramtop 0600            __size_of_soInit 003E                    _lcdInit 15B0  
                  __ptext0 11E6                    __ptext1 205C                    __ptext2 1FD0  
                  __ptext3 2076                    __ptext4 17B6                    __ptext5 0DDA  
                  __ptext6 1A86                    __ptext7 202E                    __ptext8 1F5E  
                  __ptext9 131A                    _display 0046                    _pinMode 0B8C  
         ___awmod@dividend 0028           ___aldiv@dividend 0001                    _minutos 003D  
               delayMili@a 0001                 delayMili@i 0004                    _soWrite 1B32  
                  _ssdInit 1A86                    _pwmInit 202E                    _started 0041  
     end_of_initialization 1DEA              ?_PulseEnClock 0001                 ??_read_SDA 0007  
               ??_read_SCL 0007              __Lmediumconst 0000      __size_of_i2cWriteByte 0060  
              ?_dsReadData 0011             digitalRead@pin 0001              ?_pwmFrequency 000F  
           leTeclado@tecla 005D                ?_delayMicro 0001                 ?_I2C_delay 0001  
        __end_of_timerInit 207E          __end_of_timerWait 206C          __end_of_ssdUpdate 0F46  
               ??_ssdDigit 002F           ___aldiv@quotient 000B                    postdec1 000FE5  
                  postdec2 000FDD                ?_lcdCommand 0001                    postinc0 000FEE  
                  postinc2 000FDE                 ??_pushByte 000C      __size_of_i2c_read_bit 0032  
  __size_of_PulseClockData 002A              ??_digitalRead 0003                 _timerReset 1FD0  
              ?_kpDebounce 0001               ?_i2cReadByte 0008            i2c_read_bit@bit 0007  
               _pushNibble 1F84                 lcdString@i 0013               _i2cWriteByte 191C  
           ??_PulseEnClock 0007             ??_pwmFrequency 0011               _i2c_read_bit 1E26  
           __end_of___wmul 1FD0              __pidataCOMRAM 2048             __end_of_kpInit 1E26  
           __end_of_kpRead 2076             __end_of_inicio 093E             __end_of_soInit 1D16  
      __size_of_dsReadData 0046              ??_atualizaLCD 0015        __size_of_delayMicro 0002  
      start_initialization 1DBE              ??_atualizaSSD 0030        __end_of_digitalRead 10B0  
                _i2c_start 1C0E        __size_of_lcdCommand 001E        __size_of_kpDebounce 0136  
              ??_I2C_delay 0001          __size_of_i2c_stop 002E          kpDebounce@oldRead 0035  
        kpDebounce@newRead 0037                   ??___wmul 0022                   ??_kpInit 0007  
                 ??_kpRead 0003                   ??_inicio 002E                ?_timerReset 0001  
                 ??_soInit 0007          dsReadData@address 0011                __pbssCOMRAM 0035  
              ?_pushNibble 000A                 pinMode@pin 0001                 ?_i2c_start 0001  
    __end_of_i2c_write_bit 1A2E        __end_of_atualizaLCD 1DBE        __end_of_atualizaSSD 17B6  
__size_of_escolherProcesso 00C6          __size_of_read_SDA 0038          __size_of_read_SCL 0038  
                _delayMili 1E58                  _clear_SDA 1EB6                  _clear_SCL 1EE0  
                 ?_bcd2dec 0024                  _leTeclado 1846                   ?___aldiv 0001  
                 ?_adcInit 0001                   ?___awdiv 0016                   ?___awmod 0028  
        __size_of_ssdDigit 0058             _PulseClockData 1F34       __end_of_PulseEnClock 1F34  
                _lcdString 1ADC                _digitalRead 0F46                   ?_lcdChar 0001  
        __size_of_pushByte 005A                   ?_lcdInit 0001       __end_of_pwmFrequency 1F84  
              __smallconst 0600       __size_of_i2cReadByte 0068                   ?_pinMode 0001  
                 ?_soWrite 0007                   ?_ssdInit 0001                   ?_pwmInit 0001  
           __size_of_timer 0090           pwmFrequency@freq 000F            ___aldiv@divisor 0005  
          ___aldiv@counter 0009        __size_of_timerReset 0022             ___wmul@product 0022  
             ??_dsReadData 0013               ??_delayMicro 0003                 ?_delayMili 0001  
               ?_clear_SDA 0001                 ?_clear_SCL 0001     __end_of_PulseClockData 1F5E  
               ?_leTeclado 0001        __size_of_pushNibble 0026               ??_lcdCommand 000E  
                _timerInit 2076                  _timerWait 205C                  _ssdUpdate 0DDA  
               ?_lcdString 000F               ??_kpDebounce 000A          ___wmul@multiplier 001E  
          lcdCommand@value 000E         __end_of_dsReadData 1C0E                  main@tempo 0032  
              _atualizaLCD 1D86         __end_of_delayMicro 2082                _atualizaSSD 1714  
              ??_i2c_start 0007                _inicio$1310 002E           timerReset@ciclos 0003  
                copy_data0 1DD2         __end_of_lcdCommand 202E                 pushByte@rs 000A  
             lcdChar@value 000E                   _i2c_stop 1E88         __end_of_kpDebounce 11E6  
                 __Hrparam 0000                   __Lrparam 0000            ?_PulseClockData 0001  
               ?_timerInit 0001                 ?_timerWait 0001                 ?_ssdUpdate 0001  
         __size_of_bcd2dec 0042           __size_of___aldiv 010C           __size_of_adcInit 0048  
         __size_of___awdiv 00C4           __size_of___awmod 00B0    __size_of_pulseEnablePin 0042  
         __size_of_lcdChar 001E           __size_of_lcdInit 00B4           __size_of_pinMode 024E  
                 __ptext10 1846                   __ptext11 15B0                   __ptext20 19D6  
                 __ptext12 1F84                   __ptext21 1E88                   __ptext13 1DF4  
                 __ptext30 1426                   __ptext22 1EB6                   __ptext14 1CD8  
                 __ptext31 206C                   __ptext23 1E26                   __ptext15 0676  
                 __ptext40 1FF2                   __ptext32 10B0                   __ptext24 1D16  
                 __ptext16 1BC8                   __ptext41 2010                   __ptext33 0F46  
                 __ptext25 1D4E                   __ptext17 191C                   __ptext50 1B80  
                 __ptext42 197C                   __ptext34 1714                   __ptext26 1EE0  
                 __ptext18 1C0E                   __ptext51 0B8C                   __ptext43 1B32  
                 __ptext35 1A2E                   __ptext27 207E                   __ptext19 18B4  
                 __ptext44 1F0A                   __ptext36 1664                   __ptext28 1C54  
                 __ptext45 1F34                   __ptext37 14EC                   __ptext29 1FAA  
                 __ptext46 1C96                   __ptext38 1D86                   __ptext47 093E  
                 __ptext39 1ADC                   __ptext48 2080                   __ptext49 1E58  
         __size_of_soWrite 004E           __size_of_ssdInit 0056           __size_of_pwmInit 001A  
                 _read_SDA 1D16                   _read_SCL 1D4E              __size_of_main 0134  
         _escolherProcesso 1426                ??_delayMili 0003                ??_clear_SDA 0007  
              ??_clear_SCL 0007      __size_of_PulseEnClock 002A                   _ssdDigit 1A2E  
                 _segundos 003B                delayMicro@a 0001                   isa$xinst 000000  
              ??_leTeclado 000F               soWrite@value 0007                   _processo 0053  
    __size_of_pwmFrequency 0026                   _pushByte 197C                ??_lcdString 0011  
             ??_timerReset 0003                   main@slot 0034            timerReset@tempo 0001  
             ??_pushNibble 000C              ?_digitalWrite 0001      escolherProcesso@tecla 005B  
             _PulseEnClock 1F0A          digitalWrite@value 0003         __end_of_timerReset 1FF2  
             _pwmFrequency 1F5E                   soWrite@i 0009               bcd2dec@value 0024  
              ??_timerInit 0001                ??_timerWait 0001                ??_ssdUpdate 000A  
       __end_of_pushNibble 1FAA               ?_digitalRead 0001                kpDebounce@i 000D  
           ??_digitalWrite 0005               ___aldiv@sign 000A            digitalWrite@pin 0001  
